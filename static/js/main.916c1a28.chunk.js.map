{"version":3,"sources":["components/Payoff.js","store/actions/stockData.js","components/StockData.js","utility/constants.js","utility/Option.js","utility/options.js","utility/DS/ColorPicker.js","hooks/useUpdateEffect.js","components/Panel.js","context/liveData.js","components/Navigation/DropDownBtn.js","components/Navigation/Navigation.js","components/Search.js","components/Error/Error.js","components/SecurityInfo.js","components/Slider.js","components/StockAnyChart.js","components/PayoffHighChart.js","components/RealTimeChart.js","components/HighStock.js","App.js","store/reducers/stockData.js","index.js"],"names":["Payoff","data","d3","remove","useEffect","myData","Ydomain","nv","newChart","lineChart","margin","left","useInteractiveGuideline","showLegend","showYAxis","showXAxis","xAxis","axisLabel","tickFormat","yAxis","forceY","datum","call","windowResize","update","drawChart","className","id","updatePrice","price","type","updateTicker","ticker","updateVolatility","volatility","updateInterest","interest","StockData","liveMode","stockData","useSelector","state","dispatch","useDispatch","placeholder","value","currentPrice","disabled","onChange","e","stockActions","target","BUY","SELL","CALL","PUT","CASH","stockDataInitialState","round","num","toFixed","UNIXToDateString","UNIX_timestamp","a","Date","moment","format","date","d","year","getFullYear","month","getMonth","day","getDate","console","log","c","createDate","initialPortfolio","initialPortfolioId","amount","contractName","direction","strike","getRelativeStrike","impliedVol","N","getLongCondor","firstId","secondId","thirdId","fourthId","getShortCondor","getBullCallSpread","getBearPutSpread","getLongStraddle","getShortStraddle","getLongButterfly","getShortButterfly","Option","this","cts","evaluatePayoffFunc","option","cost","Math","max","parseInt","min","BlackScholes","optionType","S","X","T","r","v","d1","sqrt","d2","CND","exp","x","k","PI","ColorPicker","colors","index","result","length","useUpdateEffect","effect","dependencies","isInitialMount","useRef","current","Contract","props","removeContract","optionData","updateContract","useState","expirationDates","setExpirationDates","selectedDate","setSelectedDate","strikePrices","setStrikePrices","selectedStrike","setSelectedStrike","selectedDirection","setSelectedDirection","selectedType","setSelectedType","dateDiff","diff","setPrice","util","map","item","expirationDate","apiContract","find","toUpperCase","contract","options","ask","bid","strikesAtDate","cashContract","class","isNaN","style","verticalAlign","aria-label","onClick","aria-hidden","Panel","portfolio","setPortfolio","visualize","property","newPortfolio","premium","debitcredit","key","calculateTotal","toISOString","push","renderContracts","liveDataContext","React","createContext","setLiveMode","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","DropDownBtn","open","setOpen","anchorRef","handleClose","event","contains","handleListKeyDown","preventDefault","prevOpen","focus","Button","ref","aria-controls","undefined","aria-haspopup","color","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","flexGrow","menuButton","title","navbar","marginBottom","position","zIndex","MenuAppBar","classes","useContext","AppBar","Toolbar","Typography","variant","FormGroup","FormControlLabel","control","Switch","checked","prev","label","height","widht","Search","searchFunc","inputValue","setInputValue","Container","Row","Col","md","Autocomplete","symbols","getOptionLabel","displaySymbol","description","filterOptions","query","filter","o","includes","renderInput","params","TextField","noOptionsText","Error","children","data-dismiss","removeFunc","SecurityInfo","Card","Body","width","input","slider","InputSlider","setValue","gutterBottom","Grid","container","alignItems","xs","Slider","newValue","aria-labelledby","StockAnyChart","newData","forEach","pnt","stockDataTable","anychart","table","addData","chart","plot","area","mapAs","name","scroller","selectRange","instance","PayoffHighChart","highcharts","Highcharts","Component","App","mockData","mockOptions","rangeSelector","selected","text","labels","align","lineWidth","resize","enabled","top","offset","tooltip","split","series","columnData","i","HighStock","constructorType","setData","errors","setErrors","stockErrors","setStockErrors","setOptionData","minX","setMinX","maxX","setMaxX","stockChartData","setStockChartData","viewHighChart","setViewHighChart","viewHighStock","setViewHighStock","hcData","setHcData","setErrs","useCallback","message","setStockErrs","updateData","Object","keys","strikes","maxStrike","minStrike","Infinity","values","theoretical","average","change","floor","sort","b","getColor","minProfit","maxProfit","profitSum","theoreticalPL","profitAtStrike","blackScholesValue","y","strategyData","strategyTheoretical","res","seriesInfo","visible","point","fetchData","axios","get","process","actions","lastTradePrice","code","unix","t","h","l","Provider","val","onBlur","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6jt6BA2DeA,EAvDA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEhBC,YAAa,WAAWC,SA0CxB,OANAC,qBAAU,WACRH,GAnCgB,SAAC,GAA+B,IAAvBI,EAAsB,EAA5BJ,KAAcK,EAAc,EAAdA,QAEjCC,YAAY,WACV,IAAMC,EAAWD,SACdE,YACAC,OAAO,CAAEC,KAAM,MACfC,yBAAwB,GAExBC,YAAW,GACXC,WAAU,GACVC,WAAU,GAmBb,OAjBAP,EAASQ,MACNC,UAAU,aACVC,WAAWhB,SAAU,SAExBM,EAASW,MACNF,UAAU,cACVC,WAAWhB,SAAU,SAExBM,EAASY,OAAOd,GAEhBJ,SAAU,cACPmB,MAAMhB,GACNiB,KAAKd,GAGRD,QAASgB,aAAaf,EAASgB,QAExBhB,KAMDiB,CAAUxB,MAMlB,oCACE,yBAAKyB,UAAU,cACb,yBAAKC,GAAG,SACN,kC,QC9CGC,EAAc,SAACC,GAC1B,MAAO,CACLC,KARwB,eASxBD,UAISE,EAAe,SAACC,GAC3B,MAAO,CACLF,KAZyB,gBAazBE,WAISC,EAAmB,SAACC,GAC/B,MAAO,CACLJ,KArB6B,oBAsB7BI,eAISC,EAAiB,SAACC,GAC7B,MAAO,CACLN,KA3B2B,kBA4B3BM,aCgCWC,EA1DG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aACzCG,EAAWC,cAEjB,OACE,yBAAKjB,UAAU,uBACb,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,cACb,0BAAMA,UAAU,mBACd,yBAAKA,UAAU,cACb,2BAAOA,UAAU,0BAAjB,qBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,eACZlB,UAAU,eACVmB,MAAON,EAAUO,aACjBC,SAAUT,EACVU,SAAU,SAACC,GAAD,OACRP,EAASQ,EAAyBD,EAAEE,OAAON,aAKnD,yBAAKnB,UAAU,cACb,2BAAOA,UAAU,0BAAjB,kBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,aACZlB,UAAU,eACVmB,MAAON,EAAUL,WACjBc,SAAU,SAACC,GAAD,OACRP,EAASQ,EAA8BD,EAAEE,OAAON,aAKxD,yBAAKnB,UAAU,cACb,2BAAOA,UAAU,0BAAjB,qBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,gBACZlB,UAAU,eACVmB,MAAON,EAAUH,SACjBY,SAAU,SAACC,GAAD,OACRP,EAASQ,EAA4BD,EAAEE,OAAON,iB,iCClDnDO,EAAM,MACNC,EAAO,OACPC,EAAO,OACPC,EAAM,MACNC,EAAO,OAKPC,EAAwB,CACnCzB,OAAQ,cACRc,aAAc,IACdZ,WAAY,GACZE,SAAU,GAGCsB,EAAQ,SAACC,GAMpB,MAJkB,kBAARA,IACRA,GAAOA,IAECA,EAAIC,QAAQ,IAIXC,EAAmB,SAACC,GAC/B,IAAMC,EAAI,IAAIC,KAAsB,IAAjBF,GACnB,OAAOG,IAAOF,GAAGG,OAAO,eAabC,EAVM,WACjB,IAAIC,EAAI,IAAIJ,KACRK,EAAOD,EAAEE,cACTC,EAAQH,EAAEI,WACVC,EAAML,EAAEM,UACZC,QAAQC,IAAIP,GACZ,IAAIQ,EAAI,IAAIb,KAAKK,EAAO,EAAGE,EAAOE,GAClC,OAAOR,IAAOY,GAAGX,OAAO,cAGNY,GAEPC,EAAmB,CAC9BC,mBAAoB,CAClBC,OAAQ,EACRC,aAAc,qBACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQ,IACRtD,KAAMwB,IAMG+B,EAAoB,SAACvC,EAAcwC,EAAYC,GAG1D,OAAQzC,IAAgBA,IAFxBwC,GAA0B,KAE2BC,GAG1CC,EAAgB,SAAC1C,EAAcwC,GAC1C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GAEPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,GACrDxD,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,IACrDxD,KAAMwB,GAERqC,QAAS,CACPV,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,IACpDxD,KAAMwB,GAERsC,SAAU,CACRX,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,GACpDxD,KAAMwB,KAKCuC,EAAiB,SAAC/C,EAAcwC,GAC3C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,IACpDxD,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,GACpDxD,KAAMwB,GAERqC,QAAS,CACPV,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,IACrDxD,KAAMyB,GAERqC,SAAU,CACRX,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,GACrDxD,KAAMyB,KAKCuC,EAAoB,SAAChD,EAAcwC,GAC9C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,IACpDxD,KAAMwB,KAKCyC,EAAmB,SAACjD,EAAcwC,GAC7C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMyB,GAERmC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,IACrDxD,KAAMyB,KAKCyC,EAAkB,SAAClD,EAAcwC,GAC5C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMyB,KAKC0C,EAAmB,SAACnD,EAAcwC,GAC7C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMyB,KAmDC2C,EAAmB,SAACpD,EAAcwC,GAC7C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,IACrDxD,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMwB,GAERqC,QAAS,CACPV,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,IACpDxD,KAAMwB,KAKC6C,EAAoB,SAACrD,EAAcwC,GAC9C,MAAO,CACLG,QAAS,CACPR,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMwB,GAERoC,SAAU,CACRT,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,EAAY,IACpDxD,KAAMwB,GAERqC,QAAS,CACPV,OAAQ,EACRC,aAAc,UACdf,OACAgB,UAAW/B,EACXvB,MAAO,GACPuD,OAAQtC,EACRhB,KAAMyB,GAERqC,SAAU,CACRX,OAAQ,EACRC,aAAc,WACdf,OACAgB,UAAW9B,EACXxB,MAAO,GACPuD,OAAQC,EAAkBvC,EAAcwC,GAAa,IACrDxD,KAAMyB,KC7VS6C,EACnB,WAAYlB,GAAe,oBACzBmB,KAAKnB,aAAeA,EACpBmB,KAAKjB,OAAS,IACdiB,KAAKlC,KAAOmC,EACZD,KAAKlB,UAAYmB,EACjBD,KAAKvE,KAAOwE,EACZD,KAAKpB,OAAS,GCPLsB,EAAqB,SAACC,EAAQ3E,EAAOU,GAChD,IAAMkE,EAAOD,EAAO3E,MAAQ2E,EAAOvB,OACnC,OAAIuB,EAAO1E,OAASwE,EAEdE,EAAOrB,YAAcmB,EAGrBI,KAAKC,IAAI9E,EAAQ+E,SAASJ,EAAOpB,QAAS,GAAKoB,EAAOvB,OAASwB,EAI5DC,KAAKG,IAAI,EAAGL,EAAOpB,OAASvD,GAAS2E,EAAOvB,OAASwB,EACnDD,EAAO1E,OAASwE,EAErBE,EAAOrB,YAAcmB,EAGrBI,KAAKC,IAAIC,SAASJ,EAAOpB,QAAUvD,EAAO,GAAK2E,EAAOvB,OAASwB,EAI5DC,KAAKG,IAAI,EAAGhF,EAAQ2E,EAAOpB,QAAUoB,EAAOvB,OAASwB,EACnDD,EAAO1E,OAASwE,EAErBE,EAAOrB,YAAcmB,GAEfzE,EAAQU,EAAUO,cAAgB0D,EAAOvB,QAG3C1C,EAAUO,aAAejB,GAAS2E,EAAOvB,YAP5C,GAmBF,SAAS6B,EAAaC,EAAYC,EAAGC,EAAGC,EAAGC,EAAGC,GAEnDA,GAAQ,IACRD,GAAQ,IACR,IAAIE,GAAMX,KAAK9B,IAAIoC,EAAIC,IAAME,EAAKC,EAAIA,EAAK,GAAKF,IAAME,EAAIV,KAAKY,KAAKJ,IAChEK,EAAKF,EAAKD,EAAIV,KAAKY,KAAKJ,GAC5B,OAAIH,IAAeT,EACVU,EAAIQ,EAAIH,GAAMJ,EAAIP,KAAKe,KAAKN,EAAID,GAAKM,EAAID,GAEzCN,EAAIP,KAAKe,KAAKN,EAAID,GAAKM,GAAKD,GAAMP,EAAIQ,GAAKH,GAKtD,SAASG,EAAIE,GACX,GAAIA,EAAI,EACN,OAAO,EAAIF,GAAKE,GAEhB,IAAIC,EAAI,GAAK,EAAI,SAAYD,GAC7B,OACE,EACChB,KAAKe,KAAMC,EAAIA,EAAK,GAAKhB,KAAKY,KAAK,EAAIZ,KAAKkB,IAC3CD,GACC,UACCA,GAEIA,GAAK,YAAcA,GAAwB,YAAJA,EAAd,cADzB,a,YCpEOE,E,WAWjB,aAAe,yBATfC,OAAS,CACL,OACA,MACA,SACA,SACA,SACA,SAIAzB,KAAK0B,MAAQ,E,uDAKb,IAAMC,EAAU3B,KAAKyB,OAAOzB,KAAK0B,OASjC,OAPG1B,KAAK0B,OAAS1B,KAAKyB,OAAOG,OAEzB5B,KAAK0B,MAAQ,EAGb1B,KAAK0B,QAEFC,M,KClBA,SAASE,EAAgBC,GAA4B,IAApBC,EAAmB,uDAAJ,GACvDC,EAAiBC,kBAAO,GAE9BlI,qBAAU,WACJiI,EAAeE,QACjBF,EAAeE,SAAU,EAEzBJ,MAEDC,GCVL,IAAMI,EAAW,SAACC,GAAW,IACnBC,EAAqCD,EAArCC,eAAgBzI,EAAqBwI,EAArBxI,KAAM0I,EAAeF,EAAfE,WACtBC,EAAmBH,EAAnBG,eAFkB,EAQoBC,mBAAS,IAR7B,mBAQnBC,EARmB,KAQFC,EARE,OAScF,mBAAS,MATvB,mBASnBG,EATmB,KASLC,EATK,OAWcJ,mBAAS,CAC/C,kCAZwB,mBAWnBK,EAXmB,KAWLC,EAXK,OAckBN,qBAdlB,mBAcnBO,EAdmB,KAcHC,EAdG,OAewBR,mBAAS5I,EAAKkF,WAftC,mBAenBmE,EAfmB,KAeAC,EAfA,OAgBcV,mBAAS5I,EAAK6B,MAhB5B,mBAgBnB0H,EAhBmB,KAgBLC,EAhBK,KAmBpBlH,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAGzCmH,GAAYzF,MAAS0F,KAAK1J,EAAKkE,KAAM,SAAS,GAtB1B,EAyBA0E,qBAzBA,mBAyBnBhH,EAzBmB,KAyBZ+H,EAzBY,KA4B1BxJ,qBAAU,WACJuI,GACQA,GAAca,IAAiBK,GACzCD,EACE9C,EACE7G,EAAK6B,MACJS,EAAUO,cACV7C,EAAKmF,QACLsE,GACAnH,EAAUH,UACVG,EAAUL,YACX0B,QAAQ,OAMhBsE,GAAgB,WACdU,EAAe3I,EAAKiF,aAAc,QAASrD,KAC1C,CAACA,IAGJzB,qBAAU,WACR,GAAIuI,EAAY,CACd,IAAMG,EAAkBH,EAAW1I,KAAK6J,KACtC,SAACC,GAAD,OAAUA,EAAKC,kBAEjBjB,EAAmBD,MAEpB,IAGHZ,GAAgB,WACd,GAAIS,EAAY,CAEd,IAAMsB,EAActB,EAAW1I,KAAKiK,MAClC,SAACH,GAAD,OAAUA,EAAKC,iBAAmBhB,KAGpC,IAAKiB,EAAa,OAGlB,IAAMnI,EAAO7B,EAAK6B,KAAKqI,cAMjBC,EAHkBH,EAAYI,QAAQvI,GAGXoI,MAC/B,SAACH,GAAD,OAAWA,EAAK3E,UAAYgE,KAIP,QAAnBnJ,EAAKkF,UACPyE,EAASQ,EAASE,KAElBV,EAASQ,EAASG,KAItB3B,EAAe3I,EAAKiF,aAAc,SAAUkE,KAC3C,CAACA,EAAgBQ,IAEpB1B,GAAgB,WACd,GAAIS,EAAY,CAEd,IAAMsB,EAActB,EAAW1I,KAAKiK,MAClC,SAACH,GAAD,OAAUA,EAAKC,iBAAmBhB,KAIpC,IAAKiB,EAAa,OAGlB,IAAMnI,EAAO7B,EAAK6B,KAAKqI,cAMjBK,EAHkBP,EAAYI,QAAQvI,GAGNgI,KAAI,SAACC,GAAD,OAAUA,EAAK3E,UAGzD+D,EAAgBqB,GAGlB5B,EAAe3I,EAAKiF,aAAc,OAAQ8D,KACzC,CAACA,IAGJd,GAAgB,WACdU,EAAe3I,EAAKiF,aAAc,YAAaoE,KAC9C,CAACA,IAGJpB,GAAgB,WACdU,EAAe3I,EAAKiF,aAAc,OAAQsE,GAGtCA,IAAiBK,GAEnBD,EAASrH,EAAUO,gBAEpB,CAAC0G,IAEJ,IAAMiB,EAAejB,IAAiBK,EAEtC,OACE,4BAEE,4BACE,4BACElI,GAAG,YACHD,UAAU,eACVmB,MAAOyG,EACPtG,SAAU,SAACC,GAAD,OAAOsG,EAAqBtG,EAAEE,OAAON,SAE/C,uCACA,0CAIJ,4BACE,2BACEf,KAAK,SACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACR2F,EAAe3I,EAAKiF,aAAc,SAAUjC,EAAEE,OAAON,QAEvDA,MAAO5C,EAAKgF,UAIhB,4BACE,4BACEvD,UAAU,eACVsB,SAAU,SAACC,GAAD,OAAOwG,EAAgBxG,EAAEE,OAAON,QAC1CA,MAAO2G,GAEP,wCACA,uCACA,0CAIJ,6BACIiB,IACC9B,EACC,yBAAK+B,MAAM,cACT,4BACEA,MAAM,eACN/I,GAAG,4BACHqB,SAAU,SAACC,GAAD,OAAOoG,EAAkBpG,EAAEE,OAAON,SAE3CqG,EAAaY,KAAI,SAACjI,GAAD,OAChB,gCAAS8I,MAAM9I,GAAS,KAAOA,QAKrC,2BACEC,KAAK,SACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACR2F,EAAe3I,EAAKiF,aAAc,SAAUjC,EAAEE,OAAON,QAEvDA,MAAO5C,EAAKmF,WAKpB,6BACIqF,IACE9B,EAWA,yBAAK+B,MAAM,cACT,4BACEA,MAAM,eACN/I,GAAG,4BACHqB,SAAU,SAACC,GAAD,OAAOgG,EAAgBhG,EAAEE,OAAON,SAEzCiG,EAAgBgB,KAAI,SAAC3F,GAAD,OACnB,gCAASA,QAjBf,2BACErC,KAAK,OACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACR2F,EAAe3I,EAAKiF,aAAc,OAAQjC,EAAEE,OAAON,QAErDA,MAAO5C,EAAKkE,SAiBpB,wBAAIyG,MAAO,CAAEC,cAAe,WAC1B,2BAAIhJ,EAAQ5B,EAAKgF,SAGnB,wBAAI2F,MAAO,CAAEC,cAAe,WAC1B,4BAAK5K,EAAKkF,YAAc9B,EAAOxB,GAASA,GAAS5B,EAAKgF,OAAtD,MAGF,wBAAI2F,MAAO,CAAEC,cAAe,WAC1B,4BACE/I,KAAK,SACLgJ,aAAW,aACXpJ,UAAU,uBACVqJ,QAAS,kBAAMrC,EAAezI,EAAKiF,gBAEnC,0BAAM8F,cAAY,QAAlB,cAmIKC,EA5HD,SAACxC,GAAW,IAChByC,EAAmDzC,EAAnDyC,UAAWC,EAAwC1C,EAAxC0C,aAAyBxC,GAAeF,EAA1B2C,UAA0B3C,EAAfE,YAyBtCC,EAAiB,SAACjH,EAAI0J,EAAUxI,GACpC,IAAMyI,EAAY,eAAQJ,GAC1BI,EAAa3J,GAAI0J,GAAYxI,EAC7BsI,EAAaG,IAGT5C,EAAiB,SAAC/G,GACtB,IAAM2J,EAAY,eAAQJ,UACnBI,EAAa3J,GACpBwJ,EAAaG,IAnCQ,EAsCA,WACrB,IAAIC,EAAU,EACVC,EAAc,EACdvG,EAAS,EAEb,IAAK,IAAIwG,KAAOP,EAAW,CACzB,IAAMd,EAAWc,EAAUO,GAC3BF,IAAYnB,EAASvI,OAASuI,EAASnF,OAGvCuG,IADEpB,EAASjF,YAAc9B,GAAQ+G,EAASvI,QAAUuI,EAASvI,QAChCuI,EAASnF,OACtCA,IAAWmF,EAASnF,OAEtB,MAAO,CACLsG,QAASA,EAAQ3H,QAAQ,GACzB4H,YAAaA,EAAY5H,QAAQ,GACjCqB,UAIqCyG,GAAjCH,EA1De,EA0DfA,QAASC,EA1DM,EA0DNA,YAAavG,EA1DP,EA0DOA,OAI9B,OACE,yBAAKvD,UAAU,uBACb,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,cACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,yCACA,sCACA,oCACA,sCACA,sCACA,uCACA,4CACA,4BACE,4BACEI,KAAK,SACLJ,UAAU,wBACVqJ,QA7EI,WAClB,IAAMO,EAAY,eAAQJ,GACpBvJ,GAAK,IAAIqC,MAAO2H,cACtBL,EAAa3J,GAAM,IAAIyE,EAAOzE,GAC9BwJ,EAAaG,KAsED,cAUN,+BA7EgB,WACtB,IAAMtD,EAAS,GACf,IAAK,IAAIrG,KAAMuJ,EACblD,EAAO4D,KACL,kBAAC,EAAD,CACEjD,WAAYA,EACZD,eAAgBA,EAChBE,eAAgBA,EAChB3I,KAAMiL,EAAUvJ,GAChB8J,IAAK9J,KAIX,OAAOqG,EAiEE6D,GACD,4BACE,4BAAI,qCACJ,4BAAI,2BAAI5G,IACR,6BACA,6BACA,6BACA,4BAAI,2BAAIsG,IACR,4BAAI,2BAAIC,IACR,4BACE,4BACE1J,KAAK,SACLgJ,aAAW,aACXpJ,UAAU,uBACVqJ,QAAS,kBAAMI,EAAa,MAE5B,0BAAMH,cAAY,QAAlB,sB,uCCnWLc,GAAkBC,IAAMC,cALhB,CACnB1J,UAAU,EACV2J,YAAa,e,oGCQTC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,YAAaJ,EAAMK,QAAQ,QA6GhBC,GAzGK,SAAC,GAAsB,IAApBvB,EAAmB,EAAnBA,aAAmB,GACxBe,KACQH,IAAMlD,UAAS,IAFC,mBAEjC8D,EAFiC,KAE3BC,EAF2B,KAGlCC,EAAYd,IAAMzD,OAAO,MAHS,EAIH9F,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAA1DO,EAJgC,EAIhCA,aAAcZ,EAJkB,EAIlBA,WAMhB4K,EAAc,SAACC,EAAOzB,GACtBuB,EAAUtE,SAAWsE,EAAUtE,QAAQyE,SAASD,EAAM5J,UAG1DmI,GAAgBH,EAAaG,EAAaxI,EAAcZ,IACxD0K,GAAQ,KAGV,SAASK,EAAkBF,GACP,QAAdA,EAAMtB,MACRsB,EAAMG,iBACNN,GAAQ,IAKZ,IAAMO,EAAWpB,IAAMzD,OAAOqE,GAS9B,OARAZ,IAAM3L,WAAU,YACW,IAArB+M,EAAS5E,UAA6B,IAAToE,GAC/BE,EAAUtE,QAAQ6E,QAGpBD,EAAS5E,QAAUoE,IAClB,CAACA,IAGF,6BACE,kBAACU,GAAA,EAAD,CACEC,IAAKT,EACLU,gBAAeZ,EAAO,sBAAmBa,EACzCC,gBAAc,OACd1C,QAnCe,WACnB6B,GAAQ,SAACO,GAAD,OAAeA,MAmCnBO,MAAM,WALR,0BASA,kBAACC,GAAA,EAAD,CACEhB,KAAMA,EACNiB,SAAUf,EAAUtE,QACpBsF,UAAML,EACNM,YAAU,EACVC,eAAa,IAEZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,GAAA,EAAD,iBACMF,EADN,CAEEpD,MAAO,CACLuD,gBACgB,WAAdF,EAAyB,aAAe,mBAG5C,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBC,YAAaxB,GAC9B,kBAACyB,GAAA,EAAD,CACEC,cAAe7B,EACfhL,GAAG,iBACH8M,UAAWxB,GAEX,kBAACyB,GAAA,EAAD,CACE3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KADjC,oBAKA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,mBAGA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,iBAGA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,kBAGA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,kBAGA,kBAAC6E,GAAA,EAAD,CACE3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KADjC,mBAKA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,eAGA,kBAAC6E,GAAA,EAAD,CAAU3D,QAAS,SAAC9H,GAAD,OAAO6J,EAAY7J,EAAG4G,KAAzC,yBCrGZqC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJsC,SAAU,GAEZC,WAAY,CACVpC,YAAaJ,EAAMK,QAAQ,IAE7BoC,MAAO,CACLF,SAAU,GAEZG,OAAQ,CACNC,aAAc,OACdC,SAAU,WACVC,OAAQ,UAIG,SAASC,GAAT,GAAuC,IAAjB/D,EAAgB,EAAhBA,aAC7BgE,EAAUjD,KACVxJ,EAAWC,cAFkC,EAGjByM,qBAAWtD,IAArCxJ,EAH2C,EAG3CA,SAAU2J,EAHiC,EAGjCA,YAElB,OACE,kBAACoD,GAAA,EAAD,CAAQL,SAAS,SAAStN,UAAWyN,EAAQL,QAC3C,kBAACQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAK9N,UAAWyN,EAAQN,OAA5C,2BAGA,kBAAC,GAAD,CAAa1D,aAAcA,IAC3B,kBAACsE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAASvN,EACTU,SAAU,kBACRiJ,GAAY,SAAC6D,GAEX,OADa,IAATA,GAAepN,EVd9B,CACLZ,KAhCsB,gBU8CEgO,MAGZhF,aAAW,qBAGfiF,MAAO,sB,gEChDb7D,GAAYC,YAAW,CAC3BpC,KAAM,CAEJiG,OAAQ,OACRC,MAAO,UAkEIC,GA9DA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACGtH,mBAAS,IADZ,mBAC1BuH,EAD0B,KACdC,EADc,KAE3BlB,EAAUjD,KAgBhB,OACE,oCAEE,kBAACoE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,GAAA,EAAD,CACE/O,GAAG,iBACH0I,QAASsG,GACTC,eAAgB,SAACpK,GAAD,OACdA,EAAOqK,cAAgB,KAAOrK,EAAOsK,aAEvCC,cAAe,SAAC1G,EAAS5H,GAAV,OA1BL,SAAC4H,EAAS5H,GAE9B,IAAMuO,EAAQvO,EAAM2N,WAAWjG,cAI/B,OAFAkG,EAAcW,GAEVA,EAAM/I,QAAU,EAAU,GAGvBoC,EAAQ4G,QAAO,SAACC,GAAD,OAAOA,EAAEL,cAAcM,SAASH,MAiBTD,CAAc1G,EAAS5H,IAC1Df,UAAWyN,EAAQpF,KACnBqH,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtB,MAAM,gBACNP,QAAQ,eAGZ+B,cACEnB,EAAWnI,QAAU,EACjB,uBACA,sBAIV,kBAACuI,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACpD,GAAA,EAAD,CACEK,MAAM,UACN8B,QAAQ,YACRzE,QAAS,kBAAMoF,EAAWC,IAC1B1O,UAAWyN,EAAQpF,MAJrB,e,oBC7CGyH,GAhBD,SAAC/I,GACb,OACE,yBAAK/G,UAAU,sBAAsBmM,KAAK,SACxC,gCAASpF,EAAMgJ,UACf,4BACE3P,KAAK,SACLJ,UAAU,QACVgQ,eAAa,QACb5G,aAAW,QACXC,QAAStC,EAAMkJ,YAEf,0BAAM3G,cAAY,QAAlB,W,UCMO4G,GAdM,WACnB,IAAMrP,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAE/C,OACE,kBAACsP,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,wBAAIpH,MAAM,aAAanI,EAAUP,QACjC,uBAAG0I,MAAM,QAAT,UAAwBnI,EAAUO,cAClC,2BAAImB,IAAO,IAAID,MAAQE,OAAO,eAHhC,O,yCCHAgI,GAAYC,YAAW,CAC3BE,KAAM,CACJ0F,MAAO,KAETC,MAAO,CACLD,MAAO,IAETE,OAAQ,CAAEF,MAAO,SAGJ,SAASG,GAAT,GAA4D,IAArCrP,EAAoC,EAApCA,MAAOsP,EAA6B,EAA7BA,SAAUtD,EAAmB,EAAnBA,MAAOhI,EAAY,EAAZA,IAAKF,EAAO,EAAPA,IAC3DwI,EAAUjD,KAMhB,OACE,yBAAKxK,UAAWyN,EAAQ9C,MACtB,kBAACkD,GAAA,EAAD,CAAY5N,GAAG,eAAeyQ,cAAY,GACvCvD,GAEH,kBAACwD,GAAA,EAAD,CAAMC,WAAS,EAAC7F,QAAS,EAAG8F,WAAW,UACrC,kBAACF,GAAA,EAAD,CAAMtI,MAAI,GACR,kBAAC,KAAD,OAEF,kBAACsI,GAAA,EAAD,CAAMtI,MAAI,EAACyI,IAAE,GACX,kBAACC,GAAA,EAAD,CACE5L,IAAKA,EACLF,IAAKA,EACL9D,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CG,SAlBiB,SAAC+J,EAAO2F,GACjCP,EAASO,IAkBDC,kBAAgB,eAChBjR,UAAWyN,EAAQ8C,UAGvB,kBAACI,GAAA,EAAD,CAAMtI,MAAI,M,iCCJH6I,GAlCO,SAAC,GAAsB,IAApB3S,EAAmB,EAAnBA,KAAM+B,EAAa,EAAbA,OACvB6Q,EAAU,GAChB5S,EAAK6S,SAAQ,SAACC,GACZF,EAAQjH,KAAK,CACX/B,EAAsBkJ,EAAI,IAC1BA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,QAIR,IAAIC,EAAiBC,QAAcC,QAEnCF,EAAeG,QAAQN,GAEvB,IAAIO,EAAQH,WAOZ,OALgBG,EAAMC,KAAK,GACjBC,KAAKN,EAAeO,MAAM,CAAE1Q,MAAO,KAAM2Q,KAAKxR,GACxDoR,EAAMK,WAAWH,KAAKN,EAAeO,MAAM,CAAE1Q,MAAO,KACpDuQ,EAAMM,YAAY,aAAc,cAG9B,oCACIN,EAGA,kBAAC,KAAD,CAAUrB,MAAM,OAAO/B,OAAQ,IAAK2D,SAAUP,EAAOvE,MAAO7M,IAF5D,wD,wCCvBO4R,GAJS,SAAC,GAAc,IAAZ3T,EAAW,EAAXA,KACzB,OAAO,kBAAC,KAAD,CAAiB4T,WAAYC,KAAYzJ,QAASpK,K,+DCAxB8T,Y,mBCilBpBC,OAzFf,YAA4B,IAAbC,EAAY,EAAZA,SACbtP,QAAQC,IAAIqP,GACZ,IAQIC,EAAc,CAChBC,cAAe,CACbC,SAAU,GAGZvF,MAAO,CACLwF,KAAM,mBAGRlT,MAAO,CACL,CACEmT,OAAQ,CACNC,MAAO,QACP7M,GAAI,GAENmH,MAAO,CACLwF,KAAM,QAERrE,OAAQ,MACRwE,UAAW,EACXC,OAAQ,CACNC,SAAS,IAGb,CACEJ,OAAQ,CACNC,MAAO,QACP7M,GAAI,GAENmH,MAAO,CACLwF,KAAM,UAERM,IAAK,MACL3E,OAAQ,MACR4E,OAAQ,EACRJ,UAAW,IAIfK,QAAS,CACPC,OAAO,GAGTC,OAAQ,CACN,CACEjT,KAAM,cACN7B,KAAMgU,GAER,CACEnS,KAAM,SACN7B,KAAO,WAGL,IAFA,IAAI+U,EAAa,GAERC,EAAI,EAAGA,EAAIhB,EAAShM,OAAQgN,IACnCD,EAAWpJ,KAAK,CACdqI,EAASgB,GAAG,GACZhB,EAASgB,GAAG,KAGhB,OAAOD,EATF,GAWP7T,MAAO,KAKb,OACE,yBAAKO,UAAU,OAEX,kBAAC,KAAD,CACEmS,WAAYqB,KACZC,gBAAiB,aACjB9K,QAAS6J,MCxCJF,GA9gBH,WAAO,IAAD,EACkBnL,mBAASgB,GAD3B,mBACTqB,EADS,KACEC,EADF,OAEQtC,mBAAS,MAFjB,mBAET5I,EAFS,KAEHmV,EAFG,OAGYvM,mBAAS,MAHrB,mBAGTwM,EAHS,KAGDC,EAHC,OAIsBzM,mBAAS,MAJ/B,mBAIT0M,EAJS,KAIIC,EAJJ,KAKVjT,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAL/B,EAMgBsG,oBAAS,GANzB,mBAMTvG,EANS,KAMC2J,EAND,OAOoBpD,qBAPpB,mBAOTF,EAPS,KAOG8M,EAPH,OAQQ5M,qBARR,mBAQT6M,EARS,KAQHC,EARG,OASQ9M,qBATR,mBAST+M,GATS,KASHC,GATG,QAU4BhN,qBAV5B,qBAUTiN,GAVS,MAUOC,GAVP,SAW0BlN,oBAAS,GAXnC,qBAWTmN,GAXS,MAWMC,GAXN,SAY0BpN,oBAAS,GAZnC,qBAYTqN,GAZS,MAYMC,GAZN,SAaYtN,mBAAS,MAbrB,qBAaTuN,GAbS,MAaDC,GAbC,MAcVxT,GAAQ,CAAEP,WAAU2J,eACpBvJ,GAAWC,cAfD,GAgBiBH,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAAtDL,GAhBQ,GAgBRA,WAAYE,GAhBJ,GAgBIA,SAGdkU,GAAUC,uBAAY,SAACC,GAC3BlB,EAAU,kBAAC,GAAD,CAAO3D,WAAY,kBAAM2D,EAAU,QAAQkB,MACpD,IAGGC,GAAeF,uBAAY,SAACC,GAChChB,EACE,kBAAC,GAAD,CAAO7D,WAAY,kBAAM6D,EAAe,QAAQgB,MAEjD,IAGGE,GAAaH,uBAAY,WAE7B,GAAsC,IAAlCI,OAAOC,KAAK1L,GAAWjD,OACzB,OAAOqO,GAAQ,8BAGjB,IAAK/T,EAAUO,cAAgB,EAC7B,OAAOwT,GAAQ,oCAGjB,GAAI3L,OAAOpI,EAAUH,UACnB,OAAOkU,GAAQ,sCAEjB,IAAMO,EAAU,GACZC,EAAY,EACZC,EAAYC,IAEVC,EAAS,GACTC,EAAc,GAgBpB,IAAK,IAAIvV,KAbLiU,MACGA,GAAOkB,IAAWA,GAAalB,KAC/BA,GAAOmB,IAAWA,GAAanB,IACpCiB,EAAQjL,MAAMgK,KAGZF,KACGA,EAAOoB,IAAWA,GAAapB,IAC/BA,EAAOqB,IAAWA,GAAarB,GACpCmB,EAAQjL,MAAM8J,IAIDxK,EAAW,CACxB,IAAMd,EAAWc,EAAUvJ,GACrB8I,EAAeL,EAAStI,OAAS+H,EACjCzE,EAASqF,GAAgBlI,EAAUO,cAAgBsH,EAAShF,OAC5DjB,EAAOiG,EAASjG,KAItB,GAHeiG,EAASnF,QAGV,EAAG,OAAOqR,GAAQ,+BAGhC,IAAK7L,EAAc,CAEjB,GAAIrF,GAAU,EAAG,OAAOkR,GAAQ,qCAGhC,IAAKnS,GAAQF,MAAS0F,KAAKxF,GAAQ,EACjC,OAAOmS,GAAQ,6BAInBO,EAAQjL,KAAK/B,EAAWzE,IAGpBA,EAAS0R,IAAWA,EAAY1R,GAChCA,EAAS2R,IAAWA,EAAY3R,GAGtC,IAAM+R,GAAWL,EAAYC,GAAa,EACtCpQ,EAAM,EAUNE,EAAM,EAUJuQ,IAbJzQ,EAJGiP,GAIGlP,KAAKC,KAAKiP,GAAMkB,GAFhBpQ,KAAK2Q,MAAMP,EAAsB,GAAVK,KAY7BtQ,EAJG6O,EAIGhP,KAAKG,KAAK6O,EAAMqB,GAFhBrQ,KAAK2Q,MAAMN,EAAsB,GAAVI,KAKF,GAG7BN,EAAQjL,KAAK/E,GACbgQ,EAAQjL,KAAKjF,GAEbkP,GAAQlP,GACRgP,EAAQ9O,GAIR,IAFA,IAAIoO,EAAIpO,EAEDoO,EAAItO,GAETkQ,EAAQjL,KAAK/B,EAAWoL,IACxBA,GAAKmC,EAIPP,EAAQS,MAAK,SAACvT,EAAGwT,GAAJ,OAAUxT,EAAIwT,KAE3B,IAAMvP,EAAS,GAGTF,EAAS,IAAID,EAGnB,IAAK,IAAIlG,KAAMuJ,EAAW,CACxB,IAAMd,EAAWc,EAAUvJ,GACvB8J,EACFrB,EAASjF,UAAY,IAAMiF,EAAStI,KAAO,IAAMsI,EAAShF,OAExDgF,EAAStI,OAAS+H,IACpB4B,EACErB,EAASjF,UACT,IACAiF,EAAStI,KACT,KACAS,EAAUO,cAGdkF,EAAO4D,KAAK,CACVqL,OAAQ,GACRxL,MACAiC,MAAO5F,EAAO0P,WACdzU,UAAU,IASd,IAJA,IAAI0U,EAAYT,IACZU,GAAaV,IAGjB,MAAmBH,EAAnB,eAA4B,CAAvB,IAAIzR,EAAM,KACTuS,EAAY,EACZC,EAAgB,EAEhB3C,EAAI,EACR,IAAK,IAAItT,KAAMuJ,EAAW,CACxB,IAAMd,EAAWc,EAAUvJ,GAGrBkW,EAAiBhO,EACrBA,EAAwBO,EAAUhF,EAAQ7C,IAItCmH,GAAYzF,MAAS0F,KAAKS,EAASjG,KAAM,SAAS,GAElD2T,EAAoBjO,EACxBO,EAAStI,MACRsD,GACAgF,EAAShF,QACTsE,GACAnH,EAAUH,UACVG,EAAUL,YAITkI,EAAStI,OAAS+H,EAEpB+N,IAAkBC,EAGdzN,EAASjF,YAAc0E,EAEzB+N,IACGE,EAAoB1N,EAASvI,OAASuI,EAASnF,OAElD2S,IACGxN,EAASvI,MAAQiW,GAAqB1N,EAASnF,OAKlD4S,EAAiBH,IAAWA,EAAYG,GAExCA,EAAiBJ,IAAWA,EAAYI,GAG5C7P,EAAOiN,GAAGgC,OAAOrL,KAAK,CACpBlE,EAAGmC,EAAWzE,GACd2S,EAAGlO,EAAWgO,KAIhBF,GAAa9N,EAAWgO,GACxB5C,IAIFgC,EAAOrL,KAAK,CAAElE,EAAGmC,EAAWzE,GAAS2S,EAAGlO,EAAW8N,KACnDT,EAAYtL,KAAK,CAAElE,EAAGmC,EAAWzE,GAAS2S,EAAGlO,EAAW+N,KAG1D,IAAMtX,EAAU,CAACoG,KAAK2Q,MAAkB,IAAZI,GAAkB/Q,KAAK2Q,MAAkB,IAAZK,IAGnDM,EAAe,CACnBf,SACAxL,IAAK,WACLiC,MAAO,QACP3K,UAAU,GAINkV,EAAsB,CAC1BhB,OAAQC,EACRzL,IAAK,QACLiC,MAAO,OACP3K,UAAU,GAUZ,GAPAiF,EAAO4D,KAAKqM,GAEZjQ,EAAO4D,KAAKoM,GAGZ1C,EAAU,MACV3Q,QAAQC,IAAIoD,GACRgO,GAAe,CACjB,IADiB,EACXkC,EAAM,GADK,cAGElQ,GAHF,IAGjB,2BAA2B,CAAC,IAAnB+M,EAAkB,QACnBoD,GAAa,CACjBlY,KAAM,GACNmY,SAAUrD,EAAOhS,SACjB2K,MAAOqH,EAAOrH,MACd8F,KAAMuB,EAAOtJ,KAEfyM,EAAItM,KAAKuM,IAPgB,sBAQPpD,EAAOkC,QARA,IAQzB,8BAAiC,CAAC,IAAzBoB,GAAwB,SAC/BF,GAAWlY,KAAK2L,KAAK,EAAEyM,GAAM3Q,GAAI2Q,GAAMN,KAThB,oCAHV,gCAgBjB,OAAO1B,GAAU,CACftB,OAAQmD,EACRlX,MAAO,CACL6N,MAAO,CACLwF,KAAM,oBAGVlT,MAAO,CACL0N,MAAO,CACLwF,KAAM,eAGVjB,MAAO,CACLtR,KAAM,UAER+M,MAAO,CACLwF,KAAM,YAKZe,EAAQ,CAAEnV,KAAM+H,EAAQ1H,cACvB,CAAC4K,EAAW3I,EAAW+T,GAASV,GAAMF,EAAMM,KAG/C9N,GAAgB,WAEdoN,EAAU,MACVnK,EAAa,IACbiK,EAAQ,MACRK,EAAc,QACb,CAACnT,IAGJ4F,GAAgB,WACdiD,EAAa,IACb4K,GAAkB,MAClBuC,OACC,CAAC3P,IAGJT,GAAgB,WACdwO,OACC,CAACxL,EAAWwL,GAAYV,KAG3B,IAAM7F,GAAU,uCAAG,WAAOnO,GAAP,iBAAA+B,EAAA,+EAEQwU,KAAMC,IAC3B,8DAAuDxW,EAAvD,WACEyW,wBAJW,gBAEPxY,EAFO,EAEPA,KAIRwV,EAAcxV,GACdyC,GAASgW,EAAoBzY,EAAK0Y,iBAClCjW,GAASgW,EAAqBzY,EAAK2Y,OACV,IAArB3Y,EAAKA,KAAKgI,OACZwO,GjBxVwB,sCiBwVYjB,GAEpCA,EAAe,MAZF,kDAefiB,GjB5VyB,8CiB4VUjB,GAfpB,0DAAH,sDAmBV8C,GAAS,uCAAG,WAAOtW,GAAP,yBAAA+B,EAAA,6DACZ8U,EAAOnS,KAAKhD,OAAO,IAAIM,KAAS,KADpB,SAEOuU,KAAMC,IAC3B,6FAAsFK,EAAtF,WACEJ,wBAJY,OAWhB,IAXgB,SAERxY,EAFQ,EAERA,KAKFgI,EAAShI,EAAK4E,EAAEoD,OAEhBD,EAAS,GAENiN,EAAI,EAAGA,EAAIhN,EAAQgN,IAC1BjN,EAAO4D,KAAK,CAAC3L,EAAK6Y,EAAE7D,GAAIhV,EAAKiR,EAAE+D,GAAIhV,EAAK8Y,EAAE9D,GAAIhV,EAAK+Y,EAAE/D,GAAIhV,EAAK4E,EAAEoQ,KAGlEtQ,QAAQC,IAAIoD,GACZ+N,GAAkB/N,GAhBF,4CAAH,sDAmBf,OACE,oCACE,kBAAC8D,GAAgBmN,SAAjB,CAA0BpW,MAAOA,IAC/B,kBAAC,GAAD,CAAYsI,aAAcA,IAC1B,kBAACmF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACe,gBAArBlO,EAAUP,QAA4B,kBAAC,GAAD,QAG3C,kBAACuO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACNnO,GAAY,kBAAC,GAAD,CAAQ6N,WAAYA,KAChCoF,IAGL,kBAAChF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACE9H,WAAYA,EACZuC,UAAWA,EACXC,aAAcA,EACdC,UAAWsL,GACX5T,aAAc,QAIpB,kBAACyN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAWnO,SAAUA,IACrB,yBAAKZ,UAAU,uBACb,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,cACb,kBAAC,GAAD,CACEmF,IAAK,EACLF,IAAK,IACLkI,MAAO,aACPhM,OAAQX,GACRiQ,SAAU,SAAC+G,GAAD,OAASxW,GAASgW,EAAyBQ,OAEvD,kBAAC,GAAD,CACErS,KAAM,GACNF,IAAK,IACLkI,MAAO,WACPhM,OAAQT,GACR+P,SAAU,SAAC+G,GAAD,OAASxW,GAASgW,EAAuBQ,OAErD,6BACA,6BACA,gCAIN,kBAAC1I,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACN4E,GAAkB,KACnB,yBAAK3T,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBAAf,gBAEE,kBAAC+N,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,SAAUmG,GACVhT,SAAU,kBACRiT,IAAiB,SAACnG,GAAD,OAAWA,MAE9BhF,aAAW,qBAGfiF,MAAO,wBAIb,yBAAKrO,UAAU,cACXsU,GAGA,kBAAC,GAAD,CAAW/V,KAAMmW,KAFjB,kBAAC,EAAD,CAAQnW,KAAMA,UAW5B,kBAACsQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAK/O,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,cACb,kBAAC8O,GAAA,EAAD,CAAKC,GAAI,GACP,2BACE3O,KAAK,SACLJ,UAAU,mCACVkB,YAAY,OACZuW,OAAQ,SAAClW,GAAD,OAAO0S,EAAQ1S,EAAEE,OAAON,WAIpC,kBAAC2N,GAAA,EAAD,CAAKC,GAAI,GACP,2BACE3O,KAAK,SACL+E,IAAI,IACJF,IAAI,OACJjF,UAAU,mCACVkB,YAAY,OAEZuW,OAAQ,SAAClW,GAAD,OAAO4S,GAAQ5S,EAAEE,OAAON,mBAWpD,kBAACyN,GAAA,EAAD,KACE,yBAAK5O,UAAU,uBACb,yBAAKA,UAAU,iBACZa,EAAUP,OAAQ,IACnB,kBAACyN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,SAAUqG,GACVlT,SAAU,kBAAMmT,IAAiB,SAACrG,GAAD,OAAWA,MAC5ChF,aAAW,qBAGfiF,MAAO,wBAIb,yBAAKrO,UAAU,cACZoU,IAAkBnN,EACjB,oCACGuN,GACC,kBAAChB,GAAD,CAAWjB,SAAU6B,KAErB,kBAAC,GAAD,CAAU7V,KAAM6V,GAAgB9T,OAAQO,EAAUP,UAItD,oCACG2G,GAAcrG,EACb,0CAEA,qCACIA,GACA,oCACE,+EC/gBX8W,GAAY,eAAQ3V,G,SCD3B4V,GAAcC,aAAgB,CAClC/W,UDEa,WAAmC,IAAlCE,EAAiC,uDAAzB2W,GAAcG,EAAW,uCAC/C,OAAQA,EAAOzX,MACb,IpBbwB,eoBctB,OAAO,2BAAKW,GAAZ,IAAmBK,aAAcyW,EAAO1X,QAC1C,IpBd6B,oBoBe3B,OAAO,2BAAKY,GAAZ,IAAmBP,WAAYqX,EAAOrX,aACxC,IpBf2B,kBoBgBzB,OAAO,2BAAKO,GAAZ,IAAmBL,SAAUmX,EAAOnX,WACtC,IpBhByB,gBoBiBvB,OAAO,2BAAKK,GAAZ,IAAmBT,OAAQuX,EAAOvX,SACpC,IpBjBsB,aoBkBpB,OAAO,eAAKyB,GACd,QAEE,OAAOhB,MCbP+W,GAAQC,aAAYJ,IAE1BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.916c1a28.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as nv from \"nvd3\";\n\nconst Payoff = ({ data }) => {\n  // Clear the Charts\n  d3.selectAll(\"svg > *\").remove();\n\n  const drawChart = ({ data: myData, Ydomain }) => {\n    /*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */\n    nv.addGraph(() => {\n      const newChart = nv.models\n        .lineChart()\n        .margin({ left: 100 }) //Adjust chart margins to give the x-axis some breathing room.\n        .useInteractiveGuideline(false) //We want nice looking tooltips and a guideline!\n        // .duration(1500) //how fast do you want the lines to transition? Was removed, caused wrong data points positions after doing a transition bug https://github.com/novus/nvd3/issues/2018\n        .showLegend(true) //Show the legend, allowing users to turn on/off line series.\n        .showYAxis(true) //Show the y-axis\n        .showXAxis(true); //Show the x-axis\n\n      newChart.xAxis //Chart x-axis settings\n        .axisLabel(\"Price ($)\")\n        .tickFormat(d3.format(\",.2f\"));\n\n      newChart.yAxis //Chart y-axis settings\n        .axisLabel(\"Profit ($)\")\n        .tickFormat(d3.format(\",.2f\"));\n\n      newChart.forceY(Ydomain);\n\n      d3.select(\"#chart svg\") //Select the <svg> element you want to render the chart in.\n        .datum(myData) //Populate the <svg> element with chart data...\n        .call(newChart); //Finally, render the chart!\n\n      // Update the chart when window resizes.\n      nv.utils.windowResize(newChart.update);\n\n      return newChart;\n    });\n  };\n\n  // UseEffect with no deps so that a chart is always rendered\n  useEffect(() => {\n    data && drawChart(data);\n  });\n\n  // console.log(\"Payoff Rendered\");\n\n  return (\n    <>\n      <div className=\"panel-body\">\n        <div id=\"chart\">\n          <svg></svg>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Payoff;\n","export const UPDATE_PRICE = \"UPDATE_PRICE\";\nexport const UPDATE_VOLATILITY = \"UPDATE_VOLATILITY\";\nexport const UPDATE_INTEREST = \"UPDATE_INTEREST\";\nexport const UPDATE_TICKER = \"UPDATE_TICKER\";\nexport const RESET_DATA = \"RESET_DATA\"\n\nexport const updatePrice = (price) => {\n  return {\n    type: UPDATE_PRICE,\n    price,\n  };\n};\n\nexport const updateTicker = (ticker) => {\n  return {\n    type: UPDATE_TICKER,\n    ticker\n  };\n};\n\nexport const updateVolatility = (volatility) => {\n  return {\n    type: UPDATE_VOLATILITY,\n    volatility,\n  };\n};\n\nexport const updateInterest = (interest) => {\n  return {\n    type: UPDATE_INTEREST,\n    interest,\n  };\n};\n\nexport const resetData = () => {\n  return {\n    type: RESET_DATA\n  }\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as stockActions from \"../store/actions/stockData\";\n\nconst StockData = ({ liveMode }) => {\n  const stockData = useSelector((state) => state.stockData);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"panel panel-primary\">\n      <div className=\"panel-heading\">Underlying stock</div>\n      <div className=\"panel-body\">\n        <form className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Current price ($)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"CurrentPrice\"\n                className=\"form-control\"\n                value={stockData.currentPrice}\n                disabled={liveMode}\n                onChange={(e) =>\n                  dispatch(stockActions.updatePrice(e.target.value))\n                }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Volatility (%)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"Volatility\"\n                className=\"form-control\"\n                value={stockData.volatility}\n                onChange={(e) =>\n                  dispatch(stockActions.updateVolatility(e.target.value))\n                }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Interest Rate (%)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"Interest Rate\"\n                className=\"form-control\"\n                value={stockData.interest}\n                onChange={(e) =>\n                  dispatch(stockActions.updateInterest(e.target.value))\n                }\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default StockData;\n","import moment from \"moment\";\nexport const BUY = \"Buy\";\nexport const SELL = \"Sell\";\nexport const CALL = \"Call\";\nexport const PUT = \"Put\";\nexport const CASH = \"Cash\";\n\nexport const STOCK_NO_OPTIONS = \"This Stock Has No Available Options\";\nexport const STOCK_ERR_FETCH = \"Unable To Fetch Stock Data, Try again Later\";\n\nexport const stockDataInitialState = {\n  ticker: \"Theoretical\",\n  currentPrice: 100,\n  volatility: 30,\n  interest: 2,\n};\n\nexport const round = (num) => {\n  // If it is a string convert it to num\n  if(typeof num === 'string'){\n    num = +num;\n  }\n  let res = num.toFixed(2);\n  return +res;\n}\n\nexport const UNIXToDateString = (UNIX_timestamp) => {\n  const a = new Date(UNIX_timestamp * 1000);\n  return moment(a).format(\"YYYY-MM-DD\");\n}\n\nconst createDate = () => {\n  var d = new Date();\n  var year = d.getFullYear();\n  var month = d.getMonth();\n  var day = d.getDate();\n  console.log(year)\n  var c = new Date(year + 1, month, day);\n  return moment(c).format(\"YYYY-MM-DD\")\n};\n\nexport const date = createDate()\n\nexport const initialPortfolio = {\n  initialPortfolioId: {\n    amount: 1,\n    contractName: \"initialPortfolioId\",\n    date,\n    direction: BUY,\n    price: \"\", // To be calculated in the Contract Component\n    strike: 100,\n    type: CALL,\n  },\n};\n\n// Function that takes in currentPrice, impliedVolatility and a number representing\n// The desired deviation from the current price\nexport const getRelativeStrike = (currentPrice, impliedVol, N) => {\n  impliedVol = impliedVol / 100;\n  // Use the + operator to add integers\n  return +currentPrice + +currentPrice * +impliedVol * N;\n};\n\nexport const getLongCondor = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\", // To be calculated in the Contract Component\n      // Strike price calculated dynamically\n      strike: getRelativeStrike(currentPrice, impliedVol, -1),\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 1),\n      type: CALL,\n    },\n  };\n};\n\nexport const getShortCondor = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\", // To be calculated in the Contract Component\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 1),\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: PUT,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -1),\n      type: PUT,\n    },\n  };\n};\n\nexport const getBullCallSpread = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n  };\n};\n\nexport const getBearPutSpread = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: PUT,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongStraddle = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: PUT,\n    },\n  };\n};\n\nexport const getShortStraddle = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: currentPrice,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: currentPrice,\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongStradde = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: PUT,\n    },\n  };\n};\n\nexport const getShortStrangle = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongButterfly = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: CALL,\n    },\n    secondId: {\n      amount: 2,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: currentPrice,\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n  };\n};\n\nexport const getShortButterfly = (currentPrice, impliedVol) => {\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, 0.5),\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date,\n      direction: BUY,\n      price: \"\",\n      strike: currentPrice,\n      type: PUT,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date,\n      direction: SELL,\n      price: \"\",\n      strike: getRelativeStrike(currentPrice, impliedVol, -0.5),\n      type: PUT,\n    },\n  };\n};\n","import * as cts from \"./constants\";\n\n// Option definition class\nexport default class Option {\n  constructor(contractName) {\n    this.contractName = contractName;\n    this.strike = 100;\n    this.date = cts.date;\n    this.direction = cts.BUY;\n    this.type = cts.CALL;\n    this.amount = 1;\n  }\n}\n","import * as cts from \"./constants\";\n\n// Takes in option object and evaluates the payoff given the input price\nexport const evaluatePayoffFunc = (option, price, stockData) => {\n  const cost = option.price * option.amount;\n  if (option.type === cts.CALL) {\n    // A call Option\n    if (option.direction === cts.BUY) {\n      // Long Call\n      return (\n        Math.max(price - parseInt(option.strike), 0) * option.amount - cost\n      );\n    }\n    // Short Call\n    return Math.min(0, option.strike - price) * option.amount + cost;\n  } else if (option.type === cts.PUT) {\n    // A Put Option\n    if (option.direction === cts.BUY) {\n      // Long Put\n      return (\n        Math.max(parseInt(option.strike) - price, 0) * option.amount - cost\n      );\n    }\n    // Short Put\n    return Math.min(0, price - option.strike) * option.amount + cost;\n  } else if (option.type === cts.CASH) {\n    // Stock\n    if (option.direction === cts.BUY) {\n      // Long Stock\n      return (price - stockData.currentPrice) * option.amount;\n    }\n    // Short Stock\n    return (stockData.currentPrice - price) * option.amount;\n  }\n};\n\n/*\n  S = Current Stock Price\n  X = Exercise Price (Strike)\n  r = Short-term risk free interest rate\n  T = Time remaining to the expiration Date (in years)\n  v = Standard deviation of stock price (implied volatility)\n */\n\nexport function BlackScholes(optionType, S, X, T, r, v) {\n  // Unit adjustment\n  v = v / 100;\n  r = r / 100;\n  var d1 = (Math.log(S / X) + (r + (v * v) / 2) * T) / (v * Math.sqrt(T));\n  var d2 = d1 - v * Math.sqrt(T);\n  if (optionType === cts.CALL) {\n    return S * CND(d1) - X * Math.exp(-r * T) * CND(d2);\n  } else {\n    return X * Math.exp(-r * T) * CND(-d2) - S * CND(-d1);\n  }\n}\n\n/* The cummulative Normal distribution function: */\nfunction CND(x) {\n  if (x < 0) {\n    return 1 - CND(-x);\n  } else {\n    let k = 1 / (1 + 0.2316419 * x);\n    return (\n      1 -\n      (Math.exp((-x * x) / 2) / Math.sqrt(2 * Math.PI)) *\n        k *\n        (0.31938153 +\n          k *\n            (-0.356563782 +\n              k * (1.781477937 + k * (-1.821255978 + k * 1.330274429))))\n    );\n  }\n}\n","// Color Picker Structure to help select color on graph\nexport default class ColorPicker {\n    // Available colors, more can be added\n    colors = [\n        \"blue\",\n        \"red\",\n        \"yellow\",\n        \"purple\",\n        \"orange\",\n        \"black\",\n    ]\n\n    constructor() {\n        this.index = 0;\n    }\n\n    // Get the Next Color\n    getColor(){\n        const result =  this.colors[this.index];\n        // Adjust the index;\n        if(this.index >= this.colors.length){\n            // We have reached the end reset to zero\n            this.index = 0;\n        }else{\n            // Not at end just add one to index\n            this.index++;\n        }\n        return result;\n    }\n}","/**\n * A custom useEffect hook that only triggers on updates, not on initial mount\n * Idea stolen from: https://stackoverflow.com/a/55075818/1526448\n * @param {Function} effect\n * @param {Array<any>} dependencies\n */\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useUpdateEffect(effect, dependencies = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n","import React, { useEffect, useState } from \"react\";\nimport Option from \"../utility/Option\";\nimport { BlackScholes, SELL } from \"../utility\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport * as util from \"../utility\";\nimport useUpdateEffect from \"../hooks/useUpdateEffect\";\n\nconst Contract = (props) => {\n  const { removeContract, data, optionData } = props;\n  const { updateContract } = props;\n\n  /*\n   If optionData is defined then the strike prices must adjust to the\n   Expiration date\n   */\n  const [expirationDates, setExpirationDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const [strikePrices, setStrikePrices] = useState([\n    \"Please Select Expiration Date\",\n  ]);\n  const [selectedStrike, setSelectedStrike] = useState();\n  const [selectedDirection, setSelectedDirection] = useState(data.direction);\n  const [selectedType, setSelectedType] = useState(data.type);\n\n  // Stock data from redux\n  const stockData = useSelector((state) => state.stockData);\n\n  // Calculate dateDifference in years, used in theoretical black scholes\n  const dateDiff = -moment().diff(data.date, \"years\", true);\n\n  // Calculate the price based on Black-Scholes model\n  const [price, setPrice] = useState();\n\n  // Update the current price every time something changes\n  useEffect(() => {\n    if (optionData) {\n    } else if (!optionData && selectedType !== util.CASH) {\n      setPrice(\n        BlackScholes(\n          data.type,\n          +stockData.currentPrice,\n          +data.strike,\n          +dateDiff,\n          +stockData.interest,\n          +stockData.volatility\n        ).toFixed(2)\n      );\n    }\n  });\n\n  // Update the price every time it changes\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"price\", price);\n  }, [price]);\n\n  // Set expiration Dates when component mounts\n  useEffect(() => {\n    if (optionData) {\n      const expirationDates = optionData.data.map(\n        (item) => item.expirationDate\n      );\n      setExpirationDates(expirationDates);\n    }\n  }, []);\n\n  // Update strike and price at change\n  useUpdateEffect(() => {\n    if (optionData) {\n      // Find the element with same date\n      const apiContract = optionData.data.find(\n        (item) => item.expirationDate === selectedDate\n      );\n\n      if (!apiContract) return;\n\n      // Find the type of option this is\n      const type = data.type.toUpperCase();\n\n      // Extract the contracts given the date\n      const contractsAtDate = apiContract.options[type];\n\n      // Find the contract with the selected Strike\n      const contract = contractsAtDate.find(\n        (item) => +item.strike === +selectedStrike\n      );\n\n      // Set the price depending if we are short or long\n      if (data.direction === \"Buy\") {\n        setPrice(contract.ask);\n      } else {\n        setPrice(contract.bid);\n      }\n    }\n\n    updateContract(data.contractName, \"strike\", selectedStrike);\n  }, [selectedStrike, setPrice]);\n\n  useUpdateEffect(() => {\n    if (optionData) {\n      // Find the element with same date\n      const apiContract = optionData.data.find(\n        (item) => item.expirationDate === selectedDate\n      );\n\n      // If none found return\n      if (!apiContract) return;\n\n      // Find the type of option this is\n      const type = data.type.toUpperCase();\n\n      // Extract the contracts given the date\n      const contractsAtDate = apiContract.options[type];\n\n      // Make an array of strikes at the current date\n      const strikesAtDate = contractsAtDate.map((item) => item.strike);\n\n      // Update strikeprices\n      setStrikePrices(strikesAtDate);\n    }\n\n    updateContract(data.contractName, \"date\", selectedDate);\n  }, [selectedDate]);\n\n  // Update Direction\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"direction\", selectedDirection);\n  }, [selectedDirection]);\n\n  // Update type\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"type\", selectedType);\n\n    // If we just changed to cash\n    if (selectedType === util.CASH) {\n      // Set Debit/Credit equal to the stock price\n      setPrice(stockData.currentPrice);\n    }\n  }, [selectedType]);\n\n  const cashContract = selectedType === util.CASH;\n\n  return (\n    <tr>\n      {/* Direction */}\n      <td>\n        <select\n          id=\"direction\"\n          className=\"form-control\"\n          value={selectedDirection}\n          onChange={(e) => setSelectedDirection(e.target.value)}\n        >\n          <option>Buy</option>\n          <option>Sell</option>\n        </select>\n      </td>\n      {/* Amount */}\n      <td>\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          className=\"form-control form-control-inline\"\n          onChange={(e) =>\n            updateContract(data.contractName, \"amount\", e.target.value)\n          }\n          value={data.amount}\n        />\n      </td>\n      {/* Kind */}\n      <td>\n        <select\n          className=\"form-control\"\n          onChange={(e) => setSelectedType(e.target.value)}\n          value={selectedType}\n        >\n          <option>Call</option>\n          <option>Put</option>\n          <option>Cash</option>\n        </select>\n      </td>\n      {/* Strike Price */}\n      <td>\n        {!cashContract &&\n          (optionData ? (\n            <div class=\"form-group\">\n              <select\n                class=\"form-control\"\n                id=\"exampleFormControlSelect1\"\n                onChange={(e) => setSelectedStrike(e.target.value)}\n              >\n                {strikePrices.map((price) => (\n                  <option>{isNaN(price) ? null : price}</option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            <input\n              type=\"number\"\n              placeholder=\"Strike\"\n              className=\"form-control form-control-inline\"\n              onChange={(e) =>\n                updateContract(data.contractName, \"strike\", e.target.value)\n              }\n              value={data.strike}\n            />\n          ))}\n      </td>\n      {/* Expiry Date */}\n      <td>\n        {!cashContract &&\n          (!optionData ? (\n            <input\n              type=\"date\"\n              placeholder=\"Expiry\"\n              className=\"form-control form-control-inline\"\n              onChange={(e) =>\n                updateContract(data.contractName, \"date\", e.target.value)\n              }\n              value={data.date}\n            />\n          ) : (\n            <div class=\"form-group\">\n              <select\n                class=\"form-control\"\n                id=\"exampleFormControlSelect1\"\n                onChange={(e) => setSelectedDate(e.target.value)}\n              >\n                {expirationDates.map((date) => (\n                  <option>{date}</option>\n                ))}\n              </select>\n            </div>\n          ))}\n      </td>\n      {/* Premium/Price */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <b>{price * data.amount}</b>\n      </td>\n      {/* Debit/Credit */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <b>{(data.direction === SELL ? price : -price) * data.amount} </b>\n      </td>\n      {/* Remove Button */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <button\n          type=\"button\"\n          aria-label=\"Left Align\"\n          className=\"btn btn-danger btn-s\"\n          onClick={() => removeContract(data.contractName)}\n        >\n          <span aria-hidden=\"true\">Remove</span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Panel = (props) => {\n  const { portfolio, setPortfolio, visualize, optionData } = props;\n\n  const addContract = () => {\n    const newPortfolio = { ...portfolio };\n    const id = new Date().toISOString();\n    newPortfolio[id] = new Option(id);\n    setPortfolio(newPortfolio);\n  };\n\n  const renderContracts = () => {\n    const result = [];\n    for (let id in portfolio) {\n      result.push(\n        <Contract\n          optionData={optionData}\n          removeContract={removeContract}\n          updateContract={updateContract}\n          data={portfolio[id]}\n          key={id}\n        />\n      );\n    }\n    return result;\n  };\n\n  const updateContract = (id, property, value) => {\n    const newPortfolio = { ...portfolio };\n    newPortfolio[id][property] = value;\n    setPortfolio(newPortfolio);\n  };\n\n  const removeContract = (id) => {\n    const newPortfolio = { ...portfolio };\n    delete newPortfolio[id];\n    setPortfolio(newPortfolio);\n  };\n\n  const calculateTotal = () => {\n    let premium = 0;\n    let debitcredit = 0;\n    let amount = 0;\n\n    for (let key in portfolio) {\n      const contract = portfolio[key];\n      premium += +contract.price * +contract.amount;\n      const debitToAdd =\n        contract.direction === SELL ? +contract.price : -+contract.price;\n      debitcredit += debitToAdd * +contract.amount;\n      amount += +contract.amount;\n    }\n    return {\n      premium: premium.toFixed(2),\n      debitcredit: debitcredit.toFixed(2),\n      amount,\n    };\n  };\n\n  const { premium, debitcredit, amount } = calculateTotal();\n\n  // console.log(\"Panel Rendered\");\n\n  return (\n    <div className=\"panel panel-primary\">\n      <div className=\"panel-heading\">Option Portfolio</div>\n      <div className=\"panel-body\">\n        <table className=\"table table-condensed\">\n          <thead>\n            <tr>\n              <th>Direction</th>\n              <th>Amount</th>\n              <th>Kind</th>\n              <th>Strike</th>\n              <th>Expiry</th>\n              <th>Premium</th>\n              <th>Debit/Credit</th>\n              <th>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success btn-s\"\n                  onClick={addContract}\n                >\n                  Add Leg\n                </button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {renderContracts()}\n            <tr>\n              <td><b>Total</b></td>\n              <td><b>{amount}</b></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td><b>{premium}</b></td>\n              <td><b>{debitcredit}</b></td>\n              <td>\n                <button\n                  type=\"button\"\n                  aria-label=\"Left Align\"\n                  className=\"btn btn-danger btn-s\"\n                  onClick={() => setPortfolio({})}\n                >\n                  <span aria-hidden=\"true\">Remove All</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        {/* <div className=\"pull-right\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success btn-s\"\n            onClick={visualize}\n          >\n            Generate Payoff\n          </button>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\n\nconst defaultValue = {\n  liveMode: false,\n  setLiveMode: () => {},\n};\n\nexport const liveDataContext = React.createContext(defaultValue);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as util from \"../../utility\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst DropDownBtn = ({ setPortfolio }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const { currentPrice, volatility } = useSelector((state) => state.stockData);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event, newPortfolio) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    newPortfolio && setPortfolio(newPortfolio(currentPrice, volatility));\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div>\n      <Button\n        ref={anchorRef}\n        aria-controls={open ? \"menu-list-grow\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n        color=\"inherit\"\n      >\n        View Sample Strategies\n      </Button>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id=\"menu-list-grow\"\n                  onKeyDown={handleListKeyDown}\n                >\n                  <MenuItem\n                    onClick={(e) => handleClose(e, util.getBullCallSpread)}\n                  >\n                    Bull Call Spread\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getBearPutSpread)}>\n                    Bear Put Spread\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongStraddle)}>\n                    Long Straddle\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getShortStraddle)}>\n                    Short Straddle\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongButterfly)}>\n                    Long Butterfly\n                  </MenuItem>\n                  <MenuItem\n                    onClick={(e) => handleClose(e, util.getShortButterfly)}\n                  >\n                    Short Butterfly\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongCondor)}>\n                    Long Condor\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getShortCondor)}>\n                    Short Condor\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n};\nexport default DropDownBtn;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { liveDataContext } from \"../../context/liveData\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport DropDownBtn from \"./DropDownBtn\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/stockData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navbar: {\n    marginBottom: \"40px\",\n    position: \"relative\",\n    zIndex: \"10\",\n  },\n}));\n\nexport default function MenuAppBar({ setPortfolio }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { liveMode, setLiveMode } = useContext(liveDataContext);\n\n  return (\n    <AppBar position=\"static\" className={classes.navbar}>\n      <Toolbar>\n        <Typography variant=\"h3\" className={classes.title}>\n          Option Strategy Builder\n        </Typography>\n        <DropDownBtn setPortfolio={setPortfolio} />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={liveMode}\n                onChange={() =>\n                  setLiveMode((prev) => {\n                    if (prev === true) dispatch(actions.resetData());\n                    return !prev;\n                  })\n                }\n                aria-label=\"live mode switch\"\n              />\n            }\n            label={\"Live Data Mode\"}\n          />\n        </FormGroup>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport symbols from \"../symbols.json\";\nimport { Button } from \"@material-ui/core\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  item: {\n    // No Effect\n    height: \"100%\",\n    widht: \"100%\",\n  },\n});\n\nconst Search = ({ searchFunc }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const classes = useStyles();\n\n  const filterOptions = (options, state) => {\n    // Extract the inputValue\n    const query = state.inputValue.toUpperCase();\n    // Update state\n    setInputValue(query);\n    // If short query return nothing (improves performance)\n    if (query.length <= 1) return [];\n\n    // Filter out the options\n    return options.filter((o) => o.displaySymbol.includes(query));\n  };\n\n  // console.log(\"Search Rendered\")\n\n  return (\n    <>\n      {/* A Warning message is outputed in console: Fix later */}\n      <Container>\n        <Row>\n          <Col md={10}>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={symbols}\n              getOptionLabel={(option) =>\n                option.displaySymbol + \": \" + option.description\n              }\n              filterOptions={(options, state) => filterOptions(options, state)}\n              className={classes.item}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search Ticker\"\n                  variant=\"outlined\"\n                />\n              )}\n              noOptionsText={\n                inputValue.length <= 1\n                  ? \"Type a Ticker Symbol\"\n                  : \"No Symbols Found\"\n              }\n            />\n          </Col>\n          <Col md={2}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => searchFunc(inputValue)}\n              className={classes.item}\n            >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Error = (props) => {\n  return (\n    <div className=\"alert alert-danger \" role=\"alert\">\n      <strong>{props.children}</strong>\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={props.removeFunc}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\nexport default Error;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst SecurityInfo = () => {\n  const stockData = useSelector((state) => state.stockData);\n\n  return (\n    <Card>\n      <Card.Body>\n        <h1 class=\"display-4\">{stockData.ticker}</h1>\n        <p class=\"lead\">Quote: {stockData.currentPrice}</p>\n        <p>{moment(new Date()).format(\"YYYY-MM-DD\")}</p>.\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SecurityInfo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n  slider: { width: \"90%\" },\n});\n\nexport default function InputSlider({ value, setValue, title, min, max }) {\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"input-slider\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <TrendingUpIcon />\n        </Grid>\n        <Grid item xs>\n          <Slider\n            min={min}\n            max={max}\n            value={typeof value === \"number\" ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            className={classes.slider}\n          />\n        </Grid>\n        <Grid item></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AnyChart from \"anychart-react\";\nimport * as anychart from \"anychart\";\nimport * as util from \"../utility\";\n\nconst StockAnyChart = ({ data, ticker }) => {\n  const newData = [];\n  data.forEach((pnt) => {\n    newData.push([\n      util.UNIXToDateString(pnt[0]),\n      pnt[1],\n      pnt[2],\n      pnt[3],\n      pnt[4],\n    ]);\n  });\n  // Create the chart\n  var stockDataTable = anychart.data.table();\n  // Add The data\n  stockDataTable.addData(newData);\n  // Declare stock Chart\n  var chart = anychart.stock();\n  // Create plot\n  var firstPlot = chart.plot(0);\n  firstPlot.area(stockDataTable.mapAs({ value: 4 })).name(ticker);\n  chart.scroller().area(stockDataTable.mapAs({ value: 4 }));\n  chart.selectRange(\"2018-01-03\", \"2019-01-01\");\n\n  return (\n    <>\n      {!chart ? (\n        <h1>Unable to Display Data</h1>\n      ) : (\n        <AnyChart width=\"100%\" height={300} instance={chart} title={ticker} />\n      )}\n    </>\n  );\n};\n\nexport default StockAnyChart;\n","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst PayoffHighChart = ({ data }) => {\n  return <HighchartsReact highcharts={Highcharts} options={data} />;\n};\n\nexport default PayoffHighChart;\n","import React, { Component } from 'react';\r\nimport MindFusion from 'mindfusion-common'\r\nimport $ from 'jquery'\r\nimport * as Charting from 'chart-library';\r\n\r\nexport class RealTimeChart extends Component {\r\n\r\nconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.el = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tchart: null\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tvar stockChart = new Charting.MindFusion.Charting.Controls.CandlestickChart(this.el.current);\r\n\t\t\r\n\t\tstockChart.title = \"The Big Corporation\";\r\n\t\tstockChart.theme.titleFontSize = 16;\r\n\t\tstockChart.candlestickWidth = 12;\r\n\t\tstockChart.showLegend = false;\r\n\t\t\r\n\t\tstockChart.showXCoordinates = false;\r\n\t\tstockChart.xAxisLabelRotationAngle = 30;\r\n\r\n\t\tstockChart.xAxis.minValue = 0;\r\n\t\tstockChart.xAxis.interval = 1;\r\n\t\tstockChart.xAxis.maxValue = 40;\r\n\t\tstockChart.xAxis.title = \"Time\";\r\n\t\tstockChart.yAxis.title = \"Price\";\r\n\t\t\r\n\t\tstockChart.gridType = Charting.MindFusion.Charting.GridType.Horizontal;\r\n\t\tstockChart.theme.gridColor1 = new Charting.MindFusion.Charting.Drawing.Color(\"#ffffff\");\r\n\t\tstockChart.theme.gridColor2 = new Charting.MindFusion.Charting.Drawing.Color(\"#fafafa\");\r\n\t\tstockChart.theme.gridLineColor = new Charting.MindFusion.Charting.Drawing.Color(\"#cecece\");\r\n\t\tstockChart.theme.gridLineStyle = Charting.MindFusion.Charting.Drawing.DashStyle.Dash;\r\n\r\n\t\tstockChart.plot.seriesStyle = new Charting.MindFusion.Charting.CandlestickSeriesStyle(\r\n\t\t\tnew Charting.MindFusion.Charting.Drawing.Brush(\"#ff2f26\"),\r\n\t\t\tnew Charting.MindFusion.Charting.Drawing.Brush(\"#00b140\"),\r\n\t\t\tnew Charting.MindFusion.Charting.Drawing.Brush(\"#2e2e2a\"), 2,\r\n\t\t\tCharting.MindFusion.Charting.Drawing.DashStyle.Solid, stockChart.plot.seriesRenderers.item(0));\r\n\r\n\t\tstockChart.theme.axisLabelsBrush = stockChart.theme.axisTitleBrush = stockChart.theme.axisStroke =\r\n\t\t\tnew Charting.MindFusion.Charting.Drawing.Brush(\"#2e2e2e\");\r\n\t\tstockChart.theme.highlightStroke = new Charting.MindFusion.Charting.Drawing.Brush(\"#cecece\");\r\n\t\t\r\n\t\tvar dataList = new Charting.MindFusion.Charting.Collections.List();\r\n\r\n\t\tvar intervalId = setInterval(this.updateStock.bind(this), 60000);\r\n\t\tthis.setState({ chart: stockChart, data: dataList, intervalId: intervalId });\r\n\t\tthis.updateStock();\r\n\t}\r\n\t\r\n\tupdateStock() {\r\n\t\t$.getJSON(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&apikey=demo\", function (json) {\r\n\r\n\t\t\tvar times = json[\"Time Series (1min)\"];\t\t\t\r\n\r\n\t\t\tvar update = false;\r\n\r\n\t\t\tif (this.state.chart.series.count() > 0)\r\n\t\t\t\tupdate = true;\r\n\r\n\t\t\tfor (var time in times) {\r\n\t\t\t\tvar stock_info = times[time];\r\n\r\n\t\t\t\tvar dataItem = new Charting.MindFusion.Charting.StockPrice(stock_info[\"1. open\"], stock_info[\"4. close\"], stock_info[\"3. low\"],\r\n\t\t\t\t\tstock_info[\"2. high\"], new Date(time));\r\n\r\n\t\t\t\tif (!update)\r\n\t\t\t\t\tthis.state.data.insert(0, dataItem);\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.data.add(dataItem);\t\t\t\t\r\n\t\t\t\t\tthis.state.data.removeAt(0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar series = new Charting.MindFusion.Charting.StockPriceSeries(this.state.data);\r\n\t\t\tseries.dateTimeFormat = Charting.MindFusion.Charting.DateTimeFormat.ShortTime;\r\n\r\n\t\t\tvar data = new Charting.MindFusion.Charting.Collections.ObservableCollection();\r\n\t\t\tdata.add(series);\r\n\t\t\tthis.state.chart.series = data;\r\n\t\t\tthis.state.chart.draw();\r\n\t\t}.bind(this));\r\n\t}\r\n\t\r\nrender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas width=\"1000px\" height=\"800px\" ref={this.el}></canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport HighStock from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\n// const mockData = [\n//   [1490880600000, 144.19, 144.5, 143.5, 143.93, 21207300],\n//   [1490967000000, 143.72, 144.27, 143.01, 143.66, 19661700],\n//   [1491226200000, 143.71, 144.12, 143.05, 143.7, 19985700],\n//   [1491312600000, 143.25, 144.89, 143.17, 144.77, 19891400],\n//   [1491399000000, 144.22, 145.46, 143.81, 144.02, 27717900],\n//   [1491485400000, 144.29, 144.52, 143.45, 143.66, 21149000],\n//   [1491571800000, 143.73, 144.18, 143.27, 143.34, 16672200],\n//   [1491831000000, 143.6, 143.88, 142.9, 143.17, 18933400],\n//   [1491917400000, 142.94, 143.35, 140.06, 141.63, 30379400],\n//   [1492003800000, 141.6, 142.15, 141.01, 141.8, 20350000],\n//   [1492090200000, 141.91, 142.38, 141.05, 141.05, 17822900],\n//   [1492435800000, 141.48, 141.88, 140.87, 141.83, 16582100],\n//   [1492522200000, 141.41, 142.04, 141.11, 141.2, 14697500],\n//   [1492608600000, 141.88, 142, 140.45, 140.68, 17328400],\n//   [1492695000000, 141.22, 142.92, 141.16, 142.44, 23319600],\n//   [1492781400000, 142.44, 142.68, 141.85, 142.27, 17320900],\n//   [1493040600000, 143.5, 143.95, 143.18, 143.64, 17134300],\n//   [1493127000000, 143.91, 144.9, 143.87, 144.53, 18871500],\n//   [1493213400000, 144.47, 144.6, 143.38, 143.68, 20041200],\n//   [1493299800000, 143.92, 144.16, 143.31, 143.79, 14246300],\n//   [1493386200000, 144.09, 144.3, 143.27, 143.65, 20860400],\n//   [1493645400000, 145.1, 147.2, 144.96, 146.58, 33602900],\n//   [1493731800000, 147.54, 148.09, 146.84, 147.51, 45352200],\n//   [1493818200000, 145.59, 147.49, 144.27, 147.06, 45697000],\n//   [1493904600000, 146.52, 147.14, 145.81, 146.53, 23371900],\n//   [1493991000000, 146.76, 148.98, 146.76, 148.96, 27327700],\n//   [1494250200000, 149.03, 153.7, 149.03, 153.01, 48752400],\n//   [1494336600000, 153.87, 154.88, 153.45, 153.99, 39130400],\n//   [1494423000000, 153.63, 153.94, 152.11, 153.26, 25805700],\n//   [1494509400000, 152.45, 154.07, 152.31, 153.95, 27255100],\n//   [1494595800000, 154.7, 156.42, 154.67, 156.1, 32527000],\n//   [1494855000000, 156.01, 156.65, 155.05, 155.7, 26009700],\n//   [1494941400000, 155.94, 156.06, 154.72, 155.47, 20048500],\n//   [1495027800000, 153.6, 154.57, 149.71, 150.25, 50767700],\n//   [1495114200000, 151.27, 153.34, 151.13, 152.54, 33568200],\n//   [1495200600000, 153.38, 153.98, 152.63, 153.06, 26960800],\n//   [1495459800000, 154, 154.58, 152.91, 153.99, 22966400],\n//   [1495546200000, 154.9, 154.9, 153.31, 153.8, 19918900],\n//   [1495632600000, 153.84, 154.17, 152.67, 153.34, 19178000],\n//   [1495719000000, 153.73, 154.35, 153.03, 153.87, 19235600],\n//   [1495805400000, 154, 154.24, 153.31, 153.61, 21927600],\n//   [1496151000000, 153.42, 154.43, 153.33, 153.67, 20126900],\n//   [1496237400000, 153.97, 154.17, 152.38, 152.76, 24451200],\n//   [1496323800000, 153.17, 153.33, 152.22, 153.18, 16404100],\n//   [1496410200000, 153.58, 155.45, 152.89, 155.45, 27770700],\n//   [1496669400000, 154.34, 154.45, 153.46, 153.93, 25331700],\n//   [1496755800000, 153.9, 155.81, 153.78, 154.45, 26624900],\n//   [1496842200000, 155.02, 155.98, 154.48, 155.37, 21069600],\n//   [1496928600000, 155.25, 155.54, 154.4, 154.99, 21250800],\n//   [1497015000000, 155.19, 155.19, 146.02, 148.98, 64882700],\n//   [1497274200000, 145.74, 146.09, 142.51, 145.42, 72307300],\n//   [1497360600000, 147.16, 147.45, 145.15, 146.59, 34165400],\n//   [1497447000000, 147.5, 147.5, 143.84, 145.16, 31531200],\n//   [1497533400000, 143.32, 144.48, 142.21, 144.29, 32165400],\n//   [1497619800000, 143.78, 144.5, 142.2, 142.27, 50361100],\n//   [1497879000000, 143.66, 146.74, 143.66, 146.34, 32541400],\n//   [1497965400000, 146.87, 146.87, 144.94, 145.01, 24900100],\n//   [1498051800000, 145.52, 146.07, 144.61, 145.87, 21265800],\n//   [1498138200000, 145.77, 146.7, 145.12, 145.63, 19106300],\n//   [1498224600000, 145.13, 147.16, 145.11, 146.28, 35439400],\n//   [1498483800000, 147.17, 148.28, 145.38, 145.82, 25692400],\n//   [1498570200000, 145.01, 146.16, 143.62, 143.73, 24761900],\n//   [1498656600000, 144.49, 146.11, 143.16, 145.83, 22082400],\n//   [1498743000000, 144.71, 145.13, 142.28, 143.68, 31499400],\n//   [1498829400000, 144.45, 144.96, 143.78, 144.02, 23024100],\n//   [1499088600000, 144.88, 145.3, 143.1, 143.5, 14277800],\n//   [1499261400000, 143.69, 144.79, 142.72, 144.09, 21569600],\n//   [1499347800000, 143.02, 143.5, 142.41, 142.73, 24128800],\n//   [1499434200000, 142.9, 144.75, 142.9, 144.18, 19201700],\n//   [1499693400000, 144.11, 145.95, 143.37, 145.06, 21090600],\n//   [1499779800000, 144.73, 145.85, 144.38, 145.53, 19781800],\n//   [1499866200000, 145.87, 146.18, 144.82, 145.74, 24884500],\n//   [1499952600000, 145.5, 148.49, 145.44, 147.77, 25199400],\n//   [1500039000000, 147.97, 149.33, 147.33, 149.04, 20132100],\n//   [1500298200000, 148.82, 150.9, 148.57, 149.56, 23793500],\n//   [1500384600000, 149.2, 150.13, 148.67, 150.08, 17868800],\n//   [1500471000000, 150.48, 151.42, 149.95, 151.02, 20923000],\n//   [1500557400000, 151.5, 151.74, 150.19, 150.34, 17243700],\n//   [1500643800000, 149.99, 150.44, 148.88, 150.27, 26252600],\n//   [1500903000000, 150.58, 152.44, 149.9, 152.09, 21493200],\n//   [1500989400000, 151.8, 153.84, 151.8, 152.74, 18853900],\n//   [1501075800000, 153.35, 153.93, 153.06, 153.46, 15781000],\n//   [1501162200000, 153.75, 153.99, 147.3, 150.56, 32476300],\n//   [1501248600000, 149.89, 150.23, 149.19, 149.5, 17213700],\n//   [1501507800000, 149.9, 150.33, 148.13, 148.73, 19845900],\n//   [1501594200000, 149.1, 150.22, 148.41, 150.05, 35368600],\n//   [1501680600000, 159.28, 159.75, 156.16, 157.14, 69936800],\n//   [1501767000000, 157.05, 157.21, 155.02, 155.57, 27097300],\n//   [1501853400000, 156.07, 157.4, 155.69, 156.39, 20559900],\n//   [1502112600000, 157.06, 158.92, 156.67, 158.81, 21870300],\n//   [1502199000000, 158.6, 161.83, 158.27, 160.08, 36205900],\n//   [1502285400000, 159.26, 161.27, 159.11, 161.06, 26131500],\n//   [1502371800000, 159.9, 160, 154.63, 155.32, 40804300],\n//   [1502458200000, 156.6, 158.57, 156.07, 157.48, 26257100],\n//   [1502717400000, 159.32, 160.21, 158.75, 159.85, 22122700],\n//   [1502803800000, 160.66, 162.2, 160.14, 161.6, 29465500],\n//   [1502890200000, 161.94, 162.51, 160.15, 160.95, 27671600],\n//   [1502976600000, 160.52, 160.71, 157.84, 157.86, 27940600],\n//   [1503063000000, 157.86, 159.5, 156.72, 157.5, 27428100],\n//   [1503322200000, 157.5, 157.89, 155.11, 157.21, 26368500],\n//   [1503408600000, 158.23, 160, 158.02, 159.78, 21604600],\n//   [1503495000000, 159.07, 160.47, 158.88, 159.98, 19399100],\n//   [1503581400000, 160.43, 160.74, 158.55, 159.27, 19818900],\n//   [1503667800000, 159.65, 160.56, 159.27, 159.86, 25480100],\n//   [1503927000000, 160.14, 162, 159.93, 161.47, 25966000],\n//   [1504013400000, 160.1, 163.12, 160, 162.91, 29516900],\n//   [1504099800000, 163.8, 163.89, 162.61, 163.35, 27269600],\n//   [1504186200000, 163.64, 164.52, 163.48, 164, 26785100],\n//   [1504272600000, 164.8, 164.94, 163.63, 164.05, 16591100],\n//   [1504618200000, 163.75, 164.25, 160.56, 162.08, 29468500],\n//   [1504704600000, 162.71, 162.99, 160.52, 161.91, 21651700],\n//   [1504791000000, 162.09, 162.24, 160.36, 161.26, 21928500],\n//   [1504877400000, 160.86, 161.15, 158.53, 158.63, 28611500],\n//   [1505136600000, 160.5, 162.05, 159.89, 161.5, 31580800],\n//   [1505223000000, 162.61, 163.96, 158.77, 160.86, 71714000],\n//   [1505309400000, 159.87, 159.96, 157.91, 159.65, 44907400],\n//   [1505395800000, 158.99, 159.4, 158.09, 158.28, 23760700],\n//   [1505482200000, 158.47, 160.97, 158, 159.88, 49114600],\n//   [1505741400000, 160.11, 160.5, 158, 158.67, 28269400],\n//   [1505827800000, 159.51, 159.77, 158.44, 158.73, 20810600],\n//   [1505914200000, 157.9, 158.26, 153.83, 156.07, 52951400],\n//   [1506000600000, 155.8, 155.8, 152.75, 153.39, 37511700],\n//   [1506087000000, 151.54, 152.27, 150.56, 151.89, 46645400],\n//   [1506346200000, 149.99, 151.83, 149.16, 150.55, 44387300],\n//   [1506432600000, 151.78, 153.92, 151.69, 153.14, 36660000],\n//   [1506519000000, 153.8, 154.72, 153.54, 154.23, 25504200],\n//   [1506605400000, 153.89, 154.28, 152.7, 153.28, 22005500],\n//   [1506691800000, 153.21, 154.13, 152, 154.12, 26299800],\n//   [1506951000000, 154.26, 154.45, 152.72, 153.81, 18698800],\n//   [1507037400000, 154.01, 155.09, 153.91, 154.48, 16230300],\n//   [1507123800000, 153.63, 153.86, 152.46, 153.48, 20163800],\n//   [1507210200000, 154.18, 155.44, 154.05, 155.39, 21283800],\n//   [1507296600000, 154.97, 155.49, 154.56, 155.3, 17407600],\n//   [1507555800000, 155.81, 156.73, 155.49, 155.84, 16262900],\n//   [1507642200000, 156.06, 158, 155.1, 155.9, 15617000],\n//   [1507728600000, 155.97, 156.98, 155.75, 156.55, 16905600],\n//   [1507815000000, 156.35, 157.37, 155.73, 156, 16125100],\n//   [1507901400000, 156.73, 157.28, 156.41, 156.99, 16394200],\n//   [1508160600000, 157.9, 160, 157.65, 159.88, 24121500],\n//   [1508247000000, 159.78, 160.87, 159.23, 160.47, 18997300],\n//   [1508333400000, 160.42, 160.71, 159.6, 159.76, 16374200],\n//   [1508419800000, 156.75, 157.08, 155.02, 155.98, 42584200],\n//   [1508506200000, 156.61, 157.75, 155.96, 156.25, 23974100],\n//   [1508765400000, 156.89, 157.69, 155.5, 156.17, 21984300],\n//   [1508851800000, 156.29, 157.42, 156.2, 157.1, 17757200],\n//   [1508938200000, 156.91, 157.55, 155.27, 156.41, 21207100],\n//   [1509024600000, 157.23, 157.83, 156.78, 157.41, 17000500],\n//   [1509111000000, 159.29, 163.6, 158.7, 163.05, 44454200],\n//   [1509370200000, 163.89, 168.07, 163.72, 166.72, 44700800],\n//   [1509456600000, 167.9, 169.65, 166.94, 169.04, 36046800],\n//   [1509543000000, 169.87, 169.94, 165.61, 166.89, 33637800],\n//   [1509629400000, 166.6, 168.5, 165.28, 168.11, 41393400],\n//   [1509715800000, 174, 174.26, 171.12, 172.5, 59398600],\n//   [1509978600000, 172.37, 174.99, 171.72, 174.25, 35026300],\n//   [1510065000000, 173.91, 175.25, 173.6, 174.81, 24361500],\n//   [1510151400000, 174.66, 176.24, 174.33, 176.24, 24409500],\n//   [1510237800000, 175.11, 176.1, 173.14, 175.88, 29482600],\n//   [1510324200000, 175.11, 175.38, 174.27, 174.67, 25145500],\n//   [1510583400000, 173.5, 174.5, 173.4, 173.97, 16982100],\n//   [1510669800000, 173.04, 173.48, 171.18, 171.34, 24782500],\n//   [1510756200000, 169.97, 170.32, 168.38, 169.08, 29158100],\n//   [1510842600000, 171.18, 171.87, 170.3, 171.1, 23637500],\n//   [1510929000000, 171.04, 171.39, 169.64, 170.15, 21899500],\n//   [1511188200000, 170.29, 170.56, 169.56, 169.98, 16262400],\n//   [1511274600000, 170.78, 173.7, 170.78, 173.14, 25131300],\n//   [1511361000000, 173.36, 175, 173.05, 174.96, 25588900],\n//   [1511533800000, 175.1, 175.5, 174.65, 174.97, 14026700],\n//   [1511793000000, 175.05, 175.08, 173.34, 174.09, 20716800],\n//   [1511879400000, 174.3, 174.87, 171.86, 173.07, 26428800],\n//   [1511965800000, 172.63, 172.92, 167.16, 169.48, 41666400],\n//   [1512052200000, 170.43, 172.14, 168.44, 171.85, 41527200],\n//   [1512138600000, 169.95, 171.67, 168.5, 171.05, 39759300],\n//   [1512397800000, 172.48, 172.62, 169.63, 169.8, 32542400],\n//   [1512484200000, 169.06, 171.52, 168.4, 169.64, 27350200],\n//   [1512570600000, 167.5, 170.2, 166.46, 169.01, 28560000],\n//   [1512657000000, 169.03, 170.44, 168.91, 169.32, 25673300],\n//   [1512743400000, 170.49, 171, 168.82, 169.37, 23355200],\n//   [1513002600000, 169.2, 172.89, 168.79, 172.67, 35273800],\n//   [1513089000000, 172.15, 172.39, 171.46, 171.7, 19409200],\n//   [1513175400000, 172.5, 173.54, 172, 172.27, 23818400],\n//   [1513261800000, 172.4, 173.13, 171.65, 172.22, 20476500],\n//   [1513348200000, 173.63, 174.17, 172.46, 173.97, 40169300],\n//   [1513607400000, 174.88, 177.2, 174.86, 176.42, 29421100],\n//   [1513693800000, 175.03, 175.39, 174.09, 174.54, 27436400],\n//   [1513780200000, 174.87, 175.42, 173.25, 174.35, 23475600],\n//   [1513866600000, 174.17, 176.02, 174.1, 175.01, 20949900],\n//   [1513953000000, 174.68, 175.42, 174.5, 175.01, 16114600],\n//   [1514298600000, 170.8, 171.47, 169.68, 170.57, 33185500],\n//   [1514385000000, 170.1, 170.78, 169.71, 170.6, 21498200],\n//   [1514471400000, 171, 171.85, 170.48, 171.08, 16480200],\n//   [1514557800000, 170.52, 170.59, 169.22, 169.23, 25884400],\n//   [1514903400000, 170.16, 172.3, 169.26, 172.26, 25555900],\n//   [1514989800000, 172.53, 174.55, 171.96, 172.23, 29517900],\n//   [1515076200000, 172.54, 173.47, 172.08, 173.03, 22434600],\n//   [1515162600000, 173.44, 175.37, 173.05, 175, 23660000],\n//   [1515421800000, 174.35, 175.61, 173.93, 174.35, 20567800],\n//   [1515508200000, 174.55, 175.06, 173.41, 174.33, 21584000],\n//   [1515594600000, 173.16, 174.3, 173, 174.29, 23959900],\n//   [1515681000000, 174.59, 175.49, 174.49, 175.28, 18667700],\n//   [1515767400000, 176.18, 177.36, 175.65, 177.09, 25226000],\n//   [1516113000000, 177.9, 179.39, 176.14, 176.19, 29565900],\n//   [1516199400000, 176.15, 179.25, 175.07, 179.1, 34386800],\n//   [1516285800000, 179.37, 180.1, 178.25, 179.26, 31193400],\n//   [1516372200000, 178.61, 179.58, 177.41, 178.46, 32425100],\n//   [1516631400000, 177.3, 177.78, 176.6, 177, 27108600],\n//   [1516717800000, 177.3, 179.44, 176.82, 177.04, 32689100],\n//   [1516804200000, 177.25, 177.3, 173.2, 174.22, 51105100],\n//   [1516890600000, 174.51, 174.95, 170.53, 171.11, 41529000],\n//   [1516977000000, 172, 172, 170.06, 171.51, 39143000],\n//   [1517236200000, 170.16, 170.16, 167.07, 167.96, 50640400],\n//   [1517322600000, 165.53, 167.37, 164.7, 166.97, 46048200],\n//   [1517409000000, 166.87, 168.44, 166.5, 167.43, 32478900],\n//   [1517495400000, 167.17, 168.62, 166.76, 167.78, 47230800],\n//   [1517581800000, 166, 166.8, 160.1, 160.5, 86593800],\n//   [1517841000000, 159.1, 163.88, 156, 156.49, 72738500],\n//   [1517927400000, 154.83, 163.72, 154, 163.03, 68243800],\n//   [1518013800000, 163.09, 163.4, 159.07, 159.54, 51608600],\n//   [1518100200000, 160.29, 161, 155.03, 155.15, 54390500],\n//   [1518186600000, 157.07, 157.89, 150.24, 156.41, 70672600],\n//   [1518445800000, 158.5, 163.89, 157.51, 162.71, 60819500],\n//   [1518532200000, 161.95, 164.75, 161.65, 164.34, 32549200],\n//   [1518618600000, 163.04, 167.54, 162.88, 167.37, 40644900],\n//   [1518705000000, 169.79, 173.09, 169, 172.99, 51147200],\n//   [1518791400000, 172.36, 174.82, 171.77, 172.43, 40176100],\n//   [1519137000000, 172.05, 174.26, 171.42, 171.85, 33930500],\n//   [1519223400000, 172.83, 174.12, 171.01, 171.07, 37471600],\n//   [1519309800000, 171.8, 173.95, 171.71, 172.5, 30991900],\n//   [1519396200000, 173.67, 175.65, 173.54, 175.5, 33812400],\n//   [1519655400000, 176.35, 179.39, 176.21, 178.97, 38162200],\n//   [1519741800000, 179.1, 180.48, 178.16, 178.39, 38928100],\n//   [1519828200000, 179.26, 180.62, 178.05, 178.12, 37782100],\n//   [1519914600000, 178.54, 179.78, 172.66, 175, 48802000],\n//   [1520001000000, 172.8, 176.3, 172.45, 176.21, 38454000],\n//   [1520260200000, 175.21, 177.74, 174.52, 176.82, 28401400],\n//   [1520346600000, 177.91, 178.25, 176.13, 176.67, 23788500],\n//   [1520433000000, 174.94, 175.85, 174.27, 175.03, 31703500],\n//   [1520519400000, 175.48, 177.12, 175.07, 176.94, 23774100],\n//   [1520605800000, 177.96, 180, 177.39, 179.98, 32185200],\n//   [1520861400000, 180.29, 182.39, 180.21, 181.72, 32207100],\n//   [1520947800000, 182.59, 183.5, 179.24, 179.97, 31693500],\n//   [1521034200000, 180.32, 180.52, 177.81, 178.44, 29368400],\n//   [1521120600000, 178.5, 180.24, 178.07, 178.65, 22743800],\n//   [1521207000000, 178.65, 179.12, 177.62, 178.02, 39404700],\n//   [1521466200000, 177.32, 177.47, 173.66, 175.3, 33446800],\n//   [1521552600000, 175.24, 176.8, 174.94, 175.24, 19649400],\n//   [1521639000000, 175.04, 175.09, 171.26, 171.27, 36338100],\n//   [1521725400000, 170, 172.68, 168.6, 168.85, 41490800],\n//   [1521811800000, 168.39, 169.92, 164.94, 164.94, 41028800],\n//   [1522071000000, 168.07, 173.1, 166.44, 172.77, 37541200],\n//   [1522157400000, 173.68, 175.15, 166.92, 168.34, 40922600],\n//   [1522243800000, 167.25, 170.02, 165.19, 166.48, 41668500],\n//   [1522330200000, 167.81, 171.75, 166.9, 167.78, 38398500],\n//   [1522675800000, 166.64, 168.94, 164.47, 166.68, 37586800],\n//   [1522762200000, 167.64, 168.75, 164.88, 168.39, 30278000],\n//   [1522848600000, 164.88, 172.01, 164.77, 171.61, 34605500],\n//   [1522935000000, 172.58, 174.23, 172.08, 172.8, 26933200],\n//   [1523021400000, 170.97, 172.48, 168.2, 168.38, 35005300],\n//   [1523280600000, 169.88, 173.09, 169.85, 170.05, 29017700],\n//   [1523367000000, 173, 174, 171.53, 173.25, 28408600],\n//   [1523453400000, 172.23, 173.92, 171.7, 172.44, 22431600],\n//   [1523539800000, 173.41, 175, 173.04, 174.14, 22889300],\n//   [1523626200000, 174.78, 175.84, 173.85, 174.73, 25124300],\n//   [1523885400000, 175.03, 176.19, 174.83, 175.82, 21578400],\n//   [1523971800000, 176.49, 178.94, 176.41, 178.24, 26509000],\n//   [1524058200000, 177.81, 178.82, 176.88, 177.84, 20754500],\n//   [1524144600000, 173.76, 175.39, 172.66, 172.8, 34808800],\n//   [1524231000000, 170.6, 171.22, 165.43, 165.72, 65491100],\n//   [1524490200000, 166.83, 166.92, 164.09, 165.24, 36515500],\n//   [1524576600000, 165.67, 166.33, 161.22, 162.94, 33692000],\n//   [1524663000000, 162.62, 165.42, 162.41, 163.65, 28382100],\n//   [1524749400000, 164.12, 165.73, 163.37, 164.22, 27963000],\n//   [1524835800000, 164, 164.33, 160.63, 162.32, 35655800],\n//   [1525095000000, 162.13, 167.26, 161.84, 165.26, 42427400],\n//   [1525181400000, 166.41, 169.2, 165.27, 169.1, 53569400],\n//   [1525267800000, 175.23, 177.75, 173.8, 176.57, 66539400],\n//   [1525354200000, 175.88, 177.5, 174.44, 176.89, 34068200],\n//   [1525440600000, 178.25, 184.25, 178.17, 183.83, 56201300],\n//   [1525699800000, 185.18, 187.67, 184.75, 185.16, 42451400],\n//   [1525786200000, 184.99, 186.22, 183.67, 186.05, 28402800],\n//   [1525872600000, 186.55, 187.4, 185.22, 187.36, 23211200],\n//   [1525959000000, 187.74, 190.37, 187.65, 190.04, 27989300],\n//   [1526045400000, 189.49, 190.06, 187.45, 188.59, 26212200],\n//   [1526304600000, 189.01, 189.53, 187.86, 188.15, 20778800],\n//   [1526391000000, 186.78, 187.07, 185.1, 186.44, 23695200],\n//   [1526477400000, 186.07, 188.46, 186, 188.18, 19183100],\n//   [1526563800000, 188, 188.91, 186.36, 186.99, 17294000],\n//   [1526650200000, 187.19, 187.81, 186.13, 186.31, 18297700],\n//   [1526909400000, 188, 189.27, 186.91, 187.63, 18400800],\n//   [1526995800000, 188.38, 188.88, 186.78, 187.16, 15240700],\n//   [1527082200000, 186.35, 188.5, 185.76, 188.36, 20058400],\n//   [1527168600000, 188.77, 188.84, 186.21, 188.15, 23234000],\n//   [1527255000000, 188.23, 189.65, 187.65, 188.58, 17461000],\n//   [1527600600000, 187.6, 188.75, 186.87, 187.9, 22514100],\n//   [1527687000000, 187.72, 188, 186.78, 187.5, 18690500],\n//   [1527773400000, 187.22, 188.23, 186.14, 186.87, 27482800],\n//   [1527859800000, 187.99, 190.26, 187.75, 190.24, 23442500],\n//   [1528119000000, 191.64, 193.42, 191.35, 191.83, 26266200],\n//   [1528205400000, 193.07, 193.94, 192.36, 193.31, 21566000],\n//   [1528291800000, 193.63, 194.08, 191.92, 193.98, 20933600],\n//   [1528378200000, 194.14, 194.2, 192.34, 193.46, 21347200],\n//   [1528464600000, 191.17, 192, 189.77, 191.7, 26656800],\n//   [1528723800000, 191.35, 191.97, 190.21, 191.23, 18308500],\n//   [1528810200000, 191.39, 192.61, 191.15, 192.28, 16911100],\n//   [1528896600000, 192.42, 192.88, 190.44, 190.7, 21638400],\n//   [1528983000000, 191.55, 191.57, 190.22, 190.8, 21610100],\n//   [1529069400000, 190.03, 190.16, 188.26, 188.84, 61719200],\n//   [1529328600000, 187.88, 189.22, 187.2, 188.74, 18484900],\n//   [1529415000000, 185.14, 186.33, 183.45, 185.69, 33578500],\n//   [1529501400000, 186.35, 187.2, 185.73, 186.5, 20628700],\n//   [1529587800000, 187.25, 188.35, 184.94, 185.46, 25711900],\n//   [1529674200000, 186.12, 186.15, 184.7, 184.92, 27200400],\n//   [1529933400000, 183.4, 184.92, 180.73, 182.17, 31663100],\n//   [1530019800000, 182.99, 186.53, 182.54, 184.43, 24569200],\n//   [1530106200000, 185.23, 187.28, 184.03, 184.16, 25285300],\n//   [1530192600000, 184.1, 186.21, 183.8, 185.5, 17365200],\n//   [1530279000000, 186.29, 187.19, 182.91, 185.11, 22737700],\n//   [1530538200000, 183.82, 187.3, 183.42, 187.18, 17731300],\n//   [1530624600000, 187.79, 187.95, 183.54, 183.92, 13954800],\n//   [1530797400000, 185.26, 186.41, 184.28, 185.4, 16604200],\n//   [1530883800000, 185.42, 188.43, 185.2, 187.97, 17485200],\n//   [1531143000000, 189.5, 190.68, 189.3, 190.58, 19756600],\n//   [1531229400000, 190.71, 191.28, 190.18, 190.35, 15939100],\n//   [1531315800000, 188.5, 189.78, 187.61, 187.88, 18831500],\n//   [1531402200000, 189.53, 191.41, 189.31, 191.03, 18041100],\n//   [1531488600000, 191.08, 191.84, 190.9, 191.33, 12513900],\n//   [1531747800000, 191.52, 192.65, 190.42, 190.91, 15043100],\n//   [1531834200000, 189.75, 191.87, 189.2, 191.45, 15534500],\n//   [1531920600000, 191.78, 191.8, 189.93, 190.4, 16393400],\n//   [1532007000000, 189.69, 192.55, 189.69, 191.88, 20286800],\n//   [1532093400000, 191.78, 192.43, 190.17, 191.44, 20676200],\n//   [1532352600000, 190.68, 191.96, 189.56, 191.61, 15989400],\n//   [1532439000000, 192.45, 193.66, 192.05, 193, 18697900],\n//   [1532525400000, 193.06, 194.85, 192.43, 194.82, 16709900],\n//   [1532611800000, 194.61, 195.96, 193.61, 194.21, 19076000],\n//   [1532698200000, 194.99, 195.19, 190.1, 190.98, 24024000],\n//   [1532957400000, 191.9, 192.2, 189.07, 189.91, 21029500],\n//   [1533043800000, 190.3, 192.14, 189.34, 190.29, 39373000],\n//   [1533130200000, 199.13, 201.76, 197.31, 201.5, 67935700],\n//   [1533216600000, 200.58, 208.38, 200.35, 207.39, 62404000],\n//   [1533303000000, 207.03, 208.74, 205.48, 207.99, 33447400],\n//   [1533562200000, 208, 209.25, 207.07, 209.07, 25425400],\n//   [1533648600000, 209.32, 209.5, 206.76, 207.11, 25587400],\n//   [1533735000000, 206.05, 207.81, 204.52, 207.25, 22525500],\n//   [1533821400000, 207.28, 209.78, 207.2, 208.88, 23469200],\n//   [1533907800000, 207.36, 209.1, 206.67, 207.53, 24611200],\n//   [1534167000000, 207.7, 210.95, 207.7, 208.87, 25869100],\n//   [1534253400000, 210.16, 210.56, 208.26, 209.75, 20748000],\n//   [1534339800000, 209.22, 210.74, 208.33, 210.24, 28807600],\n//   [1534426200000, 211.75, 213.81, 211.47, 213.32, 28500400],\n//   [1534512600000, 213.44, 217.95, 213.16, 217.58, 35427000],\n//   [1534771800000, 218.1, 219.18, 215.11, 215.46, 30287700],\n//   [1534858200000, 216.8, 217.19, 214.03, 215.04, 26159800],\n//   [1534944600000, 214.1, 216.36, 213.84, 215.05, 19018100],\n//   [1535031000000, 214.65, 217.05, 214.6, 215.49, 18883200],\n//   [1535117400000, 216.6, 216.9, 215.11, 216.16, 18476400],\n//   [1535376600000, 217.15, 218.74, 216.33, 217.94, 20525100],\n//   [1535463000000, 219.01, 220.54, 218.92, 219.7, 22776800],\n//   [1535549400000, 220.15, 223.49, 219.41, 222.98, 27254800],\n//   [1535635800000, 223.25, 228.26, 222.4, 225.03, 48793800],\n//   [1535722200000, 226.51, 228.87, 226, 227.63, 43340100],\n//   [1536067800000, 228.41, 229.18, 226.63, 228.36, 27390100],\n//   [1536154200000, 228.99, 229.67, 225.1, 226.87, 33333000],\n//   [1536240600000, 226.23, 227.35, 221.3, 223.1, 34290000],\n//   [1536327000000, 221.85, 225.37, 220.71, 221.3, 37619800],\n//   [1536586200000, 220.95, 221.85, 216.47, 218.33, 39516500],\n//   [1536672600000, 218.01, 224.3, 216.56, 223.85, 35749000],\n//   [1536759000000, 224.94, 225, 219.84, 221.07, 49278700],\n//   [1536845400000, 223.52, 228.35, 222.57, 226.41, 41706400],\n//   [1536931800000, 225.75, 226.84, 222.52, 223.84, 31999300],\n//   [1537191000000, 222.15, 222.95, 217.27, 217.88, 37195100],\n//   [1537277400000, 217.79, 221.85, 217.12, 218.24, 31571700],\n//   [1537363800000, 218.5, 219.62, 215.3, 218.37, 27123800],\n//   [1537450200000, 220.24, 222.28, 219.15, 220.03, 26608800],\n//   [1537536600000, 220.78, 221.36, 217.29, 217.66, 96246700],\n//   [1537795800000, 216.82, 221.26, 216.63, 220.79, 27693400],\n//   [1537882200000, 219.75, 222.82, 219.7, 222.19, 24554400],\n//   [1537968600000, 221, 223.75, 219.76, 220.42, 23984700],\n//   [1538055000000, 223.82, 226.44, 223.54, 224.95, 30181200],\n//   [1538141400000, 224.79, 225.84, 224.02, 225.74, 22929400],\n//   [1538400600000, 227.95, 229.42, 226.35, 227.26, 23600800],\n//   [1538487000000, 227.25, 230, 226.63, 229.28, 24788200],\n//   [1538573400000, 230.05, 233.47, 229.78, 232.07, 28654800],\n//   [1538659800000, 230.78, 232.35, 226.73, 227.99, 32042000],\n//   [1538746200000, 227.96, 228.41, 220.58, 224.29, 33580500],\n//   [1539005400000, 222.21, 224.8, 220.2, 223.77, 29663900],\n//   [1539091800000, 223.64, 227.27, 222.25, 226.87, 26891000],\n//   [1539178200000, 225.46, 226.35, 216.05, 216.36, 41990600],\n//   [1539264600000, 214.52, 219.5, 212.32, 214.45, 53124400],\n//   [1539351000000, 220.42, 222.88, 216.84, 222.11, 40337900],\n//   [1539610200000, 221.16, 221.83, 217.27, 217.36, 30791000],\n//   [1539696600000, 218.93, 222.99, 216.76, 222.15, 29184000],\n//   [1539783000000, 222.3, 222.64, 219.34, 221.19, 22885400],\n//   [1539869400000, 217.86, 219.74, 213, 216.02, 32581300],\n//   [1539955800000, 218.06, 221.26, 217.43, 219.31, 33078700],\n//   [1540215000000, 219.79, 223.36, 218.94, 220.65, 28792100],\n//   [1540301400000, 215.83, 223.25, 214.7, 222.73, 38767800],\n//   [1540387800000, 222.6, 224.23, 214.54, 215.09, 40925500],\n//   [1540474200000, 217.71, 221.38, 216.75, 219.8, 29855800],\n//   [1540560600000, 215.9, 220.19, 212.67, 216.3, 47258400],\n//   [1540819800000, 219.19, 219.69, 206.09, 212.24, 45935500],\n//   [1540906200000, 211.15, 215.18, 209.27, 213.3, 36660000],\n//   [1540992600000, 216.88, 220.45, 216.62, 218.86, 38358900],\n//   [1541079000000, 219.05, 222.36, 216.81, 222.22, 58323200],\n//   [1541165400000, 209.55, 213.65, 205.43, 207.48, 91328700],\n//   [1541428200000, 204.3, 204.39, 198.17, 201.59, 66163700],\n//   [1541514600000, 201.92, 204.72, 201.69, 203.77, 31882900],\n//   [1541601000000, 205.97, 210.06, 204.13, 209.95, 33424400],\n//   [1541687400000, 209.98, 210.12, 206.75, 208.49, 25362600],\n//   [1541773800000, 205.55, 206.01, 202.25, 204.47, 34365800],\n//   [1542033000000, 199, 199.85, 193.79, 194.17, 51135500],\n//   [1542119400000, 191.63, 197.18, 191.45, 192.23, 46882900],\n//   [1542205800000, 193.9, 194.48, 185.93, 186.8, 60801000],\n//   [1542292200000, 188.39, 191.97, 186.9, 191.41, 46478800],\n//   [1542378600000, 190.5, 194.97, 189.46, 193.53, 36928300],\n//   [1542637800000, 190, 190.7, 184.99, 185.86, 41925300],\n//   [1542724200000, 178.37, 181.47, 175.51, 176.98, 67825200],\n//   [1542810600000, 179.73, 180.27, 176.55, 176.78, 31124200],\n//   [1542983400000, 174.94, 176.6, 172.1, 172.29, 23624000],\n//   [1543242600000, 174.24, 174.95, 170.26, 174.62, 44998500],\n//   [1543329000000, 171.51, 174.77, 170.88, 174.24, 41387400],\n//   [1543415400000, 176.73, 181.29, 174.93, 180.94, 46062500],\n//   [1543501800000, 182.66, 182.8, 177.7, 179.55, 41770000],\n//   [1543588200000, 180.29, 180.33, 177.03, 178.58, 39531500],\n//   [1543847400000, 184.46, 184.94, 181.21, 184.82, 40802500],\n//   [1543933800000, 180.95, 182.39, 176.27, 176.69, 41344300],\n//   [1544106600000, 171.76, 174.78, 170.42, 174.72, 43098400],\n//   [1544193000000, 173.49, 174.49, 168.3, 168.49, 42281600],\n//   [1544452200000, 165, 170.09, 163.33, 169.6, 62026000],\n//   [1544538600000, 171.66, 171.79, 167, 168.63, 47281700],\n//   [1544625000000, 170.4, 171.92, 169.02, 169.1, 35627700],\n//   [1544711400000, 170.49, 172.57, 169.55, 170.95, 31898600],\n//   [1544797800000, 169, 169.08, 165.28, 165.48, 40703700],\n//   [1545057000000, 165.45, 168.35, 162.73, 163.94, 44287900],\n//   [1545143400000, 165.38, 167.53, 164.39, 166.07, 33841500],\n//   [1545229800000, 166, 167.45, 159.09, 160.89, 49047300],\n//   [1545316200000, 160.4, 162.11, 155.3, 156.83, 64773000],\n//   [1545402600000, 156.86, 158.16, 149.63, 150.73, 95744600],\n//   [1545661800000, 148.15, 151.55, 146.59, 146.83, 37169200],\n//   [1545834600000, 148.3, 157.23, 146.72, 157.17, 58582500],\n//   [1545921000000, 155.84, 156.77, 150.07, 156.15, 53117100],\n//   [1546007400000, 157.5, 158.52, 154.55, 156.23, 42291400],\n//   [1546266600000, 158.53, 159.36, 156.48, 157.74, 35003500],\n//   [1546439400000, 154.89, 158.85, 154.23, 157.92, 37039700],\n//   [1546525800000, 143.98, 145.72, 142, 142.19, 91312200],\n//   [1546612200000, 144.53, 148.55, 143.8, 148.26, 58607100],\n//   [1546871400000, 148.7, 148.83, 145.9, 147.93, 54777800],\n//   [1546957800000, 149.56, 151.82, 148.52, 150.75, 41025300],\n//   [1547044200000, 151.29, 154.53, 149.63, 153.31, 45099100],\n//   [1547130600000, 152.5, 153.97, 150.86, 153.8, 35780700],\n//   [1547217000000, 152.88, 153.7, 151.51, 152.29, 27023200],\n//   [1547476200000, 150.85, 151.27, 149.22, 150, 32439200],\n//   [1547562600000, 150.27, 153.39, 150.05, 153.07, 28710900],\n//   [1547649000000, 153.08, 155.88, 153, 154.94, 30569700],\n//   [1547735400000, 154.2, 157.66, 153.26, 155.86, 29821200],\n//   [1547821800000, 157.5, 157.88, 155.98, 156.82, 33751000],\n//   [1548167400000, 156.41, 156.73, 152.62, 153.3, 30394000],\n//   [1548253800000, 154.15, 155.14, 151.7, 153.92, 23130600],\n//   [1548340200000, 154.11, 154.48, 151.74, 152.7, 25441500],\n//   [1548426600000, 155.48, 158.13, 154.32, 157.76, 33535500],\n//   [1548685800000, 155.79, 156.33, 153.66, 156.3, 26192100],\n//   [1548772200000, 156.25, 158.13, 154.11, 154.68, 41587200],\n//   [1548858600000, 163.25, 166.15, 160.23, 165.25, 61109800],\n//   [1548945000000, 166.11, 169, 164.56, 166.44, 40739600],\n//   [1549031400000, 166.96, 168.98, 165.93, 166.52, 32668100],\n//   [1549290600000, 167.41, 171.66, 167.28, 171.25, 31495500],\n//   [1549377000000, 172.86, 175.08, 172.35, 174.18, 36101600],\n//   [1549463400000, 174.65, 175.57, 172.85, 174.24, 28239600],\n//   [1549549800000, 172.4, 173.94, 170.34, 170.94, 31741700],\n//   [1549636200000, 168.99, 170.66, 168.42, 170.41, 23820000],\n//   [1549895400000, 171.05, 171.21, 169.25, 169.43, 20993400],\n//   [1549981800000, 170.1, 171, 169.7, 170.89, 22283500],\n//   [1550068200000, 171.39, 172.48, 169.92, 170.18, 22490200],\n//   [1550154600000, 169.71, 171.26, 169.38, 170.8, 21835700],\n//   [1550241000000, 171.25, 171.7, 169.75, 170.42, 24626800],\n//   [1550586600000, 169.71, 171.44, 169.49, 170.93, 18972800],\n//   [1550673000000, 171.19, 173.32, 170.99, 172.03, 26114400],\n//   [1550759400000, 171.8, 172.37, 170.3, 171.06, 17249700],\n//   [1550845800000, 171.58, 173, 171.38, 172.97, 18913200],\n//   [1551105000000, 174.16, 175.87, 173.95, 174.23, 21873400],\n//   [1551191400000, 173.71, 175.3, 173.17, 174.33, 17070200],\n//   [1551277800000, 173.21, 175, 172.73, 174.87, 27835400],\n//   [1551364200000, 174.32, 174.91, 172.92, 173.15, 28215400],\n//   [1551450600000, 174.28, 175.15, 172.89, 174.97, 25886200],\n//   [1551709800000, 175.69, 177.75, 173.97, 175.85, 27436200],\n//   [1551796200000, 175.94, 176, 174.54, 175.53, 19737400],\n//   [1551882600000, 174.67, 175.49, 173.94, 174.52, 20810400],\n//   [1551969000000, 173.87, 174.44, 172.02, 172.5, 24796400],\n//   [1552055400000, 170.32, 173.07, 169.5, 172.91, 23999400],\n//   [1552311000000, 175.49, 179.12, 175.35, 178.9, 32011000],\n//   [1552397400000, 180, 182.67, 179.37, 180.91, 32467600],\n//   [1552483800000, 182.25, 183.3, 180.92, 181.71, 31032500],\n//   [1552570200000, 183.9, 184.1, 182.56, 183.73, 23579500],\n//   [1552656600000, 184.85, 187.33, 183.74, 186.12, 39042900],\n//   [1552915800000, 185.8, 188.39, 185.79, 188.02, 26219800],\n//   [1553002200000, 188.35, 188.99, 185.92, 186.53, 31646400],\n//   [1553088600000, 186.23, 189.49, 184.73, 188.16, 31035200],\n//   [1553175000000, 190.02, 196.33, 189.81, 195.09, 51034200],\n//   [1553261400000, 195.34, 197.69, 190.78, 191.05, 42407700],\n//   [1553520600000, 191.51, 191.98, 186.6, 188.74, 43845300],\n//   [1553607000000, 191.66, 192.88, 184.58, 186.79, 49800500],\n//   [1553693400000, 188.75, 189.76, 186.55, 188.47, 29848400],\n//   [1553779800000, 188.95, 189.56, 187.53, 188.72, 20639200],\n// ];\n\nfunction App({ mockData }) {\n  console.log(mockData);\n  let groupingUnits = [\n    [\n      \"week\", // unit name\n      [1], // allowed multiples\n    ],\n    [\"month\", [1, 2, 3, 4, 6]],\n  ];\n\n  let mockOptions = {\n    rangeSelector: {\n      selected: 1,\n    },\n\n    title: {\n      text: \"AAPL Historical\",\n    },\n\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"60%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"65%\",\n        height: \"35%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n\n    tooltip: {\n      split: true,\n    },\n\n    series: [\n      {\n        type: \"candlestick\",\n        data: mockData,\n      },\n      {\n        type: \"column\",\n        data: (function () {\n          var columnData = [];\n\n          for (var i = 0; i < mockData.length; i++) {\n            columnData.push([\n              mockData[i][0], // the date\n              mockData[i][5], // the volume\n            ]);\n          }\n          return columnData;\n        })(),\n        yAxis: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      {\n        <HighchartsReact\n          highcharts={HighStock}\n          constructorType={\"stockChart\"}\n          options={mockOptions}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useCallback } from \"react\";\nimport Payoff from \"./components/Payoff\";\nimport StockData from \"./components/StockData\";\nimport Panel from \"./components/Panel\";\nimport * as util from \"./utility\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport moment from \"moment\";\nimport { liveDataContext } from \"./context/liveData\";\nimport Search from \"./components/Search\";\nimport axios from \"axios\";\nimport ColorPicker from \"./utility/DS/ColorPicker\";\nimport * as actions from \"./store/actions/stockData\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport useUpdateEffect from \"./hooks/useUpdateEffect\";\nimport Error from \"./components/Error/Error\";\nimport SecurityInfo from \"./components/SecurityInfo\";\nimport Slider from \"./components/Slider\";\nimport AnyChart from \"./components/StockAnyChart\";\nimport { Switch } from \"@material-ui/core\";\nimport { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport HighChart from \"./components/PayoffHighChart\";\nimport { RealTimeChart } from \"./components/RealTimeChart\";\nimport HighStock from \"./components/HighStock\";\n\nconst App = () => {\n  const [portfolio, setPortfolio] = useState(util.initialPortfolio);\n  const [data, setData] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [stockErrors, setStockErrors] = useState(null);\n  const stockData = useSelector((state) => state.stockData);\n  const [liveMode, setLiveMode] = useState(false);\n  const [optionData, setOptionData] = useState();\n  const [minX, setMinX] = useState();\n  const [maxX, setMaxX] = useState();\n  const [stockChartData, setStockChartData] = useState();\n  const [viewHighChart, setViewHighChart] = useState(true);\n  const [viewHighStock, setViewHighStock] = useState(true);\n  const [hcData, setHcData] = useState(null);\n  const value = { liveMode, setLiveMode };\n  const dispatch = useDispatch();\n  const { volatility, interest } = useSelector((state) => state.stockData);\n\n  // Set Error Message as JSX\n  const setErrs = useCallback((message) => {\n    setErrors(<Error removeFunc={() => setErrors(null)}>{message}</Error>);\n  }, []);\n\n  // Set Error Stock Message as JSX\n  const setStockErrs = useCallback((message) => {\n    setStockErrors(\n      <Error removeFunc={() => setStockErrors(null)}>{message}</Error>\n    );\n  }, []);\n\n  // Update and Validate User Input Data\n  const updateData = useCallback(() => {\n    // Validate Empty Portfolio\n    if (Object.keys(portfolio).length === 0)\n      return setErrs(\"Add contracts to Visualize\");\n\n    // Validate Stock Price\n    if (+stockData.currentPrice <= 0)\n      return setErrs(\"Please Enter a Valid Stock Price\");\n\n    // Validate Interest\n    if (isNaN(+stockData.interest))\n      return setErrs(\"Please Enter a Valid Interest Rate\");\n\n    const strikes = [];\n    let maxStrike = 0;\n    let minStrike = Infinity;\n\n    const values = [];\n    const theoretical = [];\n\n    // Add the min/max x values input by the user and update the max/minStrikes\n    if (maxX) {\n      if (+maxX > maxStrike) maxStrike = +maxX;\n      if (+maxX < minStrike) minStrike = +maxX;\n      strikes.push(+maxX);\n    }\n\n    if (minX) {\n      if (+minX > maxStrike) maxStrike = +minX;\n      if (+minX < minStrike) minStrike = +minX;\n      strikes.push(+minX);\n    }\n\n    // Get the Critical strikes to plot\n    for (let id in portfolio) {\n      const contract = portfolio[id];\n      const cashContract = contract.type === util.CASH;\n      const strike = cashContract ? +stockData.currentPrice : +contract.strike;\n      const date = contract.date;\n      const amount = contract.amount;\n\n      // Always Validate Amount\n      if (amount <= 0) return setErrs(\"Please Enter a Valid Amount\");\n\n      // If not a Cash Contract then validate the following fields\n      if (!cashContract) {\n        // Validate Strike prices\n        if (strike <= 0) return setErrs(\"Please Enter A Valid Strike Price\");\n\n        // Validate the Date (Check if it is defined and in the future)\n        if (!date || moment().diff(date) > 0)\n          return setErrs(\"Please Enter a Valid Date\");\n      }\n\n      // Apply To Fixed\n      strikes.push(util.round(strike));\n\n      // Update the maxStrike\n      if (strike > maxStrike) maxStrike = strike;\n      if (strike < minStrike) minStrike = strike;\n    }\n\n    const average = (maxStrike + minStrike) / 2;\n    let max = 0;\n\n    // If maxX is set\n    if (!maxX) {\n      // Auto xMax margin\n      max = Math.floor(maxStrike + average * 0.2);\n    } else {\n      max = Math.max(+maxX, maxStrike);\n    }\n\n    let min = 0;\n\n    // If minX is set\n    if (!minX) {\n      // Auto xMin Margin\n      min = Math.floor(minStrike - average * 0.2);\n    } else {\n      min = Math.min(+minX, minStrike);\n    }\n\n    const change = (max - min) / 35;\n\n    // Add domain limits\n    strikes.push(min);\n    strikes.push(max);\n\n    setMaxX(max);\n    setMinX(min);\n\n    let i = min;\n    // Add The rest of the strikes for continuous feel\n    while (i < max) {\n      // Round to 2 decimals and convert back to number\n      strikes.push(util.round(i));\n      i += change;\n    }\n\n    // Sort the strikes so the graph can be displayed properly\n    strikes.sort((a, b) => a - b);\n\n    const result = [];\n\n    // Helper DS to fetch colors\n    const colors = new ColorPicker();\n\n    // We want our plot to have N lines (N is the number of contracts in portfolio)\n    for (let id in portfolio) {\n      const contract = portfolio[id];\n      let key =\n        contract.direction + \" \" + contract.type + \" \" + contract.strike;\n      // Adjust title if cash contract\n      if (contract.type === util.CASH) {\n        key =\n          contract.direction +\n          \" \" +\n          contract.type +\n          \"  \" +\n          stockData.currentPrice;\n      }\n\n      result.push({\n        values: [],\n        key,\n        color: colors.getColor(),\n        disabled: true,\n      });\n    }\n\n    // Keey track of min/max for Ydomain\n    let minProfit = Infinity;\n    let maxProfit = -Infinity;\n\n    // For each strike, calculate the payoff and add it to values\n    for (let strike of strikes) {\n      let profitSum = 0;\n      let theoreticalPL = 0;\n      // Keep track of the index we are at\n      let i = 0;\n      for (let id in portfolio) {\n        const contract = portfolio[id];\n\n        // Calculate profit at given Strike (at Expiration)\n        const profitAtStrike = util.round(\n          util.evaluatePayoffFunc(contract, strike, stockData)\n        );\n\n        // Calculate dateDifference in years, used in theoretical black scholes\n        const dateDiff = -moment().diff(contract.date, \"years\", true);\n\n        const blackScholesValue = util.BlackScholes(\n          contract.type,\n          +strike,\n          +contract.strike,\n          +dateDiff,\n          +stockData.interest,\n          +stockData.volatility\n        );\n\n        // If the contract is Cash\n        if (contract.type === util.CASH) {\n          // Just add the profit at Strike\n          theoreticalPL += +profitAtStrike;\n        } else {\n          // Calculate depending on Buy/Sell\n          if (contract.direction === util.BUY) {\n            // Calculate Theoretical P/L\n            theoreticalPL +=\n              (blackScholesValue - contract.price) * contract.amount;\n          } else {\n            theoreticalPL +=\n              (contract.price - blackScholesValue) * contract.amount;\n          }\n        }\n\n        // Update min and max Profits\n        if (profitAtStrike > maxProfit) maxProfit = profitAtStrike;\n\n        if (profitAtStrike < minProfit) minProfit = profitAtStrike;\n\n        // Push the point at the specified strategy\n        result[i].values.push({\n          x: util.round(strike),\n          y: util.round(profitAtStrike),\n        });\n\n        // Evaluate each contract in portfolio and add it to the y value\n        profitSum += util.round(profitAtStrike);\n        i++;\n      }\n\n      // Add the point to the data\n      values.push({ x: util.round(strike), y: util.round(profitSum) });\n      theoretical.push({ x: util.round(strike), y: util.round(theoreticalPL) });\n    }\n\n    const Ydomain = [Math.floor(minProfit * 1.2), Math.floor(maxProfit * 1.2)];\n\n    // The overall strategy plot data\n    const strategyData = {\n      values,\n      key: \"Strategy\",\n      color: \"green\",\n      disabled: false,\n    };\n\n    // The Theoretical strategy plot data\n    const strategyTheoretical = {\n      values: theoretical,\n      key: \"Today\",\n      color: \"pink\",\n      disabled: false,\n    };\n\n    result.push(strategyTheoretical);\n\n    result.push(strategyData);\n\n    // Clear the Errors\n    setErrors(null);\n    console.log(result);\n    if (viewHighChart) {\n      const res = [];\n      // Parse data into HighChart Format\n      for (let series of result) {\n        const seriesInfo = {\n          data: [],\n          visible: !series.disabled,\n          color: series.color,\n          name: series.key,\n        };\n        res.push(seriesInfo);\n        for (let point of series.values) {\n          seriesInfo.data.push([+point.x, +point.y]);\n        }\n      }\n\n      return setHcData({\n        series: res,\n        xAxis: {\n          title: {\n            text: \"Stock Price ($)\",\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Profit ($)\",\n          },\n        },\n        chart: {\n          type: \"spline\",\n        },\n        title: {\n          text: \"Payoff\",\n        },\n      });\n    }\n\n    setData({ data: result, Ydomain });\n  }, [portfolio, stockData, setErrs, maxX, minX, viewHighChart]);\n\n  // Custom hook used to Reset Portfolio only when liveMode is Toggled\n  useUpdateEffect(() => {\n    // To be run on update\n    setErrors(null);\n    setPortfolio({});\n    setData(null);\n    setOptionData(null);\n  }, [liveMode]);\n\n  // Custom hook used to Reset Porfolio only when optionData changes\n  useUpdateEffect(() => {\n    setPortfolio({});\n    setStockChartData(null); // Display Loading\n    fetchData();\n  }, [optionData]);\n\n  // Custom hook used to Update/Validate portfolio whenever changed\n  useUpdateEffect(() => {\n    updateData();\n  }, [portfolio, updateData, viewHighChart]);\n\n  // Fetch the option Data when Search is Clicked\n  const searchFunc = async (ticker) => {\n    try {\n      const { data } = await axios.get(\n        `https://finnhub.io/api/v1/stock/option-chain?symbol=${ticker}&token=` +\n          process.env.REACT_APP_API_KEY\n      );\n      setOptionData(data);\n      dispatch(actions.updatePrice(data.lastTradePrice));\n      dispatch(actions.updateTicker(data.code));\n      if (data.data.length === 0) {\n        setStockErrs(util.STOCK_NO_OPTIONS, setStockErrors);\n      } else {\n        setStockErrors(null);\n      }\n    } catch (err) {\n      setStockErrs(util.STOCK_ERR_FETCH, setStockErrors);\n    }\n  };\n\n  const fetchData = async (ticker) => {\n    var unix = Math.round(+new Date() / 1000);\n    const { data } = await axios.get(\n      `https://finnhub.io/api/v1/stock/candle?symbol=TSLA&resolution=D&from=1199145600&to=${unix}&token=` +\n        process.env.REACT_APP_API_KEY\n    );\n\n    const length = data.c.length;\n\n    const result = [];\n\n    for (let i = 0; i < length; i++) {\n      result.push([data.t[i], data.o[i], data.h[i], data.l[i], data.c[i]]);\n    }\n\n    console.log(result);\n    setStockChartData(result);\n  };\n\n  return (\n    <>\n      <liveDataContext.Provider value={value}>\n        <Navigation setPortfolio={setPortfolio} />\n        <Container>\n          <Row>\n            <Col md={12}>\n              {stockData.ticker !== \"Theoretical\" && <SecurityInfo />}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              {liveMode && <Search searchFunc={searchFunc} />}\n              {stockErrors}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <Panel\n                optionData={optionData}\n                portfolio={portfolio}\n                setPortfolio={setPortfolio}\n                visualize={updateData}\n                currentPrice={100}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <StockData liveMode={liveMode} />\n              <div className=\"panel panel-primary\">\n                <div className=\"panel-heading\">Toggle</div>\n                <div className=\"panel-body\">\n                  <Slider\n                    min={0}\n                    max={150}\n                    title={\"Volatility\"}\n                    value={+volatility}\n                    setValue={(val) => dispatch(actions.updateVolatility(val))}\n                  />\n                  <Slider\n                    min={-20}\n                    max={150}\n                    title={\"Interest\"}\n                    value={+interest}\n                    setValue={(val) => dispatch(actions.updateInterest(val))}\n                  />\n                  <br />\n                  <br />\n                  <br />\n                </div>\n              </div>\n            </Col>\n            <Col md={9}>\n              <Row>\n                <Col md={12}>\n                  {errors ? errors : null}\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <div className=\"panel panel-primary\">\n                        <div className=\"panel-heading\">\n                          Option Payoff\n                          <FormGroup>\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={!viewHighChart}\n                                  onChange={() =>\n                                    setViewHighChart((prev) => !prev)\n                                  }\n                                  aria-label=\"live mode switch\"\n                                />\n                              }\n                              label={\"Switch Graph Type\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"panel-body\">\n                          {!viewHighChart ? (\n                            <Payoff data={data} />\n                          ) : (\n                            <HighChart data={hcData} />\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <Demo /> */}\n                </Col>\n              </Row>\n              <Row>\n                <Col md={12}>\n                  <div className=\"panel panel-primary\">\n                    <div className=\"panel-heading\">Change Domain</div>\n                    <div className=\"panel-body\">\n                      <Col md={2}>\n                        <input\n                          type=\"number\"\n                          className=\"form-control form-control-inline\"\n                          placeholder=\"Auto\"\n                          onBlur={(e) => setMinX(e.target.value)}\n                          // value={minX}\n                        />\n                      </Col>\n                      <Col md={2}>\n                        <input\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"5000\"\n                          className=\"form-control form-control-inline\"\n                          placeholder=\"Auto\"\n                          // value={maxX}\n                          onBlur={(e) => setMaxX(e.target.value)}\n                        />\n                      </Col>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </liveDataContext.Provider>\n      <Container>\n        <div className=\"panel panel-primary\">\n          <div className=\"panel-heading\">\n            {stockData.ticker}{\" \"}\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={!viewHighStock}\n                    onChange={() => setViewHighStock((prev) => !prev)}\n                    aria-label=\"live mode switch\"\n                  />\n                }\n                label={\"Switch Chart Type\"}\n              />\n            </FormGroup>\n          </div>\n          <div className=\"panel-body\">\n            {stockChartData && optionData ? (\n              <>\n                {viewHighStock ? (\n                  <HighStock mockData={stockChartData} />\n                ) : (\n                  <AnyChart data={stockChartData} ticker={stockData.ticker} />\n                )}\n              </>\n            ) : (\n              <>\n                {optionData && liveMode ? (\n                  <h1>Loading...</h1>\n                ) : (\n                  <>\n                    {!liveMode && (\n                      <>\n                        <h1>Switch to live mode to view stock chart</h1>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n        {/* <HighStock /> */}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  UPDATE_PRICE,\n  UPDATE_INTEREST,\n  UPDATE_VOLATILITY,\n  UPDATE_TICKER,\n  RESET_DATA,\n} from \"../actions/stockData\";\nimport { stockDataInitialState } from \"../../utility/constants\";\n\nexport const initialState = { ...stockDataInitialState };\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRICE:\n      return { ...state, currentPrice: action.price };\n    case UPDATE_VOLATILITY:\n      return { ...state, volatility: action.volatility };\n    case UPDATE_INTEREST:\n      return { ...state, interest: action.interest };\n    case UPDATE_TICKER:\n      return { ...state, ticker: action.ticker };\n    case RESET_DATA:\n      return { ...stockDataInitialState };\n    default:\n      // Will be run initially\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport stockDataReducer from \"./store/reducers/stockData\";\nimport { createStore, combineReducers } from \"redux\";\nimport AnyChart from \"anychart-react\";\n\nconst rootReducer = combineReducers({\n  stockData: stockDataReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}