{"version":3,"sources":["components/Payoff.js","store/actions/stockData.js","components/StockData.js","utility/constants.js","utility/Option.js","utility/options.js","utility/DS/ColorPicker.js","hooks/useUpdateEffect.js","components/Panel.js","context/liveData.js","components/Navigation/DropDownBtn.js","components/Navigation/Navigation.js","components/Search.js","components/Error/Error.js","components/SecurityInfo.js","components/Slider.js","components/StockAnyChart.js","components/PayoffHighChart.js","components/HighStock.js","App.js","store/reducers/stockData.js","index.js"],"names":["Payoff","data","d3","remove","useEffect","myData","Ydomain","nv","newChart","lineChart","margin","left","useInteractiveGuideline","showLegend","showYAxis","showXAxis","xAxis","axisLabel","tickFormat","yAxis","forceY","datum","call","windowResize","update","drawChart","className","id","updatePrice","price","type","updateTicker","ticker","updateVolatility","volatility","updateInterest","interest","StockData","liveMode","stockData","useSelector","state","dispatch","useDispatch","placeholder","value","currentPrice","disabled","onChange","e","stockActions","target","BUY","SELL","CALL","PUT","CASH","stockDataInitialState","round","num","toFixed","UNIXToDateString","UNIX_timestamp","a","Date","moment","format","addDays","dayObject","days","date","valueOf","setDate","getDate","createDateNYearsFromNow","n","d","year","getFullYear","month","getMonth","day","console","log","c","dateDiffInYears","futureDate","currentDate","diff","initialPortfolio","initialPortfolioId","amount","contractName","direction","strike","getRelativeStrike","impliedVol","N","optionData","targetDate","min","Infinity","actualDate","key","expirationDate","dateDiff","Math","abs","finalStrike","options","minDiffStrike","toUpperCase","option","getLongCondor","firstStrike","firstDate","secondStrike","secondDate","thirdStrike","thirdDate","fourthStrike","fourthDate","firstId","secondId","thirdId","fourthId","getShortCondor","getBullCallSpread","getBearPutSpread","getLongStraddle","getShortStraddle","getLongButterfly","getShortButterfly","Option","this","cts","evaluatePayoffFunc","cost","max","parseInt","BlackScholes","optionType","S","X","T","r","v","d1","sqrt","d2","CND","exp","x","k","PI","ColorPicker","colors","index","result","length","useUpdateEffect","effect","dependencies","isInitialMount","useRef","current","Contract","props","removeContract","updateContract","useState","expirationDates","setExpirationDates","selectedDate","setSelectedDate","strikePrices","setStrikePrices","selectedStrike","setSelectedStrike","selectedDirection","setSelectedDirection","selectedType","setSelectedType","util","setPrice","map","item","apiContract","find","contract","ask","bid","strikesAtDate","cashContract","class","isNaN","style","verticalAlign","aria-label","onClick","aria-hidden","Panel","portfolio","setPortfolio","visualize","property","newPortfolio","premium","debitcredit","calculateTotal","toISOString","push","renderContracts","liveDataContext","React","createContext","setLiveMode","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","DropDownBtn","open","setOpen","anchorRef","handleClose","event","contains","handleListKeyDown","preventDefault","prevOpen","focus","Button","ref","aria-controls","undefined","aria-haspopup","color","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","flexGrow","menuButton","title","navbar","marginBottom","position","zIndex","MenuAppBar","classes","useContext","AppBar","Toolbar","Typography","variant","FormGroup","FormControlLabel","control","Switch","checked","prev","label","height","widht","Search","searchFunc","inputValue","setInputValue","Container","Row","Col","md","Autocomplete","symbols","getOptionLabel","displaySymbol","description","filterOptions","query","filter","o","includes","renderInput","params","TextField","noOptionsText","Error","children","data-dismiss","removeFunc","SecurityInfo","Card","Body","width","input","slider","InputSlider","setValue","gutterBottom","Grid","container","alignItems","xs","Slider","newValue","aria-labelledby","StockAnyChart","newData","forEach","pnt","stockDataTable","anychart","table","addData","chart","plot","area","mapAs","name","scroller","selectRange","instance","PayoffHighChart","highcharts","Highcharts","App","mockData","mockOptions","rangeSelector","selected","text","labels","align","lineWidth","resize","enabled","top","offset","tooltip","split","series","columnData","i","HighStock","constructorType","setData","errors","setErrors","stockErrors","setStockErrors","setOptionData","minX","setMinX","maxX","setMaxX","stockChartData","setStockChartData","viewHighChart","setViewHighChart","viewHighStock","setViewHighStock","hcData","setHcData","daysToExpiration","setDaysToExpiration","setErrs","useCallback","message","setStockErrs","updateData","Object","keys","strikes","maxStrike","minStrike","values","theoretical","average","change","floor","sort","b","getColor","minProfit","maxProfit","profitSum","theoreticalPL","profitAtStrike","blackScholesValue","y","strategyData","strategyTheoretical","res","seriesInfo","visible","point","fetchStockData","fetchOptionData","axios","get","process","actions","lastTradePrice","code","unix","t","h","l","Provider","val","newDate","updateDaysToExpiration","onBlur","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qkt6BA2DeA,EAvDA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEhBC,YAAa,WAAWC,SA0CxB,OANAC,qBAAU,WACRH,GAnCgB,SAAC,GAA+B,IAAvBI,EAAsB,EAA5BJ,KAAcK,EAAc,EAAdA,QAEjCC,YAAY,WACV,IAAMC,EAAWD,SACdE,YACAC,OAAO,CAAEC,KAAM,MACfC,yBAAwB,GAExBC,YAAW,GACXC,WAAU,GACVC,WAAU,GAmBb,OAjBAP,EAASQ,MACNC,UAAU,aACVC,WAAWhB,SAAU,SAExBM,EAASW,MACNF,UAAU,cACVC,WAAWhB,SAAU,SAExBM,EAASY,OAAOd,GAEhBJ,SAAU,cACPmB,MAAMhB,GACNiB,KAAKd,GAGRD,QAASgB,aAAaf,EAASgB,QAExBhB,KAMDiB,CAAUxB,MAMlB,oCACE,yBAAKyB,UAAU,cACb,yBAAKC,GAAG,SACN,kC,QC9CGC,EAAc,SAACC,GAC1B,MAAO,CACLC,KARwB,eASxBD,UAISE,EAAe,SAACC,GAC3B,MAAO,CACLF,KAZyB,gBAazBE,WAISC,EAAmB,SAACC,GAC/B,MAAO,CACLJ,KArB6B,oBAsB7BI,eAISC,EAAiB,SAACC,GAC7B,MAAO,CACLN,KA3B2B,kBA4B3BM,aCgCWC,EA1DG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aACzCG,EAAWC,cAEjB,OACE,yBAAKjB,UAAU,uBACb,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,cACb,0BAAMA,UAAU,mBACd,yBAAKA,UAAU,cACb,2BAAOA,UAAU,0BAAjB,qBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,eACZlB,UAAU,eACVmB,MAAON,EAAUO,aACjBC,SAAUT,EACVU,SAAU,SAACC,GAAD,OACRP,EAASQ,EAAyBD,EAAEE,OAAON,aAKnD,yBAAKnB,UAAU,cACb,2BAAOA,UAAU,0BAAjB,kBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,aACZlB,UAAU,eACVmB,MAAON,EAAUL,WACjBc,SAAU,SAACC,GAAD,OACRP,EAASQ,EAA8BD,EAAEE,OAAON,aAKxD,yBAAKnB,UAAU,cACb,2BAAOA,UAAU,0BAAjB,qBACA,yBAAKA,UAAU,YACb,2BACEI,KAAK,SACLc,YAAY,gBACZlB,UAAU,eACVmB,MAAON,EAAUH,SACjBY,SAAU,SAACC,GAAD,OACRP,EAASQ,EAA4BD,EAAEE,OAAON,iB,yBClDnDO,EAAM,MACNC,EAAO,OACPC,EAAO,OACPC,EAAM,MACNC,EAAO,OAOPC,EAAwB,CACnCzB,OAAQ,cACRc,aAAc,IACdZ,WAAY,GACZE,SAAU,GAICsB,EAAQ,SAACC,GAMpB,MAJmB,kBAARA,IACTA,GAAOA,IAECA,EAAIC,QAAQ,IAKXC,EAAmB,SAACC,GAC/B,IAAMC,EAAI,IAAIC,KAAsB,IAAjBF,GACnB,OAAOG,IAAOF,GAAGG,OAAO,eAIbC,EAAU,SAACC,EAAWC,GACjC,IAAIC,EAAO,IAAIN,KAAKI,EAAUG,WAE9B,OADAD,EAAKE,QAAQF,EAAKG,UAAYJ,GACvBC,GAIHI,EAA0B,SAACC,GAC/B,IAAIC,EAAI,IAAIZ,KACRa,EAAOD,EAAEE,cACTC,EAAQH,EAAEI,WACVC,EAAML,EAAEH,UACZS,QAAQC,IAAIN,GACZ,IAAIO,EAAI,IAAIpB,KAAKa,EAAOF,EAAGI,EAAOE,GAClC,OAAOhB,IAAOmB,GAAGlB,OAAO,eAGbmB,EAAkB,SAACC,GAA0C,IAA9BC,EAA6B,uDAAf,IAAIvB,KAC5D,OAAQC,IAAOsB,GAAaC,KAAKF,EAAY,SAAS,IAI3ChB,EAAOI,EAAwB,GAG/Be,EAAmB,CAC9BC,mBAAoB,CAClBC,OAAQ,EACRC,aAAc,qBACdtB,OACAuB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQ,IACRhE,KAAMwB,IAOGyC,EAAoB,SAC/BjD,EACAkD,EACAC,EACAC,EACApE,GAEA,IAAIgE,EACFpC,EAAMZ,GAAgBY,EAAMZ,GAAgBY,EAAMsC,EAAa,KAAOC,EAExE,IAAKC,EAAY,MAAO,CAAEJ,SAAQxB,QAWlC,IAAM6B,EAAazB,EAAwB,GACvC0B,EAAMC,IACNC,EAAa,KAEjB,IAAK,IAAIC,KAAOL,EAAWjG,KAAM,CAAC,IACxBuG,EAAmBN,EAAWjG,KAAKsG,GAAnCC,eAEFC,EAAWC,KAAKC,IAAItB,EAAgBmB,EAAgBL,IACtDM,EAAWL,IACbA,EAAMK,EACNH,EAAaE,GAIjB,IAAII,EAAcd,EAGlB,IAAK,IAAIS,KAAOL,EAAWjG,KAAM,CAAC,IAAD,EACKiG,EAAWjG,KAAKsG,GAA5CM,EADuB,EACvBA,QACR,GAF+B,EACdL,iBACMF,EAAY,CACjC,IADiC,EAC7BQ,EAAgBT,IADa,cAEdQ,EAAQ/E,EAAKiF,gBAFC,IAEjC,2BAAgD,CAAC,IAAxCC,EAAuC,QAC1CN,KAAKC,IAAIK,EAAOlB,OAASA,GAAUgB,IACrCA,EAAgBJ,KAAKC,IAAIK,EAAOlB,OAASA,GACzCc,EAAcI,EAAOlB,SALQ,gCAUrC,MAAO,CAAEA,OAAQc,EAAatC,KAAMgC,IAKzBW,EAAgB,SAACnE,EAAckD,EAAYE,GAAgB,IAAD,EACpBH,EAC/CjD,EACAkD,GACC,EACDE,EACA5C,GALc4D,EADqD,EAC7DpB,OAA2BqB,EADkC,EACxC7C,KADwC,EASlByB,EACjDjD,EACAkD,GACC,GACDE,EACA5C,GALc8D,EATqD,EAS7DtB,OAA4BuB,EATiC,EASvC/C,KATuC,EAiBpByB,EAC/CjD,EACAkD,EACA,GACAE,EACA5C,GALcgE,EAjBqD,EAiB7DxB,OAA2ByB,EAjBkC,EAiBxCjD,KAjBwC,EAyBlByB,EACjDjD,EACAkD,EACA,EACAE,EACA5C,GALckE,EAzBqD,EAyB7D1B,OAA4B2B,EAzBiC,EAyBvCnD,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMwB,GAERsE,QAAS,CACPjC,OAAQ,EACRC,aAAc,UACdtB,KAAMiD,EACN1B,UAAWxC,EACXxB,MAAO,GACPiE,OAAQwB,EACRxF,KAAMwB,GAERuE,SAAU,CACRlC,OAAQ,EACRC,aAAc,WACdtB,KAAMmD,EACN5B,UAAWzC,EACXvB,MAAO,GACPiE,OAAQ0B,EACR1F,KAAMwB,KAKCwE,EAAiB,SAAChF,EAAckD,EAAYE,GAAgB,IAAD,EACrBH,EAC/CjD,EACAkD,EACA,GACAE,EACA5C,GALc4D,EADsD,EAC9DpB,OAA2BqB,EADmC,EACzC7C,KADyC,EASnByB,EACjDjD,EACAkD,EACA,EACAE,EACA5C,GALc8D,EATsD,EAS9DtB,OAA4BuB,EATkC,EASxC/C,KATwC,EAiBrByB,EAC/CjD,EACAkD,GACC,GACDE,EACA3C,GALc+D,EAjBsD,EAiB9DxB,OAA2ByB,EAjBmC,EAiBzCjD,KAjByC,EAyBnByB,EACjDjD,EACAkD,GACC,EACDE,EACA3C,GALciE,EAzBsD,EAyB9D1B,OAA4B2B,EAzBkC,EAyBxCnD,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMwB,GAERsE,QAAS,CACPjC,OAAQ,EACRC,aAAc,UACdtB,KAAMiD,EACN1B,UAAWzC,EACXvB,MAAO,GACPiE,OAAQwB,EACRxF,KAAMyB,GAERsE,SAAU,CACRlC,OAAQ,EACRC,aAAc,WACdtB,KAAMmD,EACN5B,UAAWxC,EACXxB,MAAO,GACPiE,OAAQ0B,EACR1F,KAAMyB,KAKCwE,EAAoB,SAACjF,EAAckD,EAAYE,GAAgB,IAAD,EACxBH,EAC/CjD,EACAkD,EACA,EACAE,EACA5C,GALc4D,EADyD,EACjEpB,OAA2BqB,EADsC,EAC5C7C,KAD4C,EAStByB,EACjDjD,EACAkD,EACA,GACAE,EACA5C,GALc8D,EATyD,EASjEtB,OAA4BuB,EATqC,EAS3C/C,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMwB,KAKC0E,EAAmB,SAAClF,EAAckD,EAAYE,GAAgB,IAAD,EACvBH,EAC/CjD,EACAkD,EACA,EACAE,EACA3C,GALc2D,EADwD,EAChEpB,OAA2BqB,EADqC,EAC3C7C,KAD2C,EASrByB,EACjDjD,EACAkD,GACC,GACDE,EACA3C,GALc6D,EATwD,EAShEtB,OAA4BuB,EAToC,EAS1C/C,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMyB,GAERoE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMyB,KAKC0E,EAAkB,SAACnF,EAAckD,EAAYE,GAAgB,IAAD,EACtBH,EAC/CjD,EACAkD,EACA,EACAE,EACA5C,GALc4D,EADuD,EAC/DpB,OAA2BqB,EADoC,EAC1C7C,KAD0C,EASpByB,EACjDjD,EACAkD,EACA,EACAE,EACA3C,GALc6D,EATuD,EAS/DtB,OAA4BuB,EATmC,EASzC/C,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMyB,KAKC2E,EAAmB,SAACpF,EAAckD,EAAYE,GAAgB,IAAD,EACvBH,EAC/CjD,EACAkD,EACA,EACAE,EACA5C,GALc4D,EADwD,EAChEpB,OAA2BqB,EADqC,EAC3C7C,KAD2C,EASrByB,EACjDjD,EACAkD,EACA,EACAE,EACA3C,GALc6D,EATwD,EAShEtB,OAA4BuB,EAToC,EAS1C/C,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMyB,KAmFC4E,EAAmB,SAACrF,EAAckD,EAAYE,GAAgB,IAAD,EACvBH,EAC/CjD,EACAkD,GACC,GACDE,EACA5C,GALc4D,EADwD,EAChEpB,OAA2BqB,EADqC,EAC3C7C,KAD2C,EASrByB,EACjDjD,EACAkD,EACA,EACAE,EACA5C,GALc8D,EATwD,EAShEtB,OAA4BuB,EAToC,EAS1C/C,KAT0C,EAiBvByB,EAC/CjD,EACAkD,EACA,GACAE,EACA5C,GALcgE,EAjBwD,EAiBhExB,OAA2ByB,EAjBqC,EAiB3CjD,KAQ7B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMwB,GAERsE,QAAS,CACPjC,OAAQ,EACRC,aAAc,UACdtB,KAAMiD,EACN1B,UAAWzC,EACXvB,MAAO,GACPiE,OAAQwB,EACRxF,KAAMwB,KAKC8E,EAAoB,SAACtF,EAAckD,EAAYE,GAAgB,IAAD,EACxBH,EAC/CjD,EACAkD,EACA,EACAE,EACA5C,GALc4D,EADyD,EACjEpB,OAA2BqB,EADsC,EAC5C7C,KAD4C,EAStByB,EACjDjD,EACAkD,EACA,GACAE,EACA5C,GALc8D,EATyD,EASjEtB,OAA4BuB,EATqC,EAS3C/C,KAT2C,EAiBxByB,EAC/CjD,EACAkD,EACA,EACAE,EACA3C,GALc+D,EAjByD,EAiBjExB,OAA2ByB,EAjBsC,EAiB5CjD,KAjB4C,EAyBtByB,EACjDjD,EACAkD,GACC,GACDE,EACA3C,GALciE,EAzByD,EAyBjE1B,OAA4B2B,EAzBqC,EAyB3CnD,KAQ9B,MAAO,CACLoD,QAAS,CACP/B,OAAQ,EACRC,aAAc,UACdtB,KAAM6C,EACNtB,UAAWzC,EACXvB,MAAO,GACPiE,OAAQoB,EACRpF,KAAMwB,GAERqE,SAAU,CACRhC,OAAQ,EACRC,aAAc,WACdtB,KAAM+C,EACNxB,UAAWxC,EACXxB,MAAO,GACPiE,OAAQsB,EACRtF,KAAMwB,GAERsE,QAAS,CACPjC,OAAQ,EACRC,aAAc,UACdtB,KAAMiD,EACN1B,UAAWzC,EACXvB,MAAO,GACPiE,OAAQwB,EACRxF,KAAMyB,GAERsE,SAAU,CACRlC,OAAQ,EACRC,aAAc,WACdtB,KAAMmD,EACN5B,UAAWxC,EACXxB,MAAO,GACPiE,OAAQ0B,EACR1F,KAAMyB,KCxnBS8E,EACnB,WAAYzC,GAAe,oBACzB0C,KAAK1C,aAAeA,EACpB0C,KAAKxC,OAAS,IACdwC,KAAKhE,KAAOiE,EACZD,KAAKzC,UAAY0C,EACjBD,KAAKxG,KAAOyG,EACZD,KAAK3C,OAAS,GCPL6C,EAAqB,SAACxB,EAAQnF,EAAOU,GAChD,IAAMkG,EAAOzB,EAAOnF,MAAQmF,EAAOrB,OACnC,OAAIqB,EAAOlF,OAASyG,EAEdvB,EAAOnB,YAAc0C,EAGrB7B,KAAKgC,IAAI7G,EAAQ8G,SAAS3B,EAAOlB,QAAS,GAAKkB,EAAOrB,OAAS8C,EAI5D/B,KAAKN,IAAI,EAAGY,EAAOlB,OAASjE,GAASmF,EAAOrB,OAAS8C,EACnDzB,EAAOlF,OAASyG,EAErBvB,EAAOnB,YAAc0C,EAGrB7B,KAAKgC,IAAIC,SAAS3B,EAAOlB,QAAUjE,EAAO,GAAKmF,EAAOrB,OAAS8C,EAI5D/B,KAAKN,IAAI,EAAGvE,EAAQmF,EAAOlB,QAAUkB,EAAOrB,OAAS8C,EACnDzB,EAAOlF,OAASyG,EAErBvB,EAAOnB,YAAc0C,GAEf1G,EAAQU,EAAUO,cAAgBkE,EAAOrB,QAG3CpD,EAAUO,aAAejB,GAASmF,EAAOrB,YAP5C,GAmBF,SAASiD,EAAaC,EAAYC,EAAGC,EAAGC,EAAGC,EAAGC,GAEnDA,GAAQ,IACRD,GAAQ,IACR,IAAIE,GAAMzC,KAAKvB,IAAI2D,EAAIC,IAAME,EAAKC,EAAIA,EAAK,GAAKF,IAAME,EAAIxC,KAAK0C,KAAKJ,IAChEK,EAAKF,EAAKD,EAAIxC,KAAK0C,KAAKJ,GAC5B,OAAIH,IAAeN,EACVO,EAAIQ,EAAIH,GAAMJ,EAAIrC,KAAK6C,KAAKN,EAAID,GAAKM,EAAID,GAEzCN,EAAIrC,KAAK6C,KAAKN,EAAID,GAAKM,GAAKD,GAAMP,EAAIQ,GAAKH,GAKtD,SAASG,EAAIE,GACX,GAAIA,EAAI,EACN,OAAO,EAAIF,GAAKE,GAEhB,IAAIC,EAAI,GAAK,EAAI,SAAYD,GAC7B,OACE,EACC9C,KAAK6C,KAAMC,EAAIA,EAAK,GAAK9C,KAAK0C,KAAK,EAAI1C,KAAKgD,IAC3CD,GACC,UACCA,GAEIA,GAAK,YAAcA,GAAwB,YAAJA,EAAd,cADzB,a,YCpEOE,E,WAWjB,aAAe,yBATfC,OAAS,CACL,OACA,MACA,SACA,SACA,SACA,SAIAtB,KAAKuB,MAAQ,E,uDAKb,IAAMC,EAAUxB,KAAKsB,OAAOtB,KAAKuB,OASjC,OAPGvB,KAAKuB,OAASvB,KAAKsB,OAAOG,OAEzBzB,KAAKuB,MAAQ,EAGbvB,KAAKuB,QAEFC,M,KClBA,SAASE,EAAgBC,GAA4B,IAApBC,EAAmB,uDAAJ,GACvDC,EAAiBC,kBAAO,GAE9BhK,qBAAU,WACJ+J,EAAeE,QACjBF,EAAeE,SAAU,EAEzBJ,MAEDC,GCXL,IAAMI,GAAW,SAACC,GAAW,IACnBC,EAAqCD,EAArCC,eAAgBvK,EAAqBsK,EAArBtK,KAAMiG,EAAeqE,EAAfrE,WACtBuE,EAAmBF,EAAnBE,eAFkB,EAUoBC,mBAAS,IAV7B,mBAUnBC,EAVmB,KAUFC,EAVE,OAWcF,mBAASzK,EAAKqE,MAX5B,mBAWnBuG,EAXmB,KAWLC,EAXK,OAYcJ,mBAAS,CAACzK,EAAK6F,SAZ7B,mBAYnBiF,EAZmB,KAYLC,EAZK,OAakBN,mBAASzK,EAAK6F,QAbhC,mBAanBmF,EAbmB,KAaHC,EAbG,OAcwBR,mBAASzK,EAAK4F,WAdtC,mBAcnBsF,EAdmB,KAcAC,EAdA,OAecV,mBAASzK,EAAK6B,MAf5B,mBAenBuJ,EAfmB,KAeLC,EAfK,KAkBpB/I,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAGzCkE,EAAW8E,EAAqBtL,EAAKqE,MArBjB,EAwBAoG,qBAxBA,mBAwBnB7I,EAxBmB,KAwBZ2J,EAxBY,KA2B1BpL,qBAAU,WACJ8F,GACQA,GAAcmF,IAAiBE,GACzCC,EACE5C,EACE3I,EAAK6B,MACJS,EAAUO,cACV7C,EAAK6F,QACLW,GACAlE,EAAUH,UACVG,EAAUL,YACX0B,QAAQ,OAMhBoG,GAAgB,WACdS,EAAexK,EAAK2F,aAAc,QAAS/D,KAC1C,CAACA,IAGJzB,qBAAU,WACR,GAAI8F,EAAY,CACd,IAAMyE,EAAkBzE,EAAWjG,KAAKwL,KACtC,SAACC,GAAD,OAAUA,EAAKlF,kBAEjBoE,EAAmBD,MAEpB,IAGHX,GAAgB,WACd,GAAI9D,EAAY,CAEd,IAAMyF,EAAczF,EAAWjG,KAAK2L,MAClC,SAACF,GAAD,OAAUA,EAAKlF,iBAAmBqE,KAGpC,IAAKc,EAAa,OAGlB,IAAM7J,EAAO7B,EAAK6B,KAAKiF,cAMjB8E,EAHkBF,EAAY9E,QAAQ/E,GAGX8J,MAC/B,SAACF,GAAD,OAAWA,EAAK5F,UAAYmF,KAIP,QAAnBhL,EAAK4F,UACP2F,EAASK,EAASC,KAElBN,EAASK,EAASE,KAItBtB,EAAexK,EAAK2F,aAAc,SAAUqF,KAC3C,CAACA,EAAgBO,IAEpBxB,GAAgB,WACd,GAAI9D,EAAY,CAEd,IAAMyF,EAAczF,EAAWjG,KAAK2L,MAClC,SAACF,GAAD,OAAUA,EAAKlF,iBAAmBqE,KAIpC,IAAKc,EAAa,OAGlB,IAAM7J,EAAO7B,EAAK6B,KAAKiF,cAMjBiF,EAHkBL,EAAY9E,QAAQ/E,GAGN2J,KAAI,SAACC,GAAD,OAAUA,EAAK5F,UAGzDkF,EAAgBgB,GAEhBvB,EAAexK,EAAK2F,aAAc,OAAQiF,MAE3C,CAACA,IAGJb,GAAgB,WACdS,EAAexK,EAAK2F,aAAc,YAAauF,KAC9C,CAACA,IAGJnB,GAAgB,WACdS,EAAexK,EAAK2F,aAAc,OAAQyF,GAGtCA,IAAiBE,GAEnBC,EAASjJ,EAAUO,gBAEpB,CAACuI,IAEJ,IAAMY,EAAeZ,IAAiBE,EAEtC,OACE,4BAEE,4BACE,4BACE5J,GAAG,YACHD,UAAU,eACVmB,MAAOsI,EACPnI,SAAU,SAACC,GAAD,OAAOmI,EAAqBnI,EAAEE,OAAON,SAE/C,uCACA,0CAIJ,4BACE,2BACEf,KAAK,SACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACRwH,EAAexK,EAAK2F,aAAc,SAAU3C,EAAEE,OAAON,QAEvDA,MAAO5C,EAAK0F,UAIhB,4BACE,4BACEjE,UAAU,eACVsB,SAAU,SAACC,GAAD,OAAOqI,EAAgBrI,EAAEE,OAAON,QAC1CA,MAAOwI,GAEP,wCACA,uCACA,0CAIJ,6BACIY,IACC/F,EACC,yBAAKgG,MAAM,cACT,4BACEA,MAAM,eACNvK,GAAG,4BACHqB,SAAU,SAACC,GAAD,OAAOiI,EAAkBjI,EAAEE,OAAON,QAC5CA,MAAOoI,GAENF,EAAaU,KAAI,SAAC5J,GAAD,OAChB,gCAASsK,MAAMtK,GAAS,KAAOA,QAKrC,2BACEC,KAAK,SACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACRwH,EAAexK,EAAK2F,aAAc,SAAU3C,EAAEE,OAAON,QAEvDA,MAAO5C,EAAK6F,WAKpB,6BACImG,IACE/F,EAWA,yBAAKgG,MAAM,cACT,4BACEA,MAAM,eACNvK,GAAG,4BACHqB,SAAU,SAACC,GAAD,OAAO6H,EAAgB7H,EAAEE,OAAON,QAC1CA,MAAOgI,GAENF,EAAgBc,KAAI,SAACnH,GAAD,OACnB,gCAASA,QAlBf,2BACExC,KAAK,OACLc,YAAY,SACZlB,UAAU,mCACVsB,SAAU,SAACC,GAAD,OACRwH,EAAexK,EAAK2F,aAAc,OAAQ3C,EAAEE,OAAON,QAErDA,MAAO5C,EAAKqE,SAkBpB,wBAAI8H,MAAO,CAAEC,cAAe,WAC1B,2BAAIxK,EAAQ5B,EAAK0F,SAGnB,wBAAIyG,MAAO,CAAEC,cAAe,WAC1B,4BAAKpM,EAAK4F,YAAcxC,EAAOxB,GAASA,GAAS5B,EAAK0F,OAAtD,MAGF,wBAAIyG,MAAO,CAAEC,cAAe,WAC1B,4BACEvK,KAAK,SACLwK,aAAW,aACX5K,UAAU,uBACV6K,QAAS,kBAAM/B,EAAevK,EAAK2F,gBAEnC,0BAAM4G,cAAY,QAAlB,cA2IKC,GApID,SAAClC,GAAW,IAChBmC,EAAmDnC,EAAnDmC,UAAWC,EAAwCpC,EAAxCoC,aAAyBzG,GAAeqE,EAA1BqC,UAA0BrC,EAAfrE,YAyBtCuE,EAAiB,SAAC9I,EAAIkL,EAAUhK,GACpC,IAAMiK,EAAY,eAAQJ,GAC1BI,EAAanL,GAAIkL,GAAYhK,EAC7B8J,EAAaG,IAGTtC,EAAiB,SAAC7I,GACtB,IAAMmL,EAAY,eAAQJ,UACnBI,EAAanL,GACpBgL,EAAaG,IAnCQ,EAsCA,WACrB,IAAIC,EAAU,EACVC,EAAc,EACdrH,EAAS,EAEb,IAAK,IAAIY,KAAOmG,EAAW,CACzB,IAAMb,EAAWa,EAAUnG,GAC3BwG,IAAYlB,EAAShK,OAASgK,EAASlG,OAGvCqH,IADEnB,EAAShG,YAAcxC,GAAQwI,EAAShK,QAAUgK,EAAShK,QAChCgK,EAASlG,OACtCA,IAAWkG,EAASlG,OAEtB,MAAO,CACLoH,QAASA,EAAQnJ,QAAQ,GACzBoJ,YAAaA,EAAYpJ,QAAQ,GACjC+B,UAIqCsH,GAAjCF,EA1De,EA0DfA,QAASC,EA1DM,EA0DNA,YAAarH,EA1DP,EA0DOA,OAI9B,OACE,yBAAKjE,UAAU,uBACb,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,cACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,yCACA,sCACA,oCACA,sCACA,sCACA,uCACA,4CACA,4BACE,4BACEI,KAAK,SACLJ,UAAU,wBACV6K,QA7EI,WAClB,IAAMO,EAAY,eAAQJ,GACpB/K,GAAK,IAAIqC,MAAOkJ,cACtBJ,EAAanL,GAAM,IAAI0G,EAAO1G,GAC9BgL,EAAaG,KAsED,cAUN,+BA7EgB,WACtB,IAAMhD,EAAS,GACf,IAAK,IAAInI,KAAM+K,EACb5C,EAAOqD,KACL,kBAAC,GAAD,CACEjH,WAAYA,EACZsE,eAAgBA,EAChBC,eAAgBA,EAChBxK,KAAMyM,EAAU/K,GAChB4E,IAAK5E,KAIX,OAAOmI,EAiEEsD,GACD,4BACE,4BACE,qCAEF,4BACE,2BAAIzH,IAEN,6BACA,6BACA,6BACA,4BACE,2BAAIoH,IAEN,4BACE,2BAAIC,IAEN,4BACE,4BACElL,KAAK,SACLwK,aAAW,aACX5K,UAAU,uBACV6K,QAAS,kBAAMI,EAAa,MAE5B,0BAAMH,cAAY,QAAlB,sB,wCC3WLa,GAAkBC,IAAMC,cALhB,CACnBjL,UAAU,EACVkL,YAAa,e,oGCQTC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,YAAaJ,EAAMK,QAAQ,QA6GhBC,GAzGK,SAAC,GAAkC,IAAhCtB,EAA+B,EAA/BA,aAAczG,EAAiB,EAAjBA,WAAiB,GACpCuH,KACQH,IAAM5C,UAAS,IAFa,mBAE7CwD,EAF6C,KAEvCC,EAFuC,KAG9CC,EAAYd,IAAMlD,OAAO,MAHqB,EAIf5H,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAA1DO,EAJ4C,EAI5CA,aAAcZ,EAJ8B,EAI9BA,WAMhBmM,EAAc,SAACC,EAAOxB,GACtBsB,EAAU/D,SAAW+D,EAAU/D,QAAQkE,SAASD,EAAMnL,UAG1D2J,GAAgBH,EAAaG,EAAahK,EAAcZ,EAAYgE,IACpEiI,GAAQ,KAGV,SAASK,EAAkBF,GACP,QAAdA,EAAM/H,MACR+H,EAAMG,iBACNN,GAAQ,IAKZ,IAAMO,EAAWpB,IAAMlD,OAAO8D,GAS9B,OARAZ,IAAMlN,WAAU,YACW,IAArBsO,EAASrE,UAA6B,IAAT6D,GAC/BE,EAAU/D,QAAQsE,QAGpBD,EAASrE,QAAU6D,IAClB,CAACA,IAGF,6BACE,kBAACU,GAAA,EAAD,CACEC,IAAKT,EACLU,gBAAeZ,EAAO,sBAAmBa,EACzCC,gBAAc,OACdzC,QAnCe,WACnB4B,GAAQ,SAACO,GAAD,OAAeA,MAmCnBO,MAAM,WALR,0BASA,kBAACC,GAAA,EAAD,CACEhB,KAAMA,EACNiB,SAAUf,EAAU/D,QACpB+E,UAAML,EACNM,YAAU,EACVC,eAAa,IAEZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,GAAA,EAAD,iBACMF,EADN,CAEEnD,MAAO,CACLsD,gBACgB,WAAdF,EAAyB,aAAe,mBAG5C,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBC,YAAaxB,GAC9B,kBAACyB,GAAA,EAAD,CACEC,cAAe7B,EACfvM,GAAG,iBACHqO,UAAWxB,GAEX,kBAACyB,GAAA,EAAD,CACE1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KADjC,oBAKA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,mBAGA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,iBAGA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,kBAGA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,kBAGA,kBAAC0E,GAAA,EAAD,CACE1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KADjC,mBAKA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,eAGA,kBAAC0E,GAAA,EAAD,CAAU1D,QAAS,SAACtJ,GAAD,OAAOoL,EAAYpL,EAAGsI,KAAzC,yBCrGZkC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJsC,SAAU,GAEZC,WAAY,CACVpC,YAAaJ,EAAMK,QAAQ,IAE7BoC,MAAO,CACLF,SAAU,GAEZG,OAAQ,CACNC,aAAc,OACdC,SAAU,WACVC,OAAQ,UAIG,SAASC,GAAT,GAAmD,IAA7B9D,EAA4B,EAA5BA,aAAczG,EAAc,EAAdA,WAC3CwK,EAAUjD,KACV/K,EAAWC,cAF8C,EAG7BgO,qBAAWtD,IAArC/K,EAHuD,EAGvDA,SAAUkL,EAH6C,EAG7CA,YAElB,OACE,kBAACoD,GAAA,EAAD,CAAQL,SAAS,SAAS7O,UAAWgP,EAAQL,QAC3C,kBAACQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKrP,UAAWgP,EAAQN,OAA5C,2BAGA,kBAAC,GAAD,CAAazD,aAAcA,EAAczG,WAAYA,IACrD,kBAAC8K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAS9O,EACTU,SAAU,kBACRwK,GAAY,SAAC6D,GAEX,OADa,IAATA,GAAe3O,EVd9B,CACLZ,KAhCsB,gBU8CEuP,MAGZ/E,aAAW,qBAGfgF,MAAO,sB,gEChDb7D,GAAYC,aAAW,CAC3BhC,KAAM,CAEJ6F,OAAQ,OACRC,MAAO,UAkEIC,GA9DA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACGhH,mBAAS,IADZ,mBAC1BiH,EAD0B,KACdC,EADc,KAE3BlB,EAAUjD,KAgBhB,OACE,oCAEE,kBAACoE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,GAAA,EAAD,CACEtQ,GAAG,iBACHkF,QAASqL,GACTC,eAAgB,SAACnL,GAAD,OACdA,EAAOoL,cAAgB,KAAOpL,EAAOqL,aAEvCC,cAAe,SAACzL,EAASpE,GAAV,OA1BL,SAACoE,EAASpE,GAE9B,IAAM8P,EAAQ9P,EAAMkP,WAAW5K,cAI/B,OAFA6K,EAAcW,GAEVA,EAAMxI,QAAU,EAAU,GAGvBlD,EAAQ2L,QAAO,SAACC,GAAD,OAAOA,EAAEL,cAAcM,SAASH,MAiBTD,CAAczL,EAASpE,IAC1Df,UAAWgP,EAAQhF,KACnBiH,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtB,MAAM,gBACNP,QAAQ,eAGZ+B,cACEnB,EAAW5H,QAAU,EACjB,uBACA,sBAIV,kBAACgI,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACpD,GAAA,EAAD,CACEK,MAAM,UACN8B,QAAQ,YACRxE,QAAS,kBAAMmF,EAAWC,IAC1BjQ,UAAWgP,EAAQhF,MAJrB,e,oBC7CGqH,GAhBD,SAACxI,GACb,OACE,yBAAK7I,UAAU,sBAAsB0N,KAAK,SACxC,gCAAS7E,EAAMyI,UACf,4BACElR,KAAK,SACLJ,UAAU,QACVuR,eAAa,QACb3G,aAAW,QACXC,QAAShC,EAAM2I,YAEf,0BAAM1G,cAAY,QAAlB,W,UCMO2G,GAdM,WACnB,IAAM5Q,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAE/C,OACE,kBAAC6Q,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,wBAAInH,MAAM,aAAa3J,EAAUP,QACjC,uBAAGkK,MAAM,QAAT,UAAwB3J,EAAUO,cAClC,2BAAImB,IAAO,IAAID,MAAQE,OAAO,eAHhC,O,yCCHAuJ,GAAYC,aAAW,CAC3BE,KAAM,CACJ0F,MAAO,KAETC,MAAO,CACLD,MAAO,IAETE,OAAQ,CAAEF,MAAO,SAGJ,SAASG,GAAT,GAA4D,IAArC5Q,EAAoC,EAApCA,MAAO6Q,EAA6B,EAA7BA,SAAUtD,EAAmB,EAAnBA,MAAOhK,EAAY,EAAZA,IAAKsC,EAAO,EAAPA,IAC3DgI,EAAUjD,KAMhB,OACE,yBAAK/L,UAAWgP,EAAQ9C,MACtB,kBAACkD,GAAA,EAAD,CAAYnP,GAAG,eAAegS,cAAY,GACvCvD,GAEH,kBAACwD,GAAA,EAAD,CAAMC,WAAS,EAAC7F,QAAS,EAAG8F,WAAW,UACrC,kBAACF,GAAA,EAAD,CAAMlI,MAAI,GACR,kBAAC,KAAD,OAEF,kBAACkI,GAAA,EAAD,CAAMlI,MAAI,EAACqI,IAAE,GACX,kBAACC,GAAA,EAAD,CACE5N,IAAKA,EACLsC,IAAKA,EACL7F,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CG,SAlBiB,SAACsL,EAAO2F,GACjCP,EAASO,IAkBDC,kBAAgB,eAChBxS,UAAWgP,EAAQ8C,UAGvB,kBAACI,GAAA,EAAD,CAAMlI,MAAI,M,kCCJHyI,GAlCO,SAAC,GAAsB,IAApBlU,EAAmB,EAAnBA,KAAM+B,EAAa,EAAbA,OACvBoS,EAAU,GAChBnU,EAAKoU,SAAQ,SAACC,GACZF,EAAQjH,KAAK,CACX5B,EAAsB+I,EAAI,IAC1BA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,QAIR,IAAIC,EAAiBC,QAAcC,QAEnCF,EAAeG,QAAQN,GAEvB,IAAIO,EAAQH,WAOZ,OALgBG,EAAMC,KAAK,GACjBC,KAAKN,EAAeO,MAAM,CAAEjS,MAAO,KAAMkS,KAAK/S,GACxD2S,EAAMK,WAAWH,KAAKN,EAAeO,MAAM,CAAEjS,MAAO,KACpD8R,EAAMM,YAAY,aAAc,cAG9B,oCACIN,EAGA,kBAAC,KAAD,CAAUrB,MAAM,OAAO/B,OAAQ,IAAK2D,SAAUP,EAAOvE,MAAOpO,IAF5D,wD,wCCvBOmT,GAJS,SAAC,GAAc,IAAZlV,EAAW,EAAXA,KACzB,OAAO,kBAAC,KAAD,CAAiBmV,WAAYC,KAAYxO,QAAS5G,K,qBCwF5CqV,OAzFf,YAA4B,IAAbC,EAAY,EAAZA,SACbrQ,QAAQC,IAAIoQ,GACZ,IAQIC,EAAc,CAChBC,cAAe,CACbC,SAAU,GAGZtF,MAAO,CACLuF,KAAM,mBAGRxU,MAAO,CACL,CACEyU,OAAQ,CACNC,MAAO,QACPrM,GAAI,GAEN4G,MAAO,CACLuF,KAAM,QAERpE,OAAQ,MACRuE,UAAW,EACXC,OAAQ,CACNC,SAAS,IAGb,CACEJ,OAAQ,CACNC,MAAO,QACPrM,GAAI,GAEN4G,MAAO,CACLuF,KAAM,UAERM,IAAK,MACL1E,OAAQ,MACR2E,OAAQ,EACRJ,UAAW,IAIfK,QAAS,CACPC,OAAO,GAGTC,OAAQ,CACN,CACEvU,KAAM,cACN7B,KAAMsV,GAER,CACEzT,KAAM,SACN7B,KAAO,WAGL,IAFA,IAAIqW,EAAa,GAERC,EAAI,EAAGA,EAAIhB,EAASxL,OAAQwM,IACnCD,EAAWnJ,KAAK,CACdoI,EAASgB,GAAG,GACZhB,EAASgB,GAAG,KAGhB,OAAOD,EATF,GAWPnV,MAAO,KAKb,OACE,yBAAKO,UAAU,OAEX,kBAAC,KAAD,CACE0T,WAAYoB,KACZC,gBAAiB,aACjB5P,QAAS2O,MCyeJF,GAviBH,WAAO,IAAD,EACkB5K,mBAASa,GAD3B,mBACTmB,EADS,KACEC,EADF,OAEQjC,mBAAS,MAFjB,mBAETzK,EAFS,KAEHyW,EAFG,OAGYhM,mBAAS,MAHrB,mBAGTiM,EAHS,KAGDC,EAHC,OAIsBlM,mBAAS,MAJ/B,mBAITmM,EAJS,KAIIC,EAJJ,KAKVvU,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAL/B,EAMgBmI,oBAAS,GANzB,mBAMTpI,EANS,KAMCkL,EAND,OAOoB9C,qBAPpB,mBAOTxE,EAPS,KAOG6Q,EAPH,OAQQrM,qBARR,mBAQTsM,EARS,KAQHC,EARG,OASQvM,qBATR,oBASTwM,GATS,MASHC,GATG,SAU4BzM,qBAV5B,qBAUT0M,GAVS,MAUOC,GAVP,SAW0B3M,oBAAS,GAXnC,qBAWT4M,GAXS,MAWMC,GAXN,SAY0B7M,oBAAS,GAZnC,qBAYT8M,GAZS,MAYMC,GAZN,SAaY/M,mBAAS,MAbrB,qBAaTgN,GAbS,MAaDC,GAbC,MAcV9U,GAAQ,CAAEP,WAAUkL,eACpB9K,GAAWC,cAfD,GAgB+BH,aAAY,SAACC,GAAD,OAAWA,EAAMF,aAApEL,GAhBQ,GAgBRA,WAAYE,GAhBJ,GAgBIA,SAAUU,GAhBd,GAgBcA,aAhBd,GAiBgC4H,mBAAS,MAjBzC,qBAiBTkN,GAjBS,MAiBSC,GAjBT,MAoBVC,GAAUC,uBAAY,SAACC,GAC3BpB,EAAU,kBAAC,GAAD,CAAO1D,WAAY,kBAAM0D,EAAU,QAAQoB,MACpD,IAGGC,GAAeF,uBAAY,SAACC,GAChClB,EACE,kBAAC,GAAD,CAAO5D,WAAY,kBAAM4D,EAAe,QAAQkB,MAEjD,IAGGE,GAAaH,uBAAY,WAE7B,GAAsC,IAAlCI,OAAOC,KAAK1L,GAAW3C,OACzB,OAAO+N,GAAQ,8BAGjB,IAAKvV,EAAUO,cAAgB,EAC7B,OAAOgV,GAAQ,oCAGjB,GAAI3L,OAAO5J,EAAUH,UACnB,OAAO0V,GAAQ,sCAEjB,IAAMO,EAAU,GACZC,EAAY,EACZC,EAAYlS,IAEVmS,EAAS,GACTC,EAAc,GAgBpB,IAAK,IAAI9W,KAbLuV,MACGA,GAAOoB,IAAWA,GAAapB,KAC/BA,GAAOqB,IAAWA,GAAarB,IACpCmB,EAAQlL,MAAM+J,KAGZF,KACGA,EAAOsB,IAAWA,GAAatB,IAC/BA,EAAOuB,IAAWA,GAAavB,GACpCqB,EAAQlL,MAAM6J,IAIDtK,EAAW,CACxB,IAAMb,EAAWa,EAAU/K,GACrBsK,EAAeJ,EAAS/J,OAASyJ,EACjCzF,EAASmG,GAAgB1J,EAAUO,cAAgB+I,EAAS/F,OAC5DxB,EAAOuH,EAASvH,KAItB,GAHeuH,EAASlG,QAGV,EAAG,OAAOmS,GAAQ,+BAGhC,IAAK7L,EAAc,CAEjB,GAAInG,GAAU,EAAG,OAAOgS,GAAQ,qCAGhC,IAAKxT,GAAQL,MAASuB,KAAKlB,GAAQ,EACjC,OAAOwT,GAAQ,6BAInBO,EAAQlL,KAAK5B,EAAWzF,IAGpBA,EAASwS,IAAWA,EAAYxS,GAChCA,EAASyS,IAAWA,EAAYzS,GAGtC,IAAM4S,GAAWJ,EAAYC,GAAa,EACtC7P,EAAM,EAUNtC,EAAM,EAUJuS,IAbJjQ,EAJGwO,GAIGxQ,KAAKgC,KAAKwO,GAAMoB,GAFhB5R,KAAKkS,MAAMN,EAAsB,GAAVI,KAY7BtS,EAJG4Q,EAIGtQ,KAAKN,KAAK4Q,EAAMuB,GAFhB7R,KAAKkS,MAAML,EAAsB,GAAVG,KAKF,GAG7BL,EAAQlL,KAAK/G,GACbiS,EAAQlL,KAAKzE,GAEbyO,GAAQzO,GACRuO,EAAQ7Q,GAIR,IAFA,IAAImQ,EAAInQ,EAEDmQ,EAAI7N,GAET2P,EAAQlL,KAAK5B,EAAWgL,IACxBA,GAAKoC,EAIPN,EAAQQ,MAAK,SAAC9U,EAAG+U,GAAJ,OAAU/U,EAAI+U,KAE3B,IAAMhP,EAAS,GAGTF,EAAS,IAAID,EAGnB,IAAK,IAAIhI,KAAM+K,EAAW,CACxB,IAAMb,EAAWa,EAAU/K,GACvB4E,EACFsF,EAAShG,UAAY,IAAMgG,EAAS/J,KAAO,IAAM+J,EAAS/F,OAExD+F,EAAS/J,OAASyJ,IACpBhF,EACEsF,EAAShG,UACT,IACAgG,EAAS/J,KACT,KACAS,EAAUO,cAGdgH,EAAOqD,KAAK,CACVqL,OAAQ,GACRjS,MACA0I,MAAOrF,EAAOmP,WACdhW,UAAU,IASd,IAJA,IAAIiW,EAAY3S,IACZ4S,GAAa5S,IAGjB,MAAmBgS,EAAnB,eAA4B,CAAvB,IAAIvS,EAAM,KACToT,EAAY,EACZC,EAAgB,EAEhB5C,EAAI,EACR,IAAK,IAAI5U,KAAM+K,EAAW,CACxB,IAAMb,EAAWa,EAAU/K,GAGrByX,EAAiB7N,EACrBA,EAAwBM,EAAU/F,EAAQvD,IAItCkE,GAAYxC,MAASuB,KAAKqG,EAASvH,KAAM,SAAS,GAElD+U,EAAoB9N,EACxBM,EAAS/J,MACRgE,GACA+F,EAAS/F,QACTW,GACAlE,EAAUH,UACVG,EAAUL,YAIT2J,EAAS/J,OAASyJ,EAEpB4N,IAAkBC,EAGdvN,EAAShG,YAAc0F,EAEzB4N,IACGE,EAAoBxN,EAAShK,OAASgK,EAASlG,OAElDwT,IACGtN,EAAShK,MAAQwX,GAAqBxN,EAASlG,OAKlDyT,EAAiBH,IAAWA,EAAYG,GAExCA,EAAiBJ,IAAWA,EAAYI,GAG5CtP,EAAOyM,GAAGiC,OAAOrL,KAAK,CACpB3D,EAAG+B,EAAWzF,GACdwT,EAAG/N,EAAW6N,KAIhBF,GAAa3N,EAAW6N,GACxB7C,IAIFiC,EAAOrL,KAAK,CAAE3D,EAAG+B,EAAWzF,GAASwT,EAAG/N,EAAW2N,KACnDT,EAAYtL,KAAK,CAAE3D,EAAG+B,EAAWzF,GAASwT,EAAG/N,EAAW4N,KAG1D,IAAM7Y,EAAU,CAACoG,KAAKkS,MAAkB,IAAZI,GAAkBtS,KAAKkS,MAAkB,IAAZK,IAGnDM,EAAe,CACnBf,SACAjS,IAAK,WACL0I,MAAO,QACPlM,UAAU,GAINyW,EAAsB,CAC1BhB,OAAQC,EACRlS,IAAK,QACL0I,MAAO,OACPlM,UAAU,GAUZ,GAPA+G,EAAOqD,KAAKqM,GAEZ1P,EAAOqD,KAAKoM,GAGZ3C,EAAU,MACV1R,QAAQC,IAAI2E,GACRwN,GAAe,CACjB,IADiB,EACXmC,EAAM,GADK,cAGE3P,GAHF,IAGjB,2BAA2B,CAAC,IAAnBuM,EAAkB,QACnBqD,GAAa,CACjBzZ,KAAM,GACN0Z,SAAUtD,EAAOtT,SACjBkM,MAAOoH,EAAOpH,MACd8F,KAAMsB,EAAO9P,KAEfkT,EAAItM,KAAKuM,IAPgB,sBAQPrD,EAAOmC,QARA,IAQzB,8BAAiC,CAAC,IAAzBoB,GAAwB,SAC/BF,GAAWzZ,KAAKkN,KAAK,EAAEyM,GAAMpQ,GAAIoQ,GAAMN,KAThB,oCAHV,gCAgBjB,OAAO3B,GAAU,CACftB,OAAQoD,EACRzY,MAAO,CACLoP,MAAO,CACLuF,KAAM,oBAGVxU,MAAO,CACLiP,MAAO,CACLuF,KAAM,eAGVhB,MAAO,CACL7S,KAAM,UAERsO,MAAO,CACLuF,KAAM,YAKZe,EAAQ,CAAEzW,KAAM6J,EAAQxJ,cACvB,CAACoM,EAAWnK,EAAWuV,GAASZ,GAAMF,EAAMM,KAG/CtN,GAAgB,WAEd4M,EAAU,MACVjK,EAAa,IACb+J,EAAQ,MACRK,EAAc,QACb,CAACzU,IAGJ0H,GAAgB,WACd2C,EAAa,IACb0K,GAAkB,MAClBwC,OACC,CAAC3T,IAGJ8D,GAAgB,WACdkO,OACC,CAACxL,EAAWwL,GAAYZ,KAG3B,IAAMwC,GAAe,uCAAG,WAAO9X,GAAP,iBAAA+B,EAAA,+EAEGgW,KAAMC,IAC3B,8DAAuDhY,EAAvD,WACEiY,wBAJgB,gBAEZha,EAFY,EAEZA,KAIR8W,EAAc9W,GACdyC,GAASwX,EAAoBja,EAAKka,iBAClCzX,GAASwX,EAAqBja,EAAKma,OACV,IAArBna,EAAKA,KAAK8J,OACZkO,GhBvVwB,sCgBuVYnB,GAEpCA,EAAe,MAZG,kDAepBmB,GhB3VyB,8CgB2VUnB,GAff,0DAAH,sDAmBf+C,GAAc,uCAAG,WAAO7X,GAAP,yBAAA+B,EAAA,6DACjBsW,EAAO3T,KAAKhD,OAAO,IAAIM,KAAS,KADf,SAEE+V,KAAMC,IAC3B,6FAAsFK,EAAtF,WACEJ,wBAJiB,OAWrB,IAXqB,SAEbha,EAFa,EAEbA,KAKF8J,EAAS9J,EAAKmF,EAAE2E,OAEhBD,EAAS,GAENyM,EAAI,EAAGA,EAAIxM,EAAQwM,IAC1BzM,EAAOqD,KAAK,CAAClN,EAAKqa,EAAE/D,GAAItW,EAAKwS,EAAE8D,GAAItW,EAAKsa,EAAEhE,GAAItW,EAAKua,EAAEjE,GAAItW,EAAKmF,EAAEmR,KAGlEc,GAAkBvN,GAfG,2CAAH,sDA6BpB,OACE,oCACE,kBAACuD,GAAgBoN,SAAjB,CAA0B5X,MAAOA,IAC/B,kBAAC,GAAD,CAAY8J,aAAcA,EAAczG,WAAYA,IACpD,kBAAC2L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACe,gBAArBzP,EAAUP,QAA4B,kBAAC,GAAD,QAG3C,kBAAC8P,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACN1P,GAAY,kBAAC,GAAD,CAAQoP,WAAYoI,KAChCjD,IAGL,kBAAC/E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,GAAD,CACE9L,WAAYA,EACZwG,UAAWA,EACXC,aAAcA,EACdC,UAAWsL,OAKjB,kBAACpG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAW1P,SAAUA,IACrB,yBAAKZ,UAAU,uBACb,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,cACb,kBAAC,GAAD,CACE0E,IAAK,EACLsC,IAAK,IACL0H,MAAO,aACPvN,OAAQX,GACRwR,SAAU,SAACgH,GAAD,OAAShY,GAASwX,EAAyBQ,OAEvD,kBAAC,GAAD,CACEtU,KAAM,GACNsC,IAAK,IACL0H,MAAO,WACPvN,OAAQT,GACRsR,SAAU,SAACgH,GAAD,OAAShY,GAASwX,EAAuBQ,QAEnDpY,GACA,kBAAC,GAAD,CACE8D,IAAK,EACLsC,IAAK,IACL0H,MAAO,qBACPvN,MAAO+U,GACPlE,SAAU,SAACgH,GAAD,OAhEC,SAACrW,GAC9B,IAAMyI,EAAY,eAAQJ,GAC1B,IAAK,IAAInG,KAAOuG,EAAc,CAC5B,IAAMjB,EAAWiB,EAAavG,GACxBoU,EAAUpP,EAAa,IAAIvH,KAAQK,GACzCwH,EAASvH,KAAOL,IAAO0W,GAASzW,OAAO,cAEzCyI,EAAaG,GACb+K,GAAoBxT,GAwDiBuW,CAAuBF,OAG5CpY,GACA,kBAAC,GAAD,CACE8D,IAAK,EACLsC,IAAK,IACL0H,MAAO,aACPvN,MAAOC,GACP4Q,SAAU,SAACgH,GAAD,OAAShY,GAASwX,EAAoBQ,UAM1D,kBAAC3I,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACN2E,GAAkB,KACnB,yBAAKjV,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBAAf,gBAEE,kBAACsP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,SAAUkG,GACVtU,SAAU,kBACRuU,IAAiB,SAAClG,GAAD,OAAWA,MAE9B/E,aAAW,qBAGfgF,MAAO,wBAIb,yBAAK5P,UAAU,cACX4V,GAGA,kBAAC,GAAD,CAAWrX,KAAMyX,KAFjB,kBAAC,EAAD,CAAQzX,KAAMA,UAW5B,kBAAC6R,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAKtQ,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,cACb,kBAACqQ,GAAA,EAAD,CAAKC,GAAI,GACP,2BACElQ,KAAK,SACLJ,UAAU,mCACVkB,YAAY,OACZiY,OAAQ,SAAC5X,GAAD,OAAOgU,EAAQhU,EAAEE,OAAON,WAIpC,kBAACkP,GAAA,EAAD,CAAKC,GAAI,GACP,2BACElQ,KAAK,SACLsE,IAAI,IACJsC,IAAI,OACJhH,UAAU,mCACVkB,YAAY,OAEZiY,OAAQ,SAAC5X,GAAD,OAAOkU,GAAQlU,EAAEE,OAAON,mBAWpD,kBAACgP,GAAA,EAAD,KACE,yBAAKnQ,UAAU,uBACb,yBAAKA,UAAU,iBACZa,EAAUP,OAAQ,IACnB,kBAACgP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,SAAUoG,GACVxU,SAAU,kBAAMyU,IAAiB,SAACpG,GAAD,OAAWA,MAC5C/E,aAAW,qBAGfgF,MAAO,wBAIb,yBAAK5P,UAAU,cACZ0V,IAAkBlR,EACjB,oCACGsR,GACC,kBAAChB,GAAD,CAAWjB,SAAU6B,KAErB,kBAAC,GAAD,CAAUnX,KAAMmX,GAAgBpV,OAAQO,EAAUP,UAItD,oCACGkE,GAAc5D,EACb,0CAEA,qCACIA,GACA,oCACE,+ECxiBXwY,GAAY,eAAQrX,G,SCF3BsX,GAAcC,aAAgB,CAClCzY,UDGa,WAAmC,IAAlCE,EAAiC,uDAAzBqY,GAAcG,EAAW,uCAC/C,OAAQA,EAAOnZ,MACb,InBbwB,emBctB,OAAO,2BAAKW,GAAZ,IAAmBK,aAAcmY,EAAOpZ,QAC1C,InBd6B,oBmBe3B,OAAO,2BAAKY,GAAZ,IAAmBP,WAAY+Y,EAAO/Y,aACxC,InBf2B,kBmBgBzB,OAAO,2BAAKO,GAAZ,IAAmBL,SAAU6Y,EAAO7Y,WACtC,InBhByB,gBmBiBvB,OAAO,2BAAKK,GAAZ,IAAmBT,OAAQiZ,EAAOjZ,SACpC,InBjBsB,amBkBpB,OAAO,eAAKyB,GACd,QAEE,OAAOhB,MCdPyY,GAAQC,aAAYJ,IAE1BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.c082e100.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as nv from \"nvd3\";\n\nconst Payoff = ({ data }) => {\n  // Clear the Charts\n  d3.selectAll(\"svg > *\").remove();\n\n  const drawChart = ({ data: myData, Ydomain }) => {\n    /*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */\n    nv.addGraph(() => {\n      const newChart = nv.models\n        .lineChart()\n        .margin({ left: 100 }) //Adjust chart margins to give the x-axis some breathing room.\n        .useInteractiveGuideline(false) //We want nice looking tooltips and a guideline!\n        // .duration(1500) //how fast do you want the lines to transition? Was removed, caused wrong data points positions after doing a transition bug https://github.com/novus/nvd3/issues/2018\n        .showLegend(true) //Show the legend, allowing users to turn on/off line series.\n        .showYAxis(true) //Show the y-axis\n        .showXAxis(true); //Show the x-axis\n\n      newChart.xAxis //Chart x-axis settings\n        .axisLabel(\"Price ($)\")\n        .tickFormat(d3.format(\",.2f\"));\n\n      newChart.yAxis //Chart y-axis settings\n        .axisLabel(\"Profit ($)\")\n        .tickFormat(d3.format(\",.2f\"));\n\n      newChart.forceY(Ydomain);\n\n      d3.select(\"#chart svg\") //Select the <svg> element you want to render the chart in.\n        .datum(myData) //Populate the <svg> element with chart data...\n        .call(newChart); //Finally, render the chart!\n\n      // Update the chart when window resizes.\n      nv.utils.windowResize(newChart.update);\n\n      return newChart;\n    });\n  };\n\n  // UseEffect with no deps so that a chart is always rendered\n  useEffect(() => {\n    data && drawChart(data);\n  });\n\n  // console.log(\"Payoff Rendered\");\n\n  return (\n    <>\n      <div className=\"panel-body\">\n        <div id=\"chart\">\n          <svg></svg>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Payoff;\n","export const UPDATE_PRICE = \"UPDATE_PRICE\";\nexport const UPDATE_VOLATILITY = \"UPDATE_VOLATILITY\";\nexport const UPDATE_INTEREST = \"UPDATE_INTEREST\";\nexport const UPDATE_TICKER = \"UPDATE_TICKER\";\nexport const RESET_DATA = \"RESET_DATA\"\n\nexport const updatePrice = (price) => {\n  return {\n    type: UPDATE_PRICE,\n    price,\n  };\n};\n\nexport const updateTicker = (ticker) => {\n  return {\n    type: UPDATE_TICKER,\n    ticker\n  };\n};\n\nexport const updateVolatility = (volatility) => {\n  return {\n    type: UPDATE_VOLATILITY,\n    volatility,\n  };\n};\n\nexport const updateInterest = (interest) => {\n  return {\n    type: UPDATE_INTEREST,\n    interest,\n  };\n};\n\nexport const resetData = () => {\n  return {\n    type: RESET_DATA\n  }\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as stockActions from \"../store/actions/stockData\";\n\nconst StockData = ({ liveMode }) => {\n  const stockData = useSelector((state) => state.stockData);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"panel panel-primary\">\n      <div className=\"panel-heading\">Underlying stock</div>\n      <div className=\"panel-body\">\n        <form className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Current price ($)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"CurrentPrice\"\n                className=\"form-control\"\n                value={stockData.currentPrice}\n                disabled={liveMode}\n                onChange={(e) =>\n                  dispatch(stockActions.updatePrice(e.target.value))\n                }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Volatility (%)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"Volatility\"\n                className=\"form-control\"\n                value={stockData.volatility}\n                onChange={(e) =>\n                  dispatch(stockActions.updateVolatility(e.target.value))\n                }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-sm-5 control-label\">Interest Rate (%)</label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"number\"\n                placeholder=\"Interest Rate\"\n                className=\"form-control\"\n                value={stockData.interest}\n                onChange={(e) =>\n                  dispatch(stockActions.updateInterest(e.target.value))\n                }\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default StockData;\n","import moment from \"moment\";\nexport const BUY = \"Buy\";\nexport const SELL = \"Sell\";\nexport const CALL = \"Call\";\nexport const PUT = \"Put\";\nexport const CASH = \"Cash\";\n\n// Some Error Message variables\nexport const STOCK_NO_OPTIONS = \"This Stock Has No Available Options\";\nexport const STOCK_ERR_FETCH = \"Unable To Fetch Stock Data, Try again Later\";\n\n// Initial Stock Data State\nexport const stockDataInitialState = {\n  ticker: \"Theoretical\",\n  currentPrice: 100,\n  volatility: 30,\n  interest: 2,\n};\n\n// Round a Number\nexport const round = (num) => {\n  // If it is a string convert it to num\n  if (typeof num === \"string\") {\n    num = +num;\n  }\n  let res = num.toFixed(2);\n  return +res;\n};\n\n// Convert UNIX Timestamp to Date String: YYYY-MM-DD\nexport const UNIXToDateString = (UNIX_timestamp) => {\n  const a = new Date(UNIX_timestamp * 1000);\n  return moment(a).format(\"YYYY-MM-DD\");\n};\n\n// Function that adds num days to a date object\nexport const addDays = (dayObject, days) => {\n  var date = new Date(dayObject.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\n// Create a Date 1 year from now, used as default date on contract\nconst createDateNYearsFromNow = (n) => {\n  var d = new Date();\n  var year = d.getFullYear();\n  var month = d.getMonth();\n  var day = d.getDate();\n  console.log(year);\n  var c = new Date(year + n, month, day);\n  return moment(c).format(\"YYYY-MM-DD\");\n};\n\nexport const dateDiffInYears = (futureDate, currentDate = new Date()) => {\n  return -moment(currentDate).diff(futureDate, \"years\", true);\n};\n\n// Date used in initial portfolio\nexport const date = createDateNYearsFromNow(1);\n\n// The initial Theoretical Option Portfolio\nexport const initialPortfolio = {\n  initialPortfolioId: {\n    amount: 1,\n    contractName: \"initialPortfolioId\",\n    date,\n    direction: BUY,\n    price: \"\", // To be calculated in the Contract Component\n    strike: 100,\n    type: CALL,\n  },\n};\n\n/* Function that takes in currentPrice, impliedVolatility and a number representing\nThe desired deviation from the current price. Used when calculating strikes on option\nstrategies */\nexport const getRelativeStrike = (\n  currentPrice,\n  impliedVol,\n  N,\n  optionData,\n  type\n) => {\n  let strike =\n    round(currentPrice) + round(currentPrice) * round(impliedVol / 100) * N;\n\n  if (!optionData) return { strike, date };\n  // Adjust According to OptionData\n\n  /*\n    Steps:\n    1. Find Find a date that is the closest to one year from now given optionData\n    2. Given the date, find a strike that is closest to the relative strike that \n    was calculated previously.\n  */\n\n  // Find a date that is the closest to one year from now given optionData\n  const targetDate = createDateNYearsFromNow(1);\n  let min = Infinity;\n  let actualDate = null;\n\n  for (let key in optionData.data) {\n    const { expirationDate } = optionData.data[key];\n    // Take Math abs so that we get a number in the future\n    const dateDiff = Math.abs(dateDiffInYears(expirationDate, targetDate));\n    if (dateDiff < min) {\n      min = dateDiff;\n      actualDate = expirationDate;\n    }\n  }\n\n  let finalStrike = strike;\n  // For each of the option contracts with the given exp Date find the one closest\n  // To the calculated strike price\n  for (let key in optionData.data) {\n    const { options, expirationDate } = optionData.data[key];\n    if (expirationDate === actualDate) {\n      let minDiffStrike = Infinity;\n      for (let option of options[type.toUpperCase()]) {\n        if (Math.abs(option.strike - strike) < minDiffStrike) {\n          minDiffStrike = Math.abs(option.strike - strike);\n          finalStrike = option.strike;\n        }\n      }\n    }\n  }\n  return { strike: finalStrike, date: actualDate };\n};\n\n// Return a long condor strategy option portfolio, given the currentprice, volatility\n// and live option data.\nexport const getLongCondor = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -1,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: thirdStrike, date: thirdDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: fourthStrike, date: fourthDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    1,\n    optionData,\n    CALL\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\", // To be calculated in the Contract Component\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date: thirdDate,\n      direction: SELL,\n      price: \"\",\n      strike: thirdStrike,\n      type: CALL,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date: fourthDate,\n      direction: BUY,\n      price: \"\",\n      strike: fourthStrike,\n      type: CALL,\n    },\n  };\n};\n\nexport const getShortCondor = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    1,\n    optionData,\n    CALL\n  );\n\n  const { strike: thirdStrike, date: thirdDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    PUT\n  );\n\n  const { strike: fourthStrike, date: fourthDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -1,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date: thirdDate,\n      direction: BUY,\n      price: \"\",\n      strike: thirdStrike,\n      type: PUT,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date: fourthDate,\n      direction: SELL,\n      price: \"\",\n      strike: fourthStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getBullCallSpread = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: CALL,\n    },\n  };\n};\n\nexport const getBearPutSpread = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    PUT\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: PUT,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongStraddle = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: BUY,\n      price: \"\",\n      strike: secondStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getShortStraddle = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: SELL,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongStradde = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: BUY,\n      price: \"\",\n      strike: secondStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getShortStrangle = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: SELL,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: PUT,\n    },\n  };\n};\n\nexport const getLongButterfly = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.0,\n    optionData,\n    CALL\n  );\n\n  const { strike: thirdStrike, date: thirdDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 2,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date: thirdDate,\n      direction: BUY,\n      price: \"\",\n      strike: thirdStrike,\n      type: CALL,\n    },\n  };\n};\n\nexport const getShortButterfly = (currentPrice, impliedVol, optionData) => {\n  const { strike: firstStrike, date: firstDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.0,\n    optionData,\n    CALL\n  );\n\n  const { strike: secondStrike, date: secondDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.5,\n    optionData,\n    CALL\n  );\n\n  const { strike: thirdStrike, date: thirdDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    0.0,\n    optionData,\n    PUT\n  );\n\n  const { strike: fourthStrike, date: fourthDate } = getRelativeStrike(\n    currentPrice,\n    impliedVol,\n    -0.5,\n    optionData,\n    PUT\n  );\n\n  return {\n    firstId: {\n      amount: 1,\n      contractName: \"firstId\",\n      date: firstDate,\n      direction: BUY,\n      price: \"\",\n      strike: firstStrike,\n      type: CALL,\n    },\n    secondId: {\n      amount: 1,\n      contractName: \"secondId\",\n      date: secondDate,\n      direction: SELL,\n      price: \"\",\n      strike: secondStrike,\n      type: CALL,\n    },\n    thirdId: {\n      amount: 1,\n      contractName: \"thirdId\",\n      date: thirdDate,\n      direction: BUY,\n      price: \"\",\n      strike: thirdStrike,\n      type: PUT,\n    },\n    fourthId: {\n      amount: 1,\n      contractName: \"fourthId\",\n      date: fourthDate,\n      direction: SELL,\n      price: \"\",\n      strike: fourthStrike,\n      type: PUT,\n    },\n  };\n};\n","import * as cts from \"./constants\";\n\n// Option definition class\nexport default class Option {\n  constructor(contractName) {\n    this.contractName = contractName;\n    this.strike = 100;\n    this.date = cts.date;\n    this.direction = cts.BUY;\n    this.type = cts.CALL;\n    this.amount = 1;\n  }\n}\n","import * as cts from \"./constants\";\n\n// Takes in option object and evaluates the payoff given the input price\nexport const evaluatePayoffFunc = (option, price, stockData) => {\n  const cost = option.price * option.amount;\n  if (option.type === cts.CALL) {\n    // A call Option\n    if (option.direction === cts.BUY) {\n      // Long Call\n      return (\n        Math.max(price - parseInt(option.strike), 0) * option.amount - cost\n      );\n    }\n    // Short Call\n    return Math.min(0, option.strike - price) * option.amount + cost;\n  } else if (option.type === cts.PUT) {\n    // A Put Option\n    if (option.direction === cts.BUY) {\n      // Long Put\n      return (\n        Math.max(parseInt(option.strike) - price, 0) * option.amount - cost\n      );\n    }\n    // Short Put\n    return Math.min(0, price - option.strike) * option.amount + cost;\n  } else if (option.type === cts.CASH) {\n    // Stock\n    if (option.direction === cts.BUY) {\n      // Long Stock\n      return (price - stockData.currentPrice) * option.amount;\n    }\n    // Short Stock\n    return (stockData.currentPrice - price) * option.amount;\n  }\n};\n\n/*\n  S = Current Stock Price\n  X = Exercise Price (Strike)\n  r = Short-term risk free interest rate\n  T = Time remaining to the expiration Date (in years)\n  v = Standard deviation of stock price (implied volatility)\n */\n\nexport function BlackScholes(optionType, S, X, T, r, v) {\n  // Unit adjustment\n  v = v / 100;\n  r = r / 100;\n  var d1 = (Math.log(S / X) + (r + (v * v) / 2) * T) / (v * Math.sqrt(T));\n  var d2 = d1 - v * Math.sqrt(T);\n  if (optionType === cts.CALL) {\n    return S * CND(d1) - X * Math.exp(-r * T) * CND(d2);\n  } else {\n    return X * Math.exp(-r * T) * CND(-d2) - S * CND(-d1);\n  }\n}\n\n/* The cummulative Normal distribution function: */\nfunction CND(x) {\n  if (x < 0) {\n    return 1 - CND(-x);\n  } else {\n    let k = 1 / (1 + 0.2316419 * x);\n    return (\n      1 -\n      (Math.exp((-x * x) / 2) / Math.sqrt(2 * Math.PI)) *\n        k *\n        (0.31938153 +\n          k *\n            (-0.356563782 +\n              k * (1.781477937 + k * (-1.821255978 + k * 1.330274429))))\n    );\n  }\n}\n","// Color Picker Structure to help select color on graph\nexport default class ColorPicker {\n    // Available colors, more can be added\n    colors = [\n        \"blue\",\n        \"red\",\n        \"yellow\",\n        \"purple\",\n        \"orange\",\n        \"black\",\n    ]\n\n    constructor() {\n        this.index = 0;\n    }\n\n    // Get the Next Color\n    getColor(){\n        const result =  this.colors[this.index];\n        // Adjust the index;\n        if(this.index >= this.colors.length){\n            // We have reached the end reset to zero\n            this.index = 0;\n        }else{\n            // Not at end just add one to index\n            this.index++;\n        }\n        return result;\n    }\n}","/**\n * A custom useEffect hook that only triggers on updates, not on initial mount\n * Idea stolen from: https://stackoverflow.com/a/55075818/1526448\n * @param {Function} effect\n * @param {Array<any>} dependencies\n */\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useUpdateEffect(effect, dependencies = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n","import React, { useEffect, useState } from \"react\";\nimport Option from \"../utility/Option\";\nimport { BlackScholes, SELL } from \"../utility\";\nimport { useSelector } from \"react-redux\";\nimport * as util from \"../utility\";\nimport useUpdateEffect from \"../hooks/useUpdateEffect\";\n\nconst Contract = (props) => {\n  const { removeContract, data, optionData } = props;\n  const { updateContract } = props;\n\n  /*\n   If optionData is defined then the strike prices must adjust to the\n   Expiration date\n   */\n  \n  // Default state values are when a strategy is selected in live mode\n  const [expirationDates, setExpirationDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(data.date);\n  const [strikePrices, setStrikePrices] = useState([data.strike]);\n  const [selectedStrike, setSelectedStrike] = useState(data.strike);\n  const [selectedDirection, setSelectedDirection] = useState(data.direction);\n  const [selectedType, setSelectedType] = useState(data.type);\n\n  // Stock data from redux\n  const stockData = useSelector((state) => state.stockData);\n\n  // Calculate dateDifference in years, used in theoretical black scholes\n  const dateDiff = util.dateDiffInYears(data.date);\n\n  // Calculate the price based on Black-Scholes model\n  const [price, setPrice] = useState();\n\n  // Update the current price every time something changes\n  useEffect(() => {\n    if (optionData) {\n    } else if (!optionData && selectedType !== util.CASH) {\n      setPrice(\n        BlackScholes(\n          data.type,\n          +stockData.currentPrice,\n          +data.strike,\n          +dateDiff,\n          +stockData.interest,\n          +stockData.volatility\n        ).toFixed(2)\n      );\n    }\n  });\n\n  // Update the price every time it changes\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"price\", price);\n  }, [price]);\n\n  // Set expiration Dates when component mounts\n  useEffect(() => {\n    if (optionData) {\n      const expirationDates = optionData.data.map(\n        (item) => item.expirationDate\n      );\n      setExpirationDates(expirationDates);\n    }\n  }, []);\n\n  // Update strike and price at change\n  useUpdateEffect(() => {\n    if (optionData) {\n      // Find the element with same date\n      const apiContract = optionData.data.find(\n        (item) => item.expirationDate === selectedDate\n      );\n\n      if (!apiContract) return;\n\n      // Find the type of option this is\n      const type = data.type.toUpperCase();\n\n      // Extract the contracts given the date\n      const contractsAtDate = apiContract.options[type];\n\n      // Find the contract with the selected Strike\n      const contract = contractsAtDate.find(\n        (item) => +item.strike === +selectedStrike\n      );\n\n      // Set the price depending if we are short or long\n      if (data.direction === \"Buy\") {\n        setPrice(contract.ask);\n      } else {\n        setPrice(contract.bid);\n      }\n    }\n\n    updateContract(data.contractName, \"strike\", selectedStrike);\n  }, [selectedStrike, setPrice]);\n\n  useUpdateEffect(() => {\n    if (optionData) {\n      // Find the element with same date\n      const apiContract = optionData.data.find(\n        (item) => item.expirationDate === selectedDate\n      );\n\n      // If none found return\n      if (!apiContract) return;\n\n      // Find the type of option this is\n      const type = data.type.toUpperCase();\n\n      // Extract the contracts given the date\n      const contractsAtDate = apiContract.options[type];\n\n      // Make an array of strikes at the current date\n      const strikesAtDate = contractsAtDate.map((item) => item.strike);\n\n      // Update strikeprices\n      setStrikePrices(strikesAtDate);\n\n      updateContract(data.contractName, \"date\", selectedDate);\n    }\n  }, [selectedDate]);\n\n  // Update Direction\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"direction\", selectedDirection);\n  }, [selectedDirection]);\n\n  // Update type\n  useUpdateEffect(() => {\n    updateContract(data.contractName, \"type\", selectedType);\n\n    // If we just changed to cash\n    if (selectedType === util.CASH) {\n      // Set Debit/Credit equal to the stock price\n      setPrice(stockData.currentPrice);\n    }\n  }, [selectedType]);\n\n  const cashContract = selectedType === util.CASH;\n\n  return (\n    <tr>\n      {/* Direction */}\n      <td>\n        <select\n          id=\"direction\"\n          className=\"form-control\"\n          value={selectedDirection}\n          onChange={(e) => setSelectedDirection(e.target.value)}\n        >\n          <option>Buy</option>\n          <option>Sell</option>\n        </select>\n      </td>\n      {/* Amount */}\n      <td>\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          className=\"form-control form-control-inline\"\n          onChange={(e) =>\n            updateContract(data.contractName, \"amount\", e.target.value)\n          }\n          value={data.amount}\n        />\n      </td>\n      {/* Kind */}\n      <td>\n        <select\n          className=\"form-control\"\n          onChange={(e) => setSelectedType(e.target.value)}\n          value={selectedType}\n        >\n          <option>Call</option>\n          <option>Put</option>\n          <option>Cash</option>\n        </select>\n      </td>\n      {/* Strike Price */}\n      <td>\n        {!cashContract &&\n          (optionData ? (\n            <div class=\"form-group\">\n              <select\n                class=\"form-control\"\n                id=\"exampleFormControlSelect1\"\n                onChange={(e) => setSelectedStrike(e.target.value)}\n                value={selectedStrike}\n              >\n                {strikePrices.map((price) => (\n                  <option>{isNaN(price) ? null : price}</option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            <input\n              type=\"number\"\n              placeholder=\"Strike\"\n              className=\"form-control form-control-inline\"\n              onChange={(e) =>\n                updateContract(data.contractName, \"strike\", e.target.value)\n              }\n              value={data.strike}\n            />\n          ))}\n      </td>\n      {/* Expiry Date */}\n      <td>\n        {!cashContract &&\n          (!optionData ? (\n            <input\n              type=\"date\"\n              placeholder=\"Expiry\"\n              className=\"form-control form-control-inline\"\n              onChange={(e) =>\n                updateContract(data.contractName, \"date\", e.target.value)\n              }\n              value={data.date}\n            />\n          ) : (\n            <div class=\"form-group\">\n              <select\n                class=\"form-control\"\n                id=\"exampleFormControlSelect1\"\n                onChange={(e) => setSelectedDate(e.target.value)}\n                value={selectedDate}\n              >\n                {expirationDates.map((date) => (\n                  <option>{date}</option>\n                ))}\n              </select>\n            </div>\n          ))}\n      </td>\n      {/* Premium/Price */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <b>{price * data.amount}</b>\n      </td>\n      {/* Debit/Credit */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <b>{(data.direction === SELL ? price : -price) * data.amount} </b>\n      </td>\n      {/* Remove Button */}\n      <td style={{ verticalAlign: \"middle\" }}>\n        <button\n          type=\"button\"\n          aria-label=\"Left Align\"\n          className=\"btn btn-danger btn-s\"\n          onClick={() => removeContract(data.contractName)}\n        >\n          <span aria-hidden=\"true\">Remove</span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Panel = (props) => {\n  const { portfolio, setPortfolio, visualize, optionData } = props;\n\n  const addContract = () => {\n    const newPortfolio = { ...portfolio };\n    const id = new Date().toISOString();\n    newPortfolio[id] = new Option(id);\n    setPortfolio(newPortfolio);\n  };\n\n  const renderContracts = () => {\n    const result = [];\n    for (let id in portfolio) {\n      result.push(\n        <Contract\n          optionData={optionData}\n          removeContract={removeContract}\n          updateContract={updateContract}\n          data={portfolio[id]}\n          key={id}\n        />\n      );\n    }\n    return result;\n  };\n\n  const updateContract = (id, property, value) => {\n    const newPortfolio = { ...portfolio };\n    newPortfolio[id][property] = value;\n    setPortfolio(newPortfolio);\n  };\n\n  const removeContract = (id) => {\n    const newPortfolio = { ...portfolio };\n    delete newPortfolio[id];\n    setPortfolio(newPortfolio);\n  };\n\n  const calculateTotal = () => {\n    let premium = 0;\n    let debitcredit = 0;\n    let amount = 0;\n\n    for (let key in portfolio) {\n      const contract = portfolio[key];\n      premium += +contract.price * +contract.amount;\n      const debitToAdd =\n        contract.direction === SELL ? +contract.price : -+contract.price;\n      debitcredit += debitToAdd * +contract.amount;\n      amount += +contract.amount;\n    }\n    return {\n      premium: premium.toFixed(2),\n      debitcredit: debitcredit.toFixed(2),\n      amount,\n    };\n  };\n\n  const { premium, debitcredit, amount } = calculateTotal();\n\n  // console.log(\"Panel Rendered\");\n\n  return (\n    <div className=\"panel panel-primary\">\n      <div className=\"panel-heading\">Option Portfolio</div>\n      <div className=\"panel-body\">\n        <table className=\"table table-condensed\">\n          <thead>\n            <tr>\n              <th>Direction</th>\n              <th>Amount</th>\n              <th>Kind</th>\n              <th>Strike</th>\n              <th>Expiry</th>\n              <th>Premium</th>\n              <th>Debit/Credit</th>\n              <th>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success btn-s\"\n                  onClick={addContract}\n                >\n                  Add Leg\n                </button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {renderContracts()}\n            <tr>\n              <td>\n                <b>Total</b>\n              </td>\n              <td>\n                <b>{amount}</b>\n              </td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>\n                <b>{premium}</b>\n              </td>\n              <td>\n                <b>{debitcredit}</b>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  aria-label=\"Left Align\"\n                  className=\"btn btn-danger btn-s\"\n                  onClick={() => setPortfolio({})}\n                >\n                  <span aria-hidden=\"true\">Remove All</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        {/* <div className=\"pull-right\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success btn-s\"\n            onClick={visualize}\n          >\n            Generate Payoff\n          </button>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\n\nconst defaultValue = {\n  liveMode: false,\n  setLiveMode: () => {},\n};\n\nexport const liveDataContext = React.createContext(defaultValue);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as util from \"../../utility\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst DropDownBtn = ({ setPortfolio, optionData }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const { currentPrice, volatility } = useSelector((state) => state.stockData);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event, newPortfolio) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    newPortfolio && setPortfolio(newPortfolio(currentPrice, volatility, optionData));\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div>\n      <Button\n        ref={anchorRef}\n        aria-controls={open ? \"menu-list-grow\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n        color=\"inherit\"\n      >\n        View Sample Strategies\n      </Button>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id=\"menu-list-grow\"\n                  onKeyDown={handleListKeyDown}\n                >\n                  <MenuItem\n                    onClick={(e) => handleClose(e, util.getBullCallSpread)}\n                  >\n                    Bull Call Spread\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getBearPutSpread)}>\n                    Bear Put Spread\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongStraddle)}>\n                    Long Straddle\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getShortStraddle)}>\n                    Short Straddle\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongButterfly)}>\n                    Long Butterfly\n                  </MenuItem>\n                  <MenuItem\n                    onClick={(e) => handleClose(e, util.getShortButterfly)}\n                  >\n                    Short Butterfly\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getLongCondor)}>\n                    Long Condor\n                  </MenuItem>\n                  <MenuItem onClick={(e) => handleClose(e, util.getShortCondor)}>\n                    Short Condor\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n};\nexport default DropDownBtn;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { liveDataContext } from \"../../context/liveData\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport DropDownBtn from \"./DropDownBtn\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/stockData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navbar: {\n    marginBottom: \"40px\",\n    position: \"relative\",\n    zIndex: \"10\",\n  },\n}));\n\nexport default function MenuAppBar({ setPortfolio, optionData }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { liveMode, setLiveMode } = useContext(liveDataContext);\n\n  return (\n    <AppBar position=\"static\" className={classes.navbar}>\n      <Toolbar>\n        <Typography variant=\"h3\" className={classes.title}>\n          Option Strategy Builder\n        </Typography>\n        <DropDownBtn setPortfolio={setPortfolio} optionData={optionData}/>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={liveMode}\n                onChange={() =>\n                  setLiveMode((prev) => {\n                    if (prev === true) dispatch(actions.resetData());\n                    return !prev;\n                  })\n                }\n                aria-label=\"live mode switch\"\n              />\n            }\n            label={\"Live Data Mode\"}\n          />\n        </FormGroup>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport symbols from \"../symbols.json\";\nimport { Button } from \"@material-ui/core\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  item: {\n    // No Effect\n    height: \"100%\",\n    widht: \"100%\",\n  },\n});\n\nconst Search = ({ searchFunc }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const classes = useStyles();\n\n  const filterOptions = (options, state) => {\n    // Extract the inputValue\n    const query = state.inputValue.toUpperCase();\n    // Update state\n    setInputValue(query);\n    // If short query return nothing (improves performance)\n    if (query.length <= 1) return [];\n\n    // Filter out the options\n    return options.filter((o) => o.displaySymbol.includes(query));\n  };\n\n  // console.log(\"Search Rendered\")\n\n  return (\n    <>\n      {/* A Warning message is outputed in console: Fix later */}\n      <Container>\n        <Row>\n          <Col md={10}>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={symbols}\n              getOptionLabel={(option) =>\n                option.displaySymbol + \": \" + option.description\n              }\n              filterOptions={(options, state) => filterOptions(options, state)}\n              className={classes.item}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search Ticker\"\n                  variant=\"outlined\"\n                />\n              )}\n              noOptionsText={\n                inputValue.length <= 1\n                  ? \"Type a Ticker Symbol\"\n                  : \"No Symbols Found\"\n              }\n            />\n          </Col>\n          <Col md={2}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => searchFunc(inputValue)}\n              className={classes.item}\n            >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Error = (props) => {\n  return (\n    <div className=\"alert alert-danger \" role=\"alert\">\n      <strong>{props.children}</strong>\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={props.removeFunc}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\nexport default Error;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst SecurityInfo = () => {\n  const stockData = useSelector((state) => state.stockData);\n\n  return (\n    <Card>\n      <Card.Body>\n        <h1 class=\"display-4\">{stockData.ticker}</h1>\n        <p class=\"lead\">Quote: {stockData.currentPrice}</p>\n        <p>{moment(new Date()).format(\"YYYY-MM-DD\")}</p>.\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SecurityInfo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n  slider: { width: \"90%\" },\n});\n\nexport default function InputSlider({ value, setValue, title, min, max }) {\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"input-slider\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <TrendingUpIcon />\n        </Grid>\n        <Grid item xs>\n          <Slider\n            min={min}\n            max={max}\n            value={typeof value === \"number\" ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            className={classes.slider}\n          />\n        </Grid>\n        <Grid item></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AnyChart from \"anychart-react\";\nimport * as anychart from \"anychart\";\nimport * as util from \"../utility\";\n\nconst StockAnyChart = ({ data, ticker }) => {\n  const newData = [];\n  data.forEach((pnt) => {\n    newData.push([\n      util.UNIXToDateString(pnt[0]),\n      pnt[1],\n      pnt[2],\n      pnt[3],\n      pnt[4],\n    ]);\n  });\n  // Create the chart\n  var stockDataTable = anychart.data.table();\n  // Add The data\n  stockDataTable.addData(newData);\n  // Declare stock Chart\n  var chart = anychart.stock();\n  // Create plot\n  var firstPlot = chart.plot(0);\n  firstPlot.area(stockDataTable.mapAs({ value: 4 })).name(ticker);\n  chart.scroller().area(stockDataTable.mapAs({ value: 4 }));\n  chart.selectRange(\"2018-01-03\", \"2019-01-01\");\n\n  return (\n    <>\n      {!chart ? (\n        <h1>Unable to Display Data</h1>\n      ) : (\n        <AnyChart width=\"100%\" height={300} instance={chart} title={ticker} />\n      )}\n    </>\n  );\n};\n\nexport default StockAnyChart;\n","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst PayoffHighChart = ({ data }) => {\n  return <HighchartsReact highcharts={Highcharts} options={data} />;\n};\n\nexport default PayoffHighChart;\n","import React from \"react\";\nimport HighStock from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction App({ mockData }) {\n  console.log(mockData);\n  let groupingUnits = [\n    [\n      \"week\", // unit name\n      [1], // allowed multiples\n    ],\n    [\"month\", [1, 2, 3, 4, 6]],\n  ];\n\n  let mockOptions = {\n    rangeSelector: {\n      selected: 1,\n    },\n\n    title: {\n      text: \"AAPL Historical\",\n    },\n\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"60%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"65%\",\n        height: \"35%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n\n    tooltip: {\n      split: true,\n    },\n\n    series: [\n      {\n        type: \"candlestick\",\n        data: mockData,\n      },\n      {\n        type: \"column\",\n        data: (function () {\n          var columnData = [];\n\n          for (var i = 0; i < mockData.length; i++) {\n            columnData.push([\n              mockData[i][0], // the date\n              mockData[i][5], // the volume\n            ]);\n          }\n          return columnData;\n        })(),\n        yAxis: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      {\n        <HighchartsReact\n          highcharts={HighStock}\n          constructorType={\"stockChart\"}\n          options={mockOptions}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useCallback } from \"react\";\nimport Payoff from \"./components/Payoff\";\nimport StockData from \"./components/StockData\";\nimport Panel from \"./components/Panel\";\nimport * as util from \"./utility\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport moment from \"moment\";\nimport { liveDataContext } from \"./context/liveData\";\nimport Search from \"./components/Search\";\nimport axios from \"axios\";\nimport ColorPicker from \"./utility/DS/ColorPicker\";\nimport * as actions from \"./store/actions/stockData\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport useUpdateEffect from \"./hooks/useUpdateEffect\";\nimport Error from \"./components/Error/Error\";\nimport SecurityInfo from \"./components/SecurityInfo\";\nimport Slider from \"./components/Slider\";\nimport AnyChart from \"./components/StockAnyChart\";\nimport { Switch } from \"@material-ui/core\";\nimport { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport HighChart from \"./components/PayoffHighChart\";\nimport HighStock from \"./components/HighStock\";\n\nconst App = () => {\n  const [portfolio, setPortfolio] = useState(util.initialPortfolio);\n  const [data, setData] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [stockErrors, setStockErrors] = useState(null);\n  const stockData = useSelector((state) => state.stockData);\n  const [liveMode, setLiveMode] = useState(false);\n  const [optionData, setOptionData] = useState();\n  const [minX, setMinX] = useState();\n  const [maxX, setMaxX] = useState();\n  const [stockChartData, setStockChartData] = useState();\n  const [viewHighChart, setViewHighChart] = useState(true);\n  const [viewHighStock, setViewHighStock] = useState(true);\n  const [hcData, setHcData] = useState(null);\n  const value = { liveMode, setLiveMode };\n  const dispatch = useDispatch();\n  const { volatility, interest, currentPrice } = useSelector((state) => state.stockData);\n  const [daysToExpiration, setDaysToExpiration] = useState(null);\n\n  // Set Error Message as JSX\n  const setErrs = useCallback((message) => {\n    setErrors(<Error removeFunc={() => setErrors(null)}>{message}</Error>);\n  }, []);\n\n  // Set Error Stock Message as JSX\n  const setStockErrs = useCallback((message) => {\n    setStockErrors(\n      <Error removeFunc={() => setStockErrors(null)}>{message}</Error>\n    );\n  }, []);\n\n  // Update and Validate User Input Data\n  const updateData = useCallback(() => {\n    // Validate Empty Portfolio\n    if (Object.keys(portfolio).length === 0)\n      return setErrs(\"Add contracts to Visualize\");\n\n    // Validate Stock Price\n    if (+stockData.currentPrice <= 0)\n      return setErrs(\"Please Enter a Valid Stock Price\");\n\n    // Validate Interest\n    if (isNaN(+stockData.interest))\n      return setErrs(\"Please Enter a Valid Interest Rate\");\n\n    const strikes = [];\n    let maxStrike = 0;\n    let minStrike = Infinity;\n\n    const values = [];\n    const theoretical = [];\n\n    // Add the min/max x values input by the user and update the max/minStrikes\n    if (maxX) {\n      if (+maxX > maxStrike) maxStrike = +maxX;\n      if (+maxX < minStrike) minStrike = +maxX;\n      strikes.push(+maxX);\n    }\n\n    if (minX) {\n      if (+minX > maxStrike) maxStrike = +minX;\n      if (+minX < minStrike) minStrike = +minX;\n      strikes.push(+minX);\n    }\n\n    // Get the Critical strikes to plot\n    for (let id in portfolio) {\n      const contract = portfolio[id];\n      const cashContract = contract.type === util.CASH;\n      const strike = cashContract ? +stockData.currentPrice : +contract.strike;\n      const date = contract.date;\n      const amount = contract.amount;\n\n      // Always Validate Amount\n      if (amount <= 0) return setErrs(\"Please Enter a Valid Amount\");\n\n      // If not a Cash Contract then validate the following fields\n      if (!cashContract) {\n        // Validate Strike prices\n        if (strike <= 0) return setErrs(\"Please Enter A Valid Strike Price\");\n\n        // Validate the Date (Check if it is defined and in the future)\n        if (!date || moment().diff(date) > 0)\n          return setErrs(\"Please Enter a Valid Date\");\n      }\n\n      // Apply To Fixed\n      strikes.push(util.round(strike));\n\n      // Update the maxStrike\n      if (strike > maxStrike) maxStrike = strike;\n      if (strike < minStrike) minStrike = strike;\n    }\n\n    const average = (maxStrike + minStrike) / 2;\n    let max = 0;\n\n    // If maxX is set\n    if (!maxX) {\n      // Auto xMax margin\n      max = Math.floor(maxStrike + average * 0.2);\n    } else {\n      max = Math.max(+maxX, maxStrike);\n    }\n\n    let min = 0;\n\n    // If minX is set\n    if (!minX) {\n      // Auto xMin Margin\n      min = Math.floor(minStrike - average * 0.2);\n    } else {\n      min = Math.min(+minX, minStrike);\n    }\n\n    const change = (max - min) / 35;\n\n    // Add domain limits\n    strikes.push(min);\n    strikes.push(max);\n\n    setMaxX(max);\n    setMinX(min);\n\n    let i = min;\n    // Add The rest of the strikes for continuous feel\n    while (i < max) {\n      // Round to 2 decimals and convert back to number\n      strikes.push(util.round(i));\n      i += change;\n    }\n\n    // Sort the strikes so the graph can be displayed properly\n    strikes.sort((a, b) => a - b);\n\n    const result = [];\n\n    // Helper DS to fetch colors\n    const colors = new ColorPicker();\n\n    // We want our plot to have N lines (N is the number of contracts in portfolio)\n    for (let id in portfolio) {\n      const contract = portfolio[id];\n      let key =\n        contract.direction + \" \" + contract.type + \" \" + contract.strike;\n      // Adjust title if cash contract\n      if (contract.type === util.CASH) {\n        key =\n          contract.direction +\n          \" \" +\n          contract.type +\n          \"  \" +\n          stockData.currentPrice;\n      }\n\n      result.push({\n        values: [],\n        key,\n        color: colors.getColor(),\n        disabled: true,\n      });\n    }\n\n    // Keey track of min/max for Ydomain\n    let minProfit = Infinity;\n    let maxProfit = -Infinity;\n\n    // For each strike, calculate the payoff and add it to values\n    for (let strike of strikes) {\n      let profitSum = 0;\n      let theoreticalPL = 0;\n      // Keep track of the index we are at\n      let i = 0;\n      for (let id in portfolio) {\n        const contract = portfolio[id];\n\n        // Calculate profit at given Strike (at Expiration)\n        const profitAtStrike = util.round(\n          util.evaluatePayoffFunc(contract, strike, stockData)\n        );\n\n        // Calculate dateDifference in years, used in theoretical black scholes\n        const dateDiff = -moment().diff(contract.date, \"years\", true);\n\n        const blackScholesValue = util.BlackScholes(\n          contract.type,\n          +strike,\n          +contract.strike,\n          +dateDiff,\n          +stockData.interest,\n          +stockData.volatility\n        );\n\n        // If the contract is Cash\n        if (contract.type === util.CASH) {\n          // Just add the profit at Strike\n          theoreticalPL += +profitAtStrike;\n        } else {\n          // Calculate depending on Buy/Sell\n          if (contract.direction === util.BUY) {\n            // Calculate Theoretical P/L\n            theoreticalPL +=\n              (blackScholesValue - contract.price) * contract.amount;\n          } else {\n            theoreticalPL +=\n              (contract.price - blackScholesValue) * contract.amount;\n          }\n        }\n\n        // Update min and max Profits\n        if (profitAtStrike > maxProfit) maxProfit = profitAtStrike;\n\n        if (profitAtStrike < minProfit) minProfit = profitAtStrike;\n\n        // Push the point at the specified strategy\n        result[i].values.push({\n          x: util.round(strike),\n          y: util.round(profitAtStrike),\n        });\n\n        // Evaluate each contract in portfolio and add it to the y value\n        profitSum += util.round(profitAtStrike);\n        i++;\n      }\n\n      // Add the point to the data\n      values.push({ x: util.round(strike), y: util.round(profitSum) });\n      theoretical.push({ x: util.round(strike), y: util.round(theoreticalPL) });\n    }\n\n    const Ydomain = [Math.floor(minProfit * 1.2), Math.floor(maxProfit * 1.2)];\n\n    // The overall strategy plot data\n    const strategyData = {\n      values,\n      key: \"Strategy\",\n      color: \"green\",\n      disabled: false,\n    };\n\n    // The Theoretical strategy plot data\n    const strategyTheoretical = {\n      values: theoretical,\n      key: \"Today\",\n      color: \"pink\",\n      disabled: false,\n    };\n\n    result.push(strategyTheoretical);\n\n    result.push(strategyData);\n\n    // Clear the Errors\n    setErrors(null);\n    console.log(result);\n    if (viewHighChart) {\n      const res = [];\n      // Parse data into HighChart Format\n      for (let series of result) {\n        const seriesInfo = {\n          data: [],\n          visible: !series.disabled,\n          color: series.color,\n          name: series.key,\n        };\n        res.push(seriesInfo);\n        for (let point of series.values) {\n          seriesInfo.data.push([+point.x, +point.y]);\n        }\n      }\n\n      return setHcData({\n        series: res,\n        xAxis: {\n          title: {\n            text: \"Stock Price ($)\",\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Profit ($)\",\n          },\n        },\n        chart: {\n          type: \"spline\",\n        },\n        title: {\n          text: \"Payoff\",\n        },\n      });\n    }\n\n    setData({ data: result, Ydomain });\n  }, [portfolio, stockData, setErrs, maxX, minX, viewHighChart]);\n\n  // Custom hook used to Reset Portfolio only when liveMode is Toggled\n  useUpdateEffect(() => {\n    // To be run on update\n    setErrors(null);\n    setPortfolio({});\n    setData(null);\n    setOptionData(null);\n  }, [liveMode]);\n\n  // Custom hook used to Reset Porfolio only when optionData changes\n  useUpdateEffect(() => {\n    setPortfolio({});\n    setStockChartData(null); // Display Loading\n    fetchStockData();\n  }, [optionData]);\n\n  // Custom hook used to Update/Validate portfolio whenever changed\n  useUpdateEffect(() => {\n    updateData();\n  }, [portfolio, updateData, viewHighChart]);\n\n  // Fetch the option Data when Search is Clicked\n  const fetchOptionData = async (ticker) => {\n    try {\n      const { data } = await axios.get(\n        `https://finnhub.io/api/v1/stock/option-chain?symbol=${ticker}&token=` +\n          process.env.REACT_APP_API_KEY\n      );\n      setOptionData(data);\n      dispatch(actions.updatePrice(data.lastTradePrice));\n      dispatch(actions.updateTicker(data.code));\n      if (data.data.length === 0) {\n        setStockErrs(util.STOCK_NO_OPTIONS, setStockErrors);\n      } else {\n        setStockErrors(null);\n      }\n    } catch (err) {\n      setStockErrs(util.STOCK_ERR_FETCH, setStockErrors);\n    }\n  };\n\n  const fetchStockData = async (ticker) => {\n    var unix = Math.round(+new Date() / 1000);\n    const { data } = await axios.get(\n      `https://finnhub.io/api/v1/stock/candle?symbol=TSLA&resolution=D&from=1199145600&to=${unix}&token=` +\n        process.env.REACT_APP_API_KEY\n    );\n\n    const length = data.c.length;\n\n    const result = [];\n\n    for (let i = 0; i < length; i++) {\n      result.push([data.t[i], data.o[i], data.h[i], data.l[i], data.c[i]]);\n    }\n\n    setStockChartData(result);\n  };\n\n  const updateDaysToExpiration = (days) => {\n    const newPortfolio = { ...portfolio };\n    for (let key in newPortfolio) {\n      const contract = newPortfolio[key];\n      const newDate = util.addDays(new Date(), days);\n      contract.date = moment(newDate).format(\"YYYY-MM-DD\");\n    }\n    setPortfolio(newPortfolio);\n    setDaysToExpiration(days);\n  };\n\n  return (\n    <>\n      <liveDataContext.Provider value={value}>\n        <Navigation setPortfolio={setPortfolio} optionData={optionData} />\n        <Container>\n          <Row>\n            <Col md={12}>\n              {stockData.ticker !== \"Theoretical\" && <SecurityInfo />}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              {liveMode && <Search searchFunc={fetchOptionData} />}\n              {stockErrors}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <Panel\n                optionData={optionData}\n                portfolio={portfolio}\n                setPortfolio={setPortfolio}\n                visualize={updateData}\n                // currentPrice={100}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <StockData liveMode={liveMode} />\n              <div className=\"panel panel-primary\">\n                <div className=\"panel-heading\">Toggle</div>\n                <div className=\"panel-body\">\n                  <Slider\n                    min={0}\n                    max={150}\n                    title={\"Volatility\"}\n                    value={+volatility}\n                    setValue={(val) => dispatch(actions.updateVolatility(val))}\n                  />\n                  <Slider\n                    min={-20}\n                    max={150}\n                    title={\"Interest\"}\n                    value={+interest}\n                    setValue={(val) => dispatch(actions.updateInterest(val))}\n                  />\n                  {!liveMode && (\n                    <Slider\n                      min={1}\n                      max={1000}\n                      title={\"Time To Expiration\"}\n                      value={daysToExpiration}\n                      setValue={(val) => updateDaysToExpiration(val)}\n                    />\n                  )}\n                  {!liveMode && (\n                    <Slider\n                      min={0}\n                      max={2000}\n                      title={\"StockPrice\"}\n                      value={currentPrice}\n                      setValue={(val) => dispatch(actions.updatePrice(val))}\n                    />\n                  )}\n                </div>\n              </div>\n            </Col>\n            <Col md={9}>\n              <Row>\n                <Col md={12}>\n                  {errors ? errors : null}\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <div className=\"panel panel-primary\">\n                        <div className=\"panel-heading\">\n                          Option Payoff\n                          <FormGroup>\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={!viewHighChart}\n                                  onChange={() =>\n                                    setViewHighChart((prev) => !prev)\n                                  }\n                                  aria-label=\"live mode switch\"\n                                />\n                              }\n                              label={\"Switch Graph Type\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"panel-body\">\n                          {!viewHighChart ? (\n                            <Payoff data={data} />\n                          ) : (\n                            <HighChart data={hcData} />\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <Demo /> */}\n                </Col>\n              </Row>\n              <Row>\n                <Col md={12}>\n                  <div className=\"panel panel-primary\">\n                    <div className=\"panel-heading\">Change Domain</div>\n                    <div className=\"panel-body\">\n                      <Col md={2}>\n                        <input\n                          type=\"number\"\n                          className=\"form-control form-control-inline\"\n                          placeholder=\"Auto\"\n                          onBlur={(e) => setMinX(e.target.value)}\n                          // value={minX}\n                        />\n                      </Col>\n                      <Col md={2}>\n                        <input\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"5000\"\n                          className=\"form-control form-control-inline\"\n                          placeholder=\"Auto\"\n                          // value={maxX}\n                          onBlur={(e) => setMaxX(e.target.value)}\n                        />\n                      </Col>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </liveDataContext.Provider>\n      <Container>\n        <div className=\"panel panel-primary\">\n          <div className=\"panel-heading\">\n            {stockData.ticker}{\" \"}\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={!viewHighStock}\n                    onChange={() => setViewHighStock((prev) => !prev)}\n                    aria-label=\"live mode switch\"\n                  />\n                }\n                label={\"Switch Chart Type\"}\n              />\n            </FormGroup>\n          </div>\n          <div className=\"panel-body\">\n            {stockChartData && optionData ? (\n              <>\n                {viewHighStock ? (\n                  <HighStock mockData={stockChartData} />\n                ) : (\n                  <AnyChart data={stockChartData} ticker={stockData.ticker} />\n                )}\n              </>\n            ) : (\n              <>\n                {optionData && liveMode ? (\n                  <h1>Loading...</h1>\n                ) : (\n                  <>\n                    {!liveMode && (\n                      <>\n                        <h1>Switch to live mode to view stock chart</h1>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  UPDATE_PRICE,\n  UPDATE_INTEREST,\n  UPDATE_VOLATILITY,\n  UPDATE_TICKER,\n  RESET_DATA,\n} from \"../actions/stockData\";\nimport { stockDataInitialState } from \"../../utility/constants\";\n\nexport const initialState = { ...stockDataInitialState };\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRICE:\n      return { ...state, currentPrice: action.price };\n    case UPDATE_VOLATILITY:\n      return { ...state, volatility: action.volatility };\n    case UPDATE_INTEREST:\n      return { ...state, interest: action.interest };\n    case UPDATE_TICKER:\n      return { ...state, ticker: action.ticker };\n    case RESET_DATA:\n      return { ...stockDataInitialState };\n    default:\n      // Will be run initially\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport stockDataReducer from \"./store/reducers/stockData\";\nimport { createStore, combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  stockData: stockDataReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}